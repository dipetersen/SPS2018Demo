{"version":3,"sources":["webpack:///sps2018demo.min.js","webpack:///webpack/bootstrap f6c0a5d3aa44a6023d4a","webpack:///./node_modules/sp-pnp-js/lib/utils/util.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/sharepointqueryable.js","webpack:///./node_modules/sp-pnp-js/lib/utils/exceptions.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/odata.js","webpack:///./node_modules/sp-pnp-js/lib/configuration/pnplibconfig.js","webpack:///./node_modules/sp-pnp-js/lib/utils/logging.js","webpack:///./node_modules/sp-pnp-js/lib/graph/graphqueryable.js","webpack:///./node_modules/sp-pnp-js/lib/odata/parsers.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/files.js","webpack:///./node_modules/sp-pnp-js/lib/collections/collections.js","webpack:///./node_modules/sp-pnp-js/lib/net/utils.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/webs.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/items.js","webpack:///./node_modules/sp-pnp-js/lib/utils/storage.js","webpack:///./node_modules/sp-pnp-js/lib/odata/core.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/lists.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/sharepointqueryableshareable.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/types.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/folders.js","webpack:///./node_modules/sp-pnp-js/lib/odata/queryable.js","webpack:///./node_modules/sp-pnp-js/lib/request/pipeline.js","webpack:///./node_modules/sp-pnp-js/lib/net/httpclient.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/roles.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/sitegroups.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/contenttypes.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/fields.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/usercustomactions.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/navigation.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/batch.js","webpack:///./build/config.js","webpack:///./node_modules/sp-pnp-js/lib/pnp.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/sp-pnp-js/lib/net/fetchclient.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/search.js","webpack:///./node_modules/sp-pnp-js/lib/odata/caching.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/searchsuggest.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/site.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/sharepointqueryablesecurable.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/siteusers.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/webparts.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/features.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/appcatalog.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/clientsidepages.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/social.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/utilities.js","webpack:///./node_modules/sp-pnp-js/lib/net/graphclient.js","webpack:///./node_modules/sp-pnp-js/lib/configuration/providers/cachingConfigurationProvider.js","webpack:///./build/main.js","webpack:///./build/compareobject.js","webpack:///./node_modules/sp-pnp-js/lib/configuration/configuration.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/rest.js","webpack:///./node_modules/sp-pnp-js/lib/net/digestcache.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/attachmentfiles.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/views.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/forms.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/subscriptions.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/regionalsettings.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/relateditems.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/userprofiles.js","webpack:///./node_modules/sp-pnp-js/lib/utils/files.js","webpack:///./node_modules/sp-pnp-js/lib/graph/rest.js","webpack:///./node_modules/sp-pnp-js/lib/graph/v1.js","webpack:///./node_modules/sp-pnp-js/lib/graph/groups.js","webpack:///./node_modules/sp-pnp-js/lib/graph/members.js","webpack:///./node_modules/sp-pnp-js/lib/graph/calendars.js","webpack:///./node_modules/sp-pnp-js/lib/graph/conversations.js","webpack:///./node_modules/sp-pnp-js/lib/graph/attachments.js","webpack:///./node_modules/sp-pnp-js/lib/graph/plans.js","webpack:///./node_modules/sp-pnp-js/lib/graph/photos.js","webpack:///./node_modules/sp-pnp-js/lib/exports/core.js","webpack:///./node_modules/sp-pnp-js/lib/configuration/providers/index.js","webpack:///./node_modules/sp-pnp-js/lib/configuration/providers/spListConfigurationProvider.js","webpack:///./node_modules/sp-pnp-js/lib/exports/graph.js","webpack:///./node_modules/sp-pnp-js/lib/graph/index.js","webpack:///./node_modules/sp-pnp-js/lib/exports/net.js","webpack:///./node_modules/sp-pnp-js/lib/net/sprequestexecutorclient.js","webpack:///./node_modules/sp-pnp-js/lib/net/nodefetchclientbrowser.js","webpack:///./node_modules/sp-pnp-js/lib/exports/odata.js","webpack:///./node_modules/sp-pnp-js/lib/exports/sp.js","webpack:///./node_modules/sp-pnp-js/lib/sharepoint/index.js","webpack:///./build/templates/edit.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","extractWebUrl","candidateUrl","index","indexOf","substr","value","pnplibconfig_1","Util","getCtxCallback","context","method","params","_i","arguments","length","apply","urlParamExists","replace","RegExp","test","location","search","getUrlParamByName","regex","results","exec","decodeURIComponent","getUrlParamBoolByName","this","stringInsert","target","substring","dateAdd","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","loadStylesheet","path","avoidCache","encodeURIComponent","toString","head","document","getElementsByTagName","e","createElement","appendChild","setAttribute","combinePaths","paths","filter","stringIsNullOrEmpty","map","join","getRandomString","chars","text","Array","possible","charAt","Math","floor","random","getGUID","r","isFunction","candidateFunction","isArray","array","constructor","extend","source","noOverwrite","check","getOwnPropertyNames","v","reduce","t","isUrlAbsolute","url","toAbsoluteUrl","Promise","resolve","RuntimeConfig","spBaseUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","forEach","__extends","extendStatics","setPrototypeOf","__proto__","b","__","create","util_1","collections_1","utils_1","exceptions_1","logging_1","queryable_1","pipeline_1","httpclient_1","SharePointQueryable","_super","baseUrl","_this","_options","_query","Dictionary","_batch","urlStr","lastIndexOf","_parentUrl","_url","slice","q","add","addBatchDependency","hasBatch","addDependency","as","factory","inBatch","batch","AlreadyInBatchException","toUrlAndQuery","aliasedParams","toUrl","match","labelName","Logger","write","LogLevel","Verbose","merge","count","getKeys","key","getParent","parentUrl","parent","configure","query","clone","additionalPath","includeBatch","toRequestContext","verb","options","parser","pipeline","PipelineMethods","default","dependencyDispose","then","mergeOptions","batchDependency","cachingOptions","_cachingOptions","clientFactory","HttpClient","isBatched","isCached","_useCaching","requestAbsoluteUrl","requestId","ODataQueryable","SharePointQueryableCollection","select","selects","expand","expands","orderBy","ascending","keys","asc","push","skip","top","SharePointQueryableInstance","defaultLog","error","log","data","level","Error","message","ProcessHttpClientResponseException","status","statusText","NoCacheAvailableException","msg","APIUrlException","AuthUrlException","NodeFetchClientUnsupportedException","SPRequestExecutorUndefinedException","MaxCommentLengthException","NotSupportedInBatchException","operation","ODataIdException","BatchParseException","FunctionExpectedException","UrlException","spExtractODataId","candidate","__metadata","id","spGetEntityUrl","entity","uri","Warning","spODataEntity","SPODataEntityParserImpl","spODataEntityArray","SPODataEntityArrayParserImpl","core_1","hydrate","parse","ODataParserBase","setRuntimeConfig","config","_runtimeConfig","set","fetchclient_1","RuntimeConfigImpl","_defaultCachingStore","_defaultCachingTimeoutSeconds","_globalCacheDisable","_enableCacheExpiration","_cacheExpirationIntervalMilliseconds","_spfxContext","_spFetchClientFactory","FetchClient","_spBaseUrl","_spHeaders","_graphHeaders","_graphFetchClientFactory","globalCacheDisable","defaultCachingStore","defaultCachingTimeoutSeconds","sp","fetchClientFactory","headers","spfxContext","graphHttpClient","graph","enableCacheExpiration","cacheExpirationIntervalMilliseconds","pageContext","web","absoluteUrl","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","writeJSON","json","JSON","stringify","entry","measure","f","subscribers","subscriber","console","profile","profileEnd","ConsoleListener","format","Info","warn","FunctionListener","graphclient_1","GraphQueryable","GraphHttpClient","GraphQueryableCollection","num","skipToken","token","GraphQueryableSearchableCollection","GraphQueryableInstance","ODataValue","ODataValueParserImpl","ODataDefaultParser","ODataRawParserImpl","ODataRaw","TextFileParser","BlobFileParser","blob","JSONFileParser","BufferFileParser","arrayBuffer","buffer","sharepointqueryable_1","parsers_1","webparts_1","items_1","sharepointqueryableshareable_1","odata_1","Files","getByName","File","concat","content","shouldOverWrite","postCore","body","response","file","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","CheckinType","Major","checkout","copyTo","delete","eTag","IF-Match","X-HTTP-Method","deny","getLimitedWebPartManager","scope","WebPartsPersonalizationScope","Shared","LimitedWebPartManager","moveTo","moveOperations","MoveOperations","Overwrite","publish","recycle","undoCheckout","unpublish","getText","binaryStringResponseBody","getBlob","getBuffer","getJSON","setContent","_","getItem","listItemAllFields","Item","fileSize","size","blockCount","parseInt","blockNumber","currentPointer","stage","totalBlocks","chain","startUpload","pointer","continueUpload","finishUpload","fragment","postAsCore","StartUpload","parseFloat","fileOffset","ContinueUpload","ServerRelativeUrl","SharePointQueryableShareableFile","getById","versionId","Version","deleteAll","deleteById","recycleByID","deleteByLabel","label","recycleByLabel","restoreByLabel","openBinaryStream","TemplateFileType","values","sourceAsDictionary_1","sourceAsHash","remove","val","splice","getValues","clear","mergeHeaders","Request","append","lists_1","fields_1","navigation_1","sitegroups_1","contenttypes_1","regionalsettings_1","folders_1","roles_1","files_1","lists_2","siteusers_1","usercustomactions_1","batch_1","features_1","relateditems_1","appcatalog_1","clientsidepages_1","Webs","webPath","title","description","template","language","inheritPermissions","props","Description","Language","Title","Url","UseSamePermissionsAsParentSite","WebTemplate","postBody","parameters","type","Web","WebInfos","fromUrl","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","ContentTypes","Lists","Fields","Features","Navigation","SiteUsers","SiteGroups","List","RegionalSettings","CurrentUser","Folders","UserCustomActions","RoleDefinitions","RelatedItemManagerImpl","FromUrl","createBatch","ODataBatch","Folder","SiteGroup","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","update","properties","deleteCore","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","loginName","logonName","user","SiteUser","availableWebTemplates","includeCrossLanugage","getCatalog","getChanges","getUserById","mapToIcon","filename","progId","getStorageEntity","getAppCatalog","AppCatalog","getClientSideWebParts","addClientSidePage","pageName","libraryTitle","ClientSidePage","lists","getByTitle","SharePointQueryableShareableWeb","attachmentfiles_1","pnp_1","Items","getItemByStringId","stringId","reverse","getPaged","getAs","PagedItemCollectionParser","getAll","requestSize","items","Accept","k","reject","itemsCollector","gatherer","last","hasNext","getNext","catch","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","promise","item","Id","candidatelistItemEntityTypeFullName","getListItemEntityTypeFullName","AttachmentFiles","ContentType","ItemVersions","ItemUpdatedParser","getWopiFrameUrl","action","GetWOPIFrameUrl","validateUpdateListItem","formValues","newDocumentUpdate","bNewDocumentUpdate","SharePointQueryableShareableItem","PagedItemCollection","nextUrl","ItemVersion","handleError","__next","parseODataJSON","odata.etag","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","cacheExpirationHandler","persistable","expiration","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","pnp","setTimeout","MemoryStorage","_store","PnPClientStorage","_local","_session","localStorage","sessionStorage","has","txt","ok","responseBody","responseHeaders","result","views_1","forms_1","subscriptions_1","sharepointqueryablesecurable_1","list","enableContentTypes","additionalSettings","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","Views","Forms","View","Subscriptions","getView","viewId","retList","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","mode","ListData","reserveListItemId","ReserveListItemId","ListItemEntityTypeFullName","SharePointQueryableSecurable","webs_1","types_1","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","login","Key","roleFilter","SharingRole","Edit","RoleType","Contributor","Reader","roleDefinitions","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","group","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","associatedMemberGroup","g","Guest","associatedVisitorGroup","getShareObjectWeb","dependency","shareObjectRaw","SharingLinkKind","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","FileFolderShared","getShareable","shareable","SharePointQueryableShareableFolder","shareEverything","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","ChoiceFieldFormatType","PermissionKind","PrincipalType","PrincipalSource","PageType","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","folder","pathPart","usingCaching","pipe","patchCore","returnResult","setResult","hasResult","next","shift","ctx","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","caching_1","logStart","caching","cacheOptions","CachingOptions","CachingParserWrapper","send","batchId","client","opts","fetch","logEnd","digestcache_1","_impl","spFetchClientFactory","_digestCache","DigestCache","cache","credentials","Headers","spHeaders","toUpperCase","webUrl","getDigest","digest","fetchRaw","rawHeaders","retry","delay","attempts","retryCount","retryContext","post","patch","RoleAssignments","principalId","roleDefId","ra","RoleAssignment","RoleDefinitionBindings","RoleDefinition","getByType","roleTypeKind","order","basePermissions","BasePermissions","Name","Order","definition","retDef","groupName","sg","removeById","removeByLoginName","retGroup","ct","addAvailableContentType","contentTypeId","contentType","Group","StringValue","FieldLinks","fl","FieldLink","Field","getByInternalNameOrTitle","createFieldAsXml","xml","info","SchemaXml","field","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","uca","UserCustomAction","NavigationNodes","node","NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","_batchId","_requests","_dependencies","ParseResponse","responses","statusRegExp","lines","split","state","line","trim","parts","Response","resolver","execute","all","executeImpl","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","batchHeaders","Content-Type","batchOptions","appname","debug","__export","storage_1","configuration_1","rest_1","rest_2","util","SPRest","GraphRest","storage","Settings","setup","Def","Function","eval","window","SearchQueryBuilder","queryText","extendQuery","Querytext","queryTemplate","QueryTemplate","sourceId","SourceId","EnableInterleaving","EnableStemming","TrimDuplicates","trimDuplicatesIncludeId","TrimDuplicatesIncludeId","EnableNicknames","EnableFQL","EnablePhonetic","BypassResultTypes","ProcessBestBets","EnableQueryRules","EnableSorting","GenerateBlockRankLog","rankingModelId","RankingModelId","startRow","StartRow","rowLimit","RowLimit","rowsPerPage","RowsPerPage","selectProperties","SelectProperties","culture","Culture","timeZoneId","TimeZoneId","refinementFilters","filters","RefinementFilters","refiners","Refiners","hiddenConstraints","constraints","HiddenConstraints","sortList","sorts","SortList","timeout","milliseconds","Timeout","hithighlightedProperties","HitHighlightedProperties","clientType","ClientType","personalizationData","PersonalizationData","resultsURL","ResultsUrl","queryTag","tags","QueryTag","Properties","ProcessPersonalFavorites","queryTemplatePropertiesUrl","QueryTemplatePropertiesUrl","reorderingRules","rules","ReorderingRules","hitHighlightedMultivaluePropertyLimit","limit","HitHighlightedMultivaluePropertyLimit","EnableOrderingHitHighlightedProperty","collapseSpecification","spec","CollapseSpecification","uiLanguage","lang","UILanguage","desiredSnippetLength","len","DesiredSnippetLength","maxSnippetLength","MaxSnippetLength","summaryLength","SummaryLength","toSearchQuery","part","Search","formattedBody","fixupProp","HithighlightedProperties","SearchResults","prop","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","rawResults","tempResults","tempResults_1","tempResult","cells","Cells","res","cell","Value","writable","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","storeName","local","session","_parser","_cacheOptions","SearchSuggest","mapQueryToQueryString","SearchSuggestResult","querytext","personalCount","preQuery","hitHighlighting","capitalize","stemming","includePeople","queryRules","prefixMatch","PeopleNames","suggest","PersonalResults","Queries","Site","getContextInfo","GetContextWebInformation","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","openWebById","webId","getUserEffectivePermissions","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","currentUser","LoginName","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","low","Low","high","High","FullMask","getByEmail","email","getByLoginName","su","WebPartDefinitions","export","webPartId","import","webPartXml","WebPartDefinition","getByControlId","WebPart","saveChanges","zoneId","zoneIndex","close","open","feature","Feature","force","featdefScope","featureId","deactivate","DefinitionId","getAppById","App","deploy","retract","install","uninstall","upgrade","getNextOrder","collection","max","regexIndexOf","startpos","getAttrValueFromString","html","attrName","reg","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","reindex","columns","controls","sections","commentsDisabled","library","pageLayoutType","rootFolder","files","fs","pageServerRelPath","ServerRelativePath","DecodedUrl","far","BannerImageUrl","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","PromotedState","iar","CommentsDisabled","fromFile","page","load","jsonToEscapedString","escapedStringToJson","escapedString","addSection","section","CanvasSection","toHtml","fromHtml","controlType","control","CanvasColumn","mergeColumnToTree","ClientSideWebpart","mergeControlToTree","ClientSideText","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","j","on","column","controlData","position","sectionIndex","sectionFactor","addControl","addColumn","factor","defaultColumn","CanvasControl","dataVersion","getControlData","getControl","jsonData","displayMode","_text","startsWith","editorType","controlIndex","propertieJson","htmlProperties","serverProcessedContent","fromComponentDef","component","manifest","Manifest","preconfiguredEntries","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","SocialQuery","MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","UtilityMethod","methodName","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","maxCount","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","graphFetchClientFactory","graphHeaders","CachingConfigurationProvider","wrappedProvider","cacheKey","cacheStore","selectPnPCache","getWrappedProvider","getConfiguration","cachedConfig","providerPromise","providedConfig","pnpCache","_interopRequireDefault","obj","Toast","toastr","$","closeButton","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","HandleNavLinkClicks","preventDefault","formData","EmptyDataObject","_edit2","DisplayList","HandleAvatarClick","img","GetRandomImage","src","avatar","HandleEditFormButton","_spPnpJs2","demodata","origItem","find","_compareobject","IsEqual","idx","findIndex","GetRandomInt","generators","HandleFormChange","refresh","dataTableConfig","pageLength","render","className","orderable","DataTable","el","EditListItem","itm","DeleteListItem","_config","_spPnpJs","_edit","last_name","company","ready","a","atype","whatis","_equal","_typeof","Symbol","iterator","getClass","compareObjects","compareArrays","regexp","_settings","addJSON","hash","provider","reason","search_1","searchsuggest_1","site_1","userprofiles_1","social_1","utilities_1","_baseUrl","searchSuggest","finalQuery","UserProfileQuery","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","CachedDigest","digests","_httpClient","_digests","cachedDigest","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","AttachmentFile","addMultiple","deleteMultiple","recycleMultiple","personalView","PersonalView","view","ViewFields","renderAsHtml","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","removeAll","Form","subscriptionId","subscription","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","resource","InstalledLanguages","TimeZone","TimeZones","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","readBlobAsArrayBuffer","String","fromCharCode","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","emailIDs","readBlobAsText","readBlobAs","reader","FileReader","onload","readAsText","readAsArrayBuffer","v1_1","V1","graphqueryable_1","groups_1","Groups","GroupType","members_1","calendars_1","conversations_1","plans_1","photos_1","mailNickname","groupType","additionalProperties","displayName","mailEnabled","Office365","securityEnabled","Security","groupTypes","Calendar","Events","Owners","Plans","Members","Conversations","Senders","Photo","addFavorite","getMemberGroups","securityEnabledOnly","removeFavorite","resetUnseenCount","subscribeByMail","unsubscribeByMail","getCalendarView","start","end","@odata.id","Member","Calendars","Event","event","attachments_1","Conversation","Threads","Thread","Posts","Post","reply","Attachments","forward","remover","Attachment","addFile","bytes","@odata.type","contentBytes","Plan","cachingConfigurationProvider_1","spListConfigurationProvider_1","SPListConfigurationProvider","sourceWeb","sourceListTitle","listTitle","configuration","asCaching","sprequestexecutorclient_1","SPRequestExecutorClient","nodefetchclient_1","NodeFetchClient","convertToResponse","spResponse","h","statusCode","SP","RequestExecutor","temp","addinWebUrl","executor","entries","done","isBinaryRequest","requestOptions","success","binaryStringRequestBody","executeAsync","_config2"],"mappings":"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","file":"sps2018demo.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 47);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pnplibconfig_1 = __webpack_require__(4);\nfunction extractWebUrl(candidateUrl) {\n    if (candidateUrl === null) {\n        return \"\";\n    }\n    var index = candidateUrl.indexOf(\"_api/\");\n    if (index > -1) {\n        return candidateUrl.substr(0, index);\n    }\n    // if all else fails just give them what they gave us back\n    return candidateUrl;\n}\nexports.extractWebUrl = extractWebUrl;\nvar Util = /** @class */ (function () {\n    function Util() {\n    }\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    Util.getCtxCallback = function (context, method) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function () {\n            method.apply(context, params);\n        };\n    };\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    Util.urlParamExists = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    };\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    Util.getUrlParamByName = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        var results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    Util.getUrlParamBoolByName = function (name) {\n        var p = this.getUrlParamByName(name);\n        var isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    };\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    Util.stringInsert = function (target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    };\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    Util.dateAdd = function (date, interval, units) {\n        var ret = new Date(date); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    };\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    Util.loadStylesheet = function (path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        var head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            var e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    };\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    Util.combinePaths = function () {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        return paths\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    };\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    Util.getRandomString = function (chars) {\n        var text = new Array(chars);\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    };\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    Util.getGUID = function () {\n        var d = new Date().getTime();\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    Util.isFunction = function (candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    Util.isArray = function (array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    };\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    Util.stringIsNullOrEmpty = function (s) {\n        return typeof s === \"undefined\" || s === null || s.length < 1;\n    };\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    Util.extend = function (target, source, noOverwrite) {\n        if (noOverwrite === void 0) { noOverwrite = false; }\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\n        return Object.getOwnPropertyNames(source)\n            .filter(function (v) { return check(target, v); })\n            .reduce(function (t, v) {\n            t[v] = source[v];\n            return t;\n        }, target);\n    };\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    Util.isUrlAbsolute = function (url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    };\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    Util.toAbsoluteUrl = function (candidateUrl) {\n        return new Promise(function (resolve) {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.spBaseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.spBaseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have a certain path part in it?\n            if (typeof global.location !== \"undefined\") {\n                var baseUrl_1 = global.location.toString().toLowerCase();\n                [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\n                    var index = baseUrl_1.indexOf(s);\n                    if (index > 0) {\n                        return resolve(Util.combinePaths(baseUrl_1.substr(0, index), candidateUrl));\n                    }\n                });\n            }\n            return resolve(candidateUrl);\n        });\n    };\n    return Util;\n}());\nexports.Util = Util;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(9);\nvar utils_1 = __webpack_require__(10);\nvar exceptions_1 = __webpack_require__(2);\nvar logging_1 = __webpack_require__(5);\nvar queryable_1 = __webpack_require__(19);\nvar pipeline_1 = __webpack_require__(20);\nvar httpclient_1 = __webpack_require__(21);\n/**\n * SharePointQueryable Base Class\n *\n */\nvar SharePointQueryable = /** @class */ (function (_super) {\n    __extends(SharePointQueryable, _super);\n    /**\n     * Creates a new instance of the SharePointQueryable class\n     *\n     * @constructor\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\n     *\n     */\n    function SharePointQueryable(baseUrl, path) {\n        var _this = _super.call(this) || this;\n        _this._options = {};\n        _this._query = new collections_1.Dictionary();\n        _this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            var urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                _this._parentUrl = urlStr;\n                _this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                var index = urlStr.lastIndexOf(\"/\");\n                _this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                _this._url = util_1.Util.combinePaths(_this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                var index = urlStr.lastIndexOf(\"(\");\n                _this._parentUrl = urlStr.slice(0, index);\n                _this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            var q = baseUrl;\n            _this._parentUrl = q._url;\n            _this._options = q._options;\n            var target = q._query.get(\"@target\");\n            if (target !== null) {\n                _this._query.add(\"@target\", target);\n            }\n            _this._url = util_1.Util.combinePaths(_this._parentUrl, path);\n        }\n        return _this;\n    }\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    SharePointQueryable.prototype.addBatchDependency = function () {\n        if (this.hasBatch) {\n            return this._batch.addDependency();\n        }\n        return function () { return null; };\n    };\n    Object.defineProperty(SharePointQueryable.prototype, \"hasBatch\", {\n        /**\n         * Indicates if the current query has a batch associated\n         *\n         */\n        get: function () {\n            return this._batch !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SharePointQueryable.prototype, \"batch\", {\n        /**\n         * The batch currently associated with this query or null\n         *\n         */\n        get: function () {\n            return this.hasBatch ? this._batch : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new SharePointQueryable\n     */\n    SharePointQueryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    SharePointQueryable.prototype.inBatch = function (batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\n        var aliasedParams = new collections_1.Dictionary();\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\n            logging_1.Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, logging_1.LogLevel.Verbose);\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\n            return labelName;\n        });\n        // inlude our explicitly set query string params\n        aliasedParams.merge(this._query);\n        if (aliasedParams.count() > 0) {\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\n        }\n        return url;\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        var parent = new factory(baseUrl, path);\n        parent.configure(this._options);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        if (typeof batch !== \"undefined\") {\n            parent = parent.inBatch(batch);\n        }\n        return parent;\n    };\n    /**\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = true; }\n        var clone = new factory(this, additionalPath);\n        clone.configure(this._options);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (pipeline === void 0) { pipeline = pipeline_1.PipelineMethods.default; }\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\n            utils_1.mergeOptions(options, _this._options);\n            // build our request context\n            var context = {\n                batch: _this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: _this._cachingOptions,\n                clientFactory: function () { return new httpclient_1.HttpClient(); },\n                isBatched: _this.hasBatch,\n                isCached: _this._useCaching,\n                options: options,\n                parser: parser,\n                pipeline: pipeline,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    };\n    return SharePointQueryable;\n}(queryable_1.ODataQueryable));\nexports.SharePointQueryable = SharePointQueryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\n    __extends(SharePointQueryableCollection, _super);\n    function SharePointQueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    SharePointQueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    SharePointQueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    SharePointQueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    SharePointQueryableCollection.prototype.skip = function (skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    SharePointQueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    return SharePointQueryableCollection;\n}(SharePointQueryable));\nexports.SharePointQueryableCollection = SharePointQueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\n    __extends(SharePointQueryableInstance, _super);\n    function SharePointQueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    SharePointQueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    SharePointQueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return SharePointQueryableInstance;\n}(SharePointQueryable));\nexports.SharePointQueryableInstance = SharePointQueryableInstance;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = __webpack_require__(5);\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\n    __extends(ProcessHttpClientResponseException, _super);\n    function ProcessHttpClientResponseException(status, statusText, data) {\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\n        _this.status = status;\n        _this.statusText = statusText;\n        _this.data = data;\n        _this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ProcessHttpClientResponseException;\n}(Error));\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nvar NoCacheAvailableException = /** @class */ (function (_super) {\n    __extends(NoCacheAvailableException, _super);\n    function NoCacheAvailableException(msg) {\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NoCacheAvailableException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NoCacheAvailableException;\n}(Error));\nexports.NoCacheAvailableException = NoCacheAvailableException;\nvar APIUrlException = /** @class */ (function (_super) {\n    __extends(APIUrlException, _super);\n    function APIUrlException(msg) {\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return APIUrlException;\n}(Error));\nexports.APIUrlException = APIUrlException;\nvar AuthUrlException = /** @class */ (function (_super) {\n    __extends(AuthUrlException, _super);\n    function AuthUrlException(data, msg) {\n        if (msg === void 0) { msg = \"Auth URL Endpoint could not be determined from data. Data logged.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return AuthUrlException;\n}(Error));\nexports.AuthUrlException = AuthUrlException;\nvar NodeFetchClientUnsupportedException = /** @class */ (function (_super) {\n    __extends(NodeFetchClientUnsupportedException, _super);\n    function NodeFetchClientUnsupportedException(msg) {\n        if (msg === void 0) { msg = \"Using NodeFetchClient in the browser is not supported.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NodeFetchClientUnsupportedException;\n}(Error));\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nvar SPRequestExecutorUndefinedException = /** @class */ (function (_super) {\n    __extends(SPRequestExecutorUndefinedException, _super);\n    function SPRequestExecutorUndefinedException() {\n        var _this = this;\n        var msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        _this = _super.call(this, msg) || this;\n        _this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return SPRequestExecutorUndefinedException;\n}(Error));\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nvar MaxCommentLengthException = /** @class */ (function (_super) {\n    __extends(MaxCommentLengthException, _super);\n    function MaxCommentLengthException(msg) {\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"MaxCommentLengthException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return MaxCommentLengthException;\n}(Error));\nexports.MaxCommentLengthException = MaxCommentLengthException;\nvar NotSupportedInBatchException = /** @class */ (function (_super) {\n    __extends(NotSupportedInBatchException, _super);\n    function NotSupportedInBatchException(operation) {\n        if (operation === void 0) { operation = \"This operation\"; }\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\n        _this.name = \"NotSupportedInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NotSupportedInBatchException;\n}(Error));\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nvar ODataIdException = /** @class */ (function (_super) {\n    __extends(ODataIdException, _super);\n    function ODataIdException(data, msg) {\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ODataIdException;\n}(Error));\nexports.ODataIdException = ODataIdException;\nvar BatchParseException = /** @class */ (function (_super) {\n    __extends(BatchParseException, _super);\n    function BatchParseException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"BatchParseException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return BatchParseException;\n}(Error));\nexports.BatchParseException = BatchParseException;\nvar AlreadyInBatchException = /** @class */ (function (_super) {\n    __extends(AlreadyInBatchException, _super);\n    function AlreadyInBatchException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"AlreadyInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return AlreadyInBatchException;\n}(Error));\nexports.AlreadyInBatchException = AlreadyInBatchException;\nvar FunctionExpectedException = /** @class */ (function (_super) {\n    __extends(FunctionExpectedException, _super);\n    function FunctionExpectedException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"FunctionExpectedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return FunctionExpectedException;\n}(Error));\nexports.FunctionExpectedException = FunctionExpectedException;\nvar UrlException = /** @class */ (function (_super) {\n    __extends(UrlException, _super);\n    function UrlException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"UrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return UrlException;\n}(Error));\nexports.UrlException = UrlException;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar logging_1 = __webpack_require__(5);\nvar exceptions_1 = __webpack_require__(2);\nvar core_1 = __webpack_require__(14);\nfunction spExtractODataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.spExtractODataId = spExtractODataId;\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\n    __extends(SPODataEntityParserImpl, _super);\n    function SPODataEntityParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.hydrate = function (d) {\n            var o = new _this.factory(spGetEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        };\n        return _this;\n    }\n    SPODataEntityParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            var o = new _this.factory(spGetEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    };\n    return SPODataEntityParserImpl;\n}(core_1.ODataParserBase));\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\n    __extends(SPODataEntityArrayParserImpl, _super);\n    function SPODataEntityArrayParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.hydrate = function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(spGetEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        };\n        return _this;\n    }\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(spGetEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    };\n    return SPODataEntityArrayParserImpl;\n}(core_1.ODataParserBase));\nfunction spGetEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.metadata\") && entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(util_1.extractWebUrl(entity[\"odata.metadata\"]), \"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.spGetEntityUrl = spGetEntityUrl;\nfunction spODataEntity(factory) {\n    return new SPODataEntityParserImpl(factory);\n}\nexports.spODataEntity = spODataEntity;\nfunction spODataEntityArray(factory) {\n    return new SPODataEntityArrayParserImpl(factory);\n}\nexports.spODataEntityArray = spODataEntityArray;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fetchclient_1 = __webpack_require__(32);\nvar RuntimeConfigImpl = /** @class */ (function () {\n    function RuntimeConfigImpl() {\n        // these are our default values for the library\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 60;\n        this._globalCacheDisable = false;\n        this._enableCacheExpiration = false;\n        this._cacheExpirationIntervalMilliseconds = 750;\n        this._spfxContext = null;\n        // sharepoint settings\n        this._spFetchClientFactory = function () { return new fetchclient_1.FetchClient(); };\n        this._spBaseUrl = null;\n        this._spHeaders = null;\n        // ms graph settings\n        this._graphHeaders = null;\n        this._graphFetchClientFactory = function () { return null; };\n    }\n    RuntimeConfigImpl.prototype.set = function (config) {\n        var _this = this;\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"sp\")) {\n            if (config.sp.hasOwnProperty(\"fetchClientFactory\")) {\n                this._spFetchClientFactory = config.sp.fetchClientFactory;\n            }\n            if (config.sp.hasOwnProperty(\"baseUrl\")) {\n                this._spBaseUrl = config.sp.baseUrl;\n            }\n            if (config.sp.hasOwnProperty(\"headers\")) {\n                this._spHeaders = config.sp.headers;\n            }\n        }\n        if (config.hasOwnProperty(\"spfxContext\")) {\n            this._spfxContext = config.spfxContext;\n            if (typeof this._spfxContext.graphHttpClient !== \"undefined\") {\n                this._graphFetchClientFactory = function () { return _this._spfxContext.graphHttpClient; };\n            }\n        }\n        if (config.hasOwnProperty(\"graph\")) {\n            if (config.graph.hasOwnProperty(\"headers\")) {\n                this._graphHeaders = config.graph.headers;\n            }\n            // this comes after the default setting of the _graphFetchClientFactory client so it can be overwritten\n            if (config.graph.hasOwnProperty(\"fetchClientFactory\")) {\n                this._graphFetchClientFactory = config.graph.fetchClientFactory;\n            }\n        }\n        if (config.hasOwnProperty(\"enableCacheExpiration\")) {\n            this._enableCacheExpiration = config.enableCacheExpiration;\n        }\n        if (config.hasOwnProperty(\"cacheExpirationIntervalMilliseconds\")) {\n            // we don't let the interval be less than 300 milliseconds\n            var interval = config.cacheExpirationIntervalMilliseconds < 300 ? 300 : config.cacheExpirationIntervalMilliseconds;\n            this._cacheExpirationIntervalMilliseconds = interval;\n        }\n    };\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\n        get: function () {\n            return this._defaultCachingStore;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\n        get: function () {\n            return this._defaultCachingTimeoutSeconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\n        get: function () {\n            return this._globalCacheDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spFetchClientFactory\", {\n        get: function () {\n            return this._spFetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spBaseUrl\", {\n        get: function () {\n            if (this._spBaseUrl !== null) {\n                return this._spBaseUrl;\n            }\n            else if (this._spfxContext !== null) {\n                return this._spfxContext.pageContext.web.absoluteUrl;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spHeaders\", {\n        get: function () {\n            return this._spHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\n        get: function () {\n            return this._enableCacheExpiration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\n        get: function () {\n            return this._cacheExpirationIntervalMilliseconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\n        get: function () {\n            return this._spfxContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"graphFetchClientFactory\", {\n        get: function () {\n            return this._graphFetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"graphHeaders\", {\n        get: function () {\n            return this._graphHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RuntimeConfigImpl;\n}());\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nvar _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nvar Logger = /** @class */ (function () {\n    function Logger() {\n    }\n    Object.defineProperty(Logger, \"activeLogLevel\", {\n        get: function () {\n            return Logger.instance.activeLogLevel;\n        },\n        set: function (value) {\n            Logger.instance.activeLogLevel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger, \"instance\", {\n        get: function () {\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n                Logger._instance = new LoggerImpl();\n            }\n            return Logger._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    Logger.subscribe = function () {\n        var listeners = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            listeners[_i] = arguments[_i];\n        }\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\n    };\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    Logger.clearSubscribers = function () {\n        return Logger.instance.clearSubscribers();\n    };\n    Object.defineProperty(Logger, \"count\", {\n        /**\n         * Gets the current subscriber count\n         */\n        get: function () {\n            return Logger.instance.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: message });\n    };\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.writeJSON = function (json, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    };\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    Logger.log = function (entry) {\n        Logger.instance.log(entry);\n    };\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    Logger.measure = function (name, f) {\n        return Logger.instance.measure(name, f);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\nvar LoggerImpl = /** @class */ (function () {\n    function LoggerImpl(activeLogLevel, subscribers) {\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\n        if (subscribers === void 0) { subscribers = []; }\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    LoggerImpl.prototype.subscribe = function (listener) {\n        this.subscribers.push(listener);\n    };\n    LoggerImpl.prototype.clearSubscribers = function () {\n        var s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    };\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\n        get: function () {\n            return this.subscribers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        this.log({ level: level, message: message });\n    };\n    LoggerImpl.prototype.log = function (entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\n    };\n    LoggerImpl.prototype.measure = function (name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    };\n    return LoggerImpl;\n}());\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nvar ConsoleListener = /** @class */ (function () {\n    function ConsoleListener() {\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    ConsoleListener.prototype.log = function (entry) {\n        var msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    };\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    ConsoleListener.prototype.format = function (entry) {\n        var msg = [];\n        msg.push(\"Message: \" + entry.message);\n        if (typeof entry.data !== \"undefined\") {\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\n        }\n        return msg.join(\"\");\n    };\n    return ConsoleListener;\n}());\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nvar FunctionListener = /** @class */ (function () {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    function FunctionListener(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    FunctionListener.prototype.log = function (entry) {\n        this.method(entry);\n    };\n    return FunctionListener;\n}());\nexports.FunctionListener = FunctionListener;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(9);\nvar graphclient_1 = __webpack_require__(45);\nvar queryable_1 = __webpack_require__(19);\nvar pipeline_1 = __webpack_require__(20);\n/**\n * Queryable Base Class\n *\n */\nvar GraphQueryable = /** @class */ (function (_super) {\n    __extends(GraphQueryable, _super);\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    function GraphQueryable(baseUrl, path) {\n        var _this = _super.call(this) || this;\n        _this._query = new collections_1.Dictionary();\n        if (typeof baseUrl === \"string\") {\n            var urlStr = baseUrl;\n            _this._parentUrl = urlStr;\n            _this._url = util_1.Util.combinePaths(urlStr, path);\n        }\n        else {\n            var q = baseUrl;\n            _this._parentUrl = q._url;\n            _this._url = util_1.Util.combinePaths(_this._parentUrl, path);\n        }\n        return _this;\n    }\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new queryable\n     */\n    GraphQueryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    GraphQueryable.prototype.toUrlAndQuery = function () {\n        var _this = this;\n        return this.toUrl() + (\"?\" + this._query.getKeys().map(function (key) { return key + \"=\" + _this._query.get(key); }).join(\"&\"));\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    GraphQueryable.prototype.getParent = function (factory, baseUrl, path) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        return new factory(baseUrl, path);\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    GraphQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = true; }\n        // TODO:: include batching info in clone\n        if (includeBatch) {\n            return new factory(this, additionalPath);\n        }\n        return new factory(this, additionalPath);\n    };\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    GraphQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\n        if (options === void 0) { options = {}; }\n        if (pipeline === void 0) { pipeline = pipeline_1.PipelineMethods.default; }\n        // TODO:: add batch support\n        return Promise.resolve({\n            batch: null,\n            batchDependency: function () { return void (0); },\n            cachingOptions: this._cachingOptions,\n            clientFactory: function () { return new graphclient_1.GraphHttpClient(); },\n            isBatched: false,\n            isCached: this._useCaching,\n            options: options,\n            parser: parser,\n            pipeline: pipeline,\n            requestAbsoluteUrl: this.toUrlAndQuery(),\n            requestId: util_1.Util.getGUID(),\n            verb: verb,\n        });\n    };\n    return GraphQueryable;\n}(queryable_1.ODataQueryable));\nexports.GraphQueryable = GraphQueryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar GraphQueryableCollection = /** @class */ (function (_super) {\n    __extends(GraphQueryableCollection, _super);\n    function GraphQueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @param filter The string representing the filter query\n     */\n    GraphQueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    GraphQueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    GraphQueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    GraphQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    GraphQueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    /**\n     * Skips a set number of items in the return set\n     *\n     * @param num Number of items to skip\n     */\n    GraphQueryableCollection.prototype.skip = function (num) {\n        this._query.add(\"$top\", num.toString());\n        return this;\n    };\n    /**\n     * \tTo request second and subsequent pages of Graph data\n     */\n    GraphQueryableCollection.prototype.skipToken = function (token) {\n        this._query.add(\"$skiptoken\", token);\n        return this;\n    };\n    Object.defineProperty(GraphQueryableCollection.prototype, \"count\", {\n        /**\n         * \tRetrieves the total count of matching resources\n         */\n        get: function () {\n            this._query.add(\"$count\", \"true\");\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GraphQueryableCollection;\n}(GraphQueryable));\nexports.GraphQueryableCollection = GraphQueryableCollection;\nvar GraphQueryableSearchableCollection = /** @class */ (function (_super) {\n    __extends(GraphQueryableSearchableCollection, _super);\n    function GraphQueryableSearchableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * \tTo request second and subsequent pages of Graph data\n     */\n    GraphQueryableSearchableCollection.prototype.search = function (query) {\n        this._query.add(\"$search\", query);\n        return this;\n    };\n    return GraphQueryableSearchableCollection;\n}(GraphQueryableCollection));\nexports.GraphQueryableSearchableCollection = GraphQueryableSearchableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar GraphQueryableInstance = /** @class */ (function (_super) {\n    __extends(GraphQueryableInstance, _super);\n    function GraphQueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    GraphQueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    GraphQueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return GraphQueryableInstance;\n}(GraphQueryable));\nexports.GraphQueryableInstance = GraphQueryableInstance;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = __webpack_require__(14);\nvar util_1 = __webpack_require__(0);\nvar ODataDefaultParser = /** @class */ (function (_super) {\n    __extends(ODataDefaultParser, _super);\n    function ODataDefaultParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ODataDefaultParser;\n}(core_1.ODataParserBase));\nexports.ODataDefaultParser = ODataDefaultParser;\nvar ODataValueParserImpl = /** @class */ (function (_super) {\n    __extends(ODataValueParserImpl, _super);\n    function ODataValueParserImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ODataValueParserImpl.prototype.parse = function (r) {\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\n    };\n    return ODataValueParserImpl;\n}(core_1.ODataParserBase));\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nvar ODataRawParserImpl = /** @class */ (function () {\n    function ODataRawParserImpl() {\n    }\n    ODataRawParserImpl.prototype.parse = function (r) {\n        return r.json();\n    };\n    return ODataRawParserImpl;\n}());\nexports.ODataRawParserImpl = ODataRawParserImpl;\nexports.ODataRaw = new ODataRawParserImpl();\nvar TextFileParser = /** @class */ (function () {\n    function TextFileParser() {\n    }\n    TextFileParser.prototype.parse = function (r) {\n        return r.text();\n    };\n    return TextFileParser;\n}());\nexports.TextFileParser = TextFileParser;\nvar BlobFileParser = /** @class */ (function () {\n    function BlobFileParser() {\n    }\n    BlobFileParser.prototype.parse = function (r) {\n        return r.blob();\n    };\n    return BlobFileParser;\n}());\nexports.BlobFileParser = BlobFileParser;\nvar JSONFileParser = /** @class */ (function () {\n    function JSONFileParser() {\n    }\n    JSONFileParser.prototype.parse = function (r) {\n        return r.json();\n    };\n    return JSONFileParser;\n}());\nexports.JSONFileParser = JSONFileParser;\nvar BufferFileParser = /** @class */ (function () {\n    function BufferFileParser() {\n    }\n    BufferFileParser.prototype.parse = function (r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    };\n    return BufferFileParser;\n}());\nexports.BufferFileParser = BufferFileParser;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar parsers_1 = __webpack_require__(7);\nvar util_1 = __webpack_require__(0);\nvar exceptions_1 = __webpack_require__(2);\nvar webparts_1 = __webpack_require__(39);\nvar items_1 = __webpack_require__(12);\nvar sharepointqueryableshareable_1 = __webpack_require__(16);\nvar odata_1 = __webpack_require__(3);\n/**\n * Describes a collection of File objects\n *\n */\nvar Files = /** @class */ (function (_super) {\n    __extends(Files, _super);\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Files(baseUrl, path) {\n        if (path === void 0) { path = \"files\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    Files.prototype.getByName = function (name) {\n        var f = new File(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.add = function (url, content, shouldOverWrite) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\n            .postCore({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\n        return adder.postCore()\n            .then(function () { return _this.getByName(url); })\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\n    };\n    /**\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\n        var _this = this;\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\n            .postCore().then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(fileUrl),\n            };\n        });\n    };\n    return Files;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nvar File = /** @class */ (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\n        /**\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"versions\", {\n        /**\n         * Gets a collection of versions\n         *\n         */\n        get: function () {\n            return new Versions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    File.prototype.approve = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\n    };\n    /**\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    File.prototype.cancelUpload = function (uploadId) {\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\n    };\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    File.prototype.checkin = function (comment, checkinType) {\n        if (comment === void 0) { comment = \"\"; }\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\n    };\n    /**\n     * Checks out the file from a document library.\n     */\n    File.prototype.checkout = function () {\n        return this.clone(File, \"checkout\").postCore();\n    };\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    File.prototype.copyTo = function (url, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\n    };\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    File.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(File, null).postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    File.prototype.deny = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\n    };\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    File.prototype.getLimitedWebPartManager = function (scope) {\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\n        return new webparts_1.LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n    };\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    File.prototype.moveTo = function (url, moveOperations) {\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\n    };\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    File.prototype.publish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\n    };\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    File.prototype.recycle = function () {\n        return this.clone(File, \"recycle\").postCore();\n    };\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    File.prototype.undoCheckout = function () {\n        return this.clone(File, \"undoCheckout\").postCore();\n    };\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    File.prototype.unpublish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\n    };\n    /**\n     * Gets the contents of the file as text. Not supported in batching.\n     *\n     */\n    File.prototype.getText = function () {\n        return this.clone(File, \"$value\", false).get(new parsers_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\n     *\n     */\n    File.prototype.getBlob = function () {\n        return this.clone(File, \"$value\", false).get(new parsers_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getBuffer = function () {\n        return this.clone(File, \"$value\", false).get(new parsers_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getJSON = function () {\n        return this.clone(File, \"$value\", false).get(new parsers_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\n     *\n     * @param content The file content\n     *\n     */\n    File.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(File, \"$value\", false).postCore({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new File(_this); });\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    File.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.spGetEntityUrl(d)), d);\n        });\n    };\n    /**\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\n        var _this = this;\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        if (typeof progress === \"undefined\") {\n            progress = function () { return null; };\n        }\n        var fileSize = file.size;\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        var uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\n        var _loop_1 = function (i) {\n            chain = chain.then(function (pointer) {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        };\n        // skip the first and last blocks\n        for (var i = 2; i < blockCount; i++) {\n            _loop_1(i);\n        }\n        return chain.then(function (pointer) {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\n        });\n    };\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.startUpload = function (uploadId, fragment) {\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\n            .postAsCore({ body: fragment })\n            .then(function (n) {\n            // When OData=verbose the payload has the following shape:\n            // { StartUpload: \"10485760\" }\n            if (typeof n === \"object\") {\n                n = n.StartUpload;\n            }\n            return parseFloat(n);\n        });\n    };\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\n            .postAsCore({ body: fragment })\n            .then(function (n) {\n            // When OData=verbose the payload has the following shape:\n            // { ContinueUpload: \"20971520\" }\n            if (typeof n === \"object\") {\n                n = n.ContinueUpload;\n            }\n            return parseFloat(n);\n        });\n    };\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\n            .postAsCore({ body: fragment })\n            .then(function (response) {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    };\n    return File;\n}(sharepointqueryableshareable_1.SharePointQueryableShareableFile));\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nvar Versions = /** @class */ (function (_super) {\n    __extends(Versions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Versions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    Versions.prototype.getById = function (versionId) {\n        var v = new Version(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    Versions.prototype.deleteAll = function () {\n        return new Versions(this, \"deleteAll\").postCore();\n    };\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.deleteById = function (versionId) {\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\").postCore();\n    };\n    /**\n     * Recycles the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.recycleByID = function (versionId) {\n        return this.clone(Versions, \"recycleByID(vid=\" + versionId + \")\").postCore();\n    };\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.deleteByLabel = function (label) {\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\n    };\n    /**\n     * REcycles the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.recycleByLabel = function (label) {\n        return this.clone(Versions, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\n    };\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    Versions.prototype.restoreByLabel = function (label) {\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\n    };\n    return Versions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nvar Version = /** @class */ (function (_super) {\n    __extends(Version, _super);\n    function Version() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Version.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Opens the file as a stream.\n     */\n    Version.prototype.openBinaryStream = function () {\n        return this.clone(Version, \"openBinaryStream\").postCore();\n    };\n    return Version;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nfunction mergeOptions(target, source) {\n    target.headers = target.headers || {};\n    var headers = util_1.Util.extend(target.headers, source.headers);\n    target = util_1.Util.extend(target, source);\n    target.headers = headers;\n}\nexports.mergeOptions = mergeOptions;\nfunction mergeHeaders(target, source) {\n    if (typeof source !== \"undefined\" && source !== null) {\n        var temp = new Request(\"\", { headers: source });\n        temp.headers.forEach(function (value, name) {\n            target.append(name, value);\n        });\n    }\n}\nexports.mergeHeaders = mergeHeaders;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar lists_1 = __webpack_require__(15);\nvar fields_1 = __webpack_require__(25);\nvar navigation_1 = __webpack_require__(27);\nvar sitegroups_1 = __webpack_require__(23);\nvar contenttypes_1 = __webpack_require__(24);\nvar regionalsettings_1 = __webpack_require__(56);\nvar folders_1 = __webpack_require__(18);\nvar roles_1 = __webpack_require__(22);\nvar files_1 = __webpack_require__(8);\nvar util_1 = __webpack_require__(0);\nvar lists_2 = __webpack_require__(15);\nvar siteusers_1 = __webpack_require__(38);\nvar usercustomactions_1 = __webpack_require__(26);\nvar odata_1 = __webpack_require__(3);\nvar batch_1 = __webpack_require__(28);\nvar features_1 = __webpack_require__(40);\nvar sharepointqueryableshareable_1 = __webpack_require__(16);\nvar relateditems_1 = __webpack_require__(57);\nvar appcatalog_1 = __webpack_require__(41);\nvar clientsidepages_1 = __webpack_require__(42);\n/**\n * Describes a collection of webs\n *\n */\nvar Webs = /** @class */ (function (_super) {\n    __extends(Webs, _super);\n    /**\n     * Creates a new instance of the Webs class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\n     */\n    function Webs(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webs\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The new web's description\n     * @param template The new web's template internal name (default = STS)\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\n     */\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = \"STS\"; }\n        if (language === void 0) { language = 1033; }\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\n        var props = {\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        };\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        return this.clone(Webs, \"add\").postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                web: new Web(odata_1.spExtractODataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    };\n    return Webs;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Webs = Webs;\n/**\n * Describes a collection of web infos\n *\n */\nvar WebInfos = /** @class */ (function (_super) {\n    __extends(WebInfos, _super);\n    /**\n     * Creates a new instance of the WebInfos class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web infos collection\n     */\n    function WebInfos(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webinfos\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    return WebInfos;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.WebInfos = WebInfos;\n/**\n * Describes a web\n *\n */\nvar Web = /** @class */ (function (_super) {\n    __extends(Web, _super);\n    /**\n     * Creates a new instance of the Web class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web\n     */\n    function Web(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Creates a new web instance from the given url by indexing the location of the /_api/\n     * segment. If this is not found the method creates a new web with the entire string as\n     * supplied.\n     *\n     * @param url\n     */\n    Web.fromUrl = function (url, path) {\n        return new Web(util_1.extractWebUrl(url), path);\n    };\n    Object.defineProperty(Web.prototype, \"webs\", {\n        /**\n         * Gets this web's subwebs\n         *\n         */\n        get: function () {\n            return new Webs(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\n    *\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\n    */\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\n    };\n    Object.defineProperty(Web.prototype, \"allProperties\", {\n        /**\n         * Gets the set of all web properties from the read-only collection.\n         */\n        get: function () {\n            return this.clone(sharepointqueryable_1.SharePointQueryableCollection, \"allproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"webinfos\", {\n        /**\n         * Gets a collection of WebInfos for this web's subwebs\n         *\n         */\n        get: function () {\n            return new WebInfos(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types available in this web\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"lists\", {\n        /**\n         * Gets the lists in this web\n         *\n         */\n        get: function () {\n            return new lists_1.Lists(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"fields\", {\n        /**\n         * Gets the fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"features\", {\n        /**\n         * Gets the active features for this web\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"availablefields\", {\n        /**\n         * Gets the available fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this, \"availablefields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"navigation\", {\n        /**\n         * Gets the navigation options in this web\n         *\n         */\n        get: function () {\n            return new navigation_1.Navigation(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\n        /**\n         * Gets the site users\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\n        /**\n         * Gets the site groups\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\n        /**\n         * Gets site user info list\n         *\n         */\n        get: function () {\n            return new lists_2.List(this, \"siteuserinfolist\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\n        /**\n         * Gets regional settings\n         *\n         */\n        get: function () {\n            return new regionalsettings_1.RegionalSettings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"currentUser\", {\n        /**\n         * Gets the current user\n         */\n        get: function () {\n            return new siteusers_1.CurrentUser(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"folders\", {\n        /**\n         * Gets the top-level folders in this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\n        /**\n         * Gets all user custom actions for this web\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this web\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"effectivebasepermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\n        /**\n         * Gets the collection of RoleDefinition resources\n         *\n         */\n        get: function () {\n            return new roles_1.RoleDefinitions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\n        /**\n         * Provides an interface to manage related items\n         *\n         */\n        get: function () {\n            return relateditems_1.RelatedItemManagerImpl.FromUrl(this.toUrl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch for requests within the context of this web\n     *\n     */\n    Web.prototype.createBatch = function () {\n        return new batch_1.ODataBatch(this.parentUrl);\n    };\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\n        /**\n         * Gets the root folder of this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\n        /**\n         * Gets the associated owner group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedownergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\n        /**\n         * Gets the associated member group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedmembergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\n        /**\n         * Gets the associated visitor group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedvisitorgroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a folder by server relative url\n     *\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\n     * This works only in SharePoint online.\n     *\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a file by server relative url\n     *\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a file by server relative url if your file name contains # and % characters\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\n     *\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    Web.prototype.getList = function (listRelativeUrl) {\n        return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n    };\n    /**\n     * Updates this web instance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    Web.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                web: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this web\n     *\n     */\n    Web.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\n     *\n     * @param colorPaletteUrl The server-relative URL of the color palette file\n     * @param fontSchemeUrl The server-relative URL of the font scheme\n     * @param backgroundImageUrl The server-relative URL of the background image\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\n     */\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        var postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        return this.clone(Web, \"applytheme\").postCore({ body: postBody });\n    };\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    Web.prototype.applyWebTemplate = function (template) {\n        var q = this.clone(Web, \"applywebtemplate\");\n        q.concat(\"(@t)\");\n        q.query.add(\"@t\", template);\n        return q.postCore();\n    };\n    /**\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    Web.prototype.ensureUser = function (loginName) {\n        var postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        return this.clone(Web, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                user: new siteusers_1.SiteUser(odata_1.spExtractODataId(data)),\n            };\n        });\n    };\n    /**\n     * Returns a collection of site templates available for the site\n     *\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\n     */\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\n        if (language === void 0) { language = 1033; }\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\n        return new sharepointqueryable_1.SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n    };\n    /**\n     * Returns the list gallery on the site\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    Web.prototype.getCatalog = function (type) {\n        return this.clone(Web, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\n            return new lists_2.List(odata_1.spExtractODataId(data));\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\n     *\n     * @param query The change query\n     */\n    Web.prototype.getChanges = function (query) {\n        var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        return this.clone(Web, \"getchanges\").postCore({ body: postBody });\n    };\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\n        /**\n         * Gets the custom list templates for the site\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"getcustomlisttemplates\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site\n     *\n     * @param id The id of the user\n     */\n    Web.prototype.getUserById = function (id) {\n        return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n    };\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    Web.prototype.mapToIcon = function (filename, size, progId) {\n        if (size === void 0) { size = 0; }\n        if (progId === void 0) { progId = \"\"; }\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\n    };\n    /**\n     * Returns the tenant property corresponding to the specified key in the app catalog site\n     *\n     * @param key\n     */\n    Web.prototype.getStorageEntity = function (key) {\n        return this.clone(Web, \"getStorageEntity('\" + key + \"')\").get();\n    };\n    /**\n     * Gets the app catalog for this web\n     *\n     * @param url Optional url or web containing the app catalog (default: current web)\n     */\n    Web.prototype.getAppCatalog = function (url) {\n        return new appcatalog_1.AppCatalog(url || this);\n    };\n    /**\n     * Gets the collection of available client side web parts for this web instance\n     */\n    Web.prototype.getClientSideWebParts = function () {\n        return this.clone(sharepointqueryable_1.SharePointQueryableCollection, \"GetClientSideWebParts\").get();\n    };\n    /**\n     * Creates a new client side page\n     *\n     * @param pageName Name of the new page\n     * @param title Display title of the new page\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\n     */\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\n        return clientsidepages_1.ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\n    };\n    return Web;\n}(sharepointqueryableshareable_1.SharePointQueryableShareableWeb));\nexports.Web = Web;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar sharepointqueryableshareable_1 = __webpack_require__(16);\nvar folders_1 = __webpack_require__(18);\nvar files_1 = __webpack_require__(8);\nvar contenttypes_1 = __webpack_require__(24);\nvar util_1 = __webpack_require__(0);\nvar core_1 = __webpack_require__(14);\nvar attachmentfiles_1 = __webpack_require__(52);\nvar lists_1 = __webpack_require__(15);\nvar pnp_1 = __webpack_require__(30);\n/**\n * Describes a collection of Item objects\n *\n */\nvar Items = /** @class */ (function (_super) {\n    __extends(Items, _super);\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Items(baseUrl, path) {\n        if (path === void 0) { path = \"items\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    Items.prototype.getById = function (id) {\n        var i = new Item(this);\n        i.concat(\"(\" + id + \")\");\n        return i;\n    };\n    /**\n     * Gets BCS Item by string id\n     *\n     * @param stringId The string id of the BCS item to retrieve\n     */\n    Items.prototype.getItemByStringId = function (stringId) {\n        var i = new Item(this);\n        i.concat(\"/../getItemByStringId('\" + stringId + \"')\");\n        return i;\n    };\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\n     */\n    Items.prototype.skip = function (skip, reverse) {\n        if (reverse === void 0) { reverse = false; }\n        if (reverse) {\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\n        }\n        else {\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\n        }\n        return this;\n    };\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    Items.prototype.getPaged = function () {\n        return this.getAs(new PagedItemCollectionParser());\n    };\n    /**\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\n     *\n     *  @param requestSize Number of items to return in each request (Default: 2000)\n     */\n    Items.prototype.getAll = function (requestSize) {\n        var _this = this;\n        if (requestSize === void 0) { requestSize = 2000; }\n        pnp_1.Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", pnp_1.LogLevel.Warning);\n        // this will be used for the actual query\n        // and we set no metadata here to try and reduce traffic\n        var items = new Items(this, \"\").top(requestSize).configure({\n            headers: {\n                \"Accept\": \"application/json;odata=nometadata\",\n            },\n        });\n        // let's copy over the odata query params that can be applied\n        // $top - allow setting the page size this way (override what we did above)\n        // $select - allow picking the return fields (good behavior)\n        // $filter - allow setting a filter, though this may fail for large lists\n        this.query.getKeys()\n            .filter(function (k) { return /^\\$select$|^\\$filter$|^\\$top$/.test(k.toLowerCase()); })\n            .reduce(function (i, k) {\n            i.query.add(k, _this.query.get(k));\n            return i;\n        }, items);\n        // give back the promise\n        return new Promise(function (resolve, reject) {\n            // this will eventually hold the items we return\n            var itemsCollector = [];\n            // action that will gather up our results recursively\n            var gatherer = function (last) {\n                // collect that set of results\n                [].push.apply(itemsCollector, last.results);\n                // if we have more, repeat - otherwise resolve with the collected items\n                if (last.hasNext) {\n                    last.getNext().then(gatherer).catch(reject);\n                }\n                else {\n                    resolve(itemsCollector);\n                }\n            };\n            // start the cycle\n            items.getPaged().then(gatherer).catch(reject);\n        });\n    };\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        var removeDependency = this.addBatchDependency();\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n            var postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            var promise = _this.clone(Items, null).postAsCore({ body: postBody }).then(function (data) {\n                return {\n                    data: data,\n                    item: _this.getById(data.Id),\n                };\n            });\n            removeDependency();\n            return promise;\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List).getListItemEntityTypeFullName();\n    };\n    return Items;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nvar Item = /** @class */ (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\n        /**\n         * Gets the set of attachments for this item\n         *\n         */\n        get: function () {\n            return new attachmentfiles_1.AttachmentFiles(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"contentType\", {\n        /**\n         * Gets the content type for this item\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentType(this, \"ContentType\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions for the item\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\n        /**\n         * Gets the effective base permissions for the item in a UI context\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\n        /**\n         * Gets the field values for this list item in their HTML representation\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\n        /**\n         * Gets the field values for this list item in their text representation\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableInstance(this, \"FieldValuesAsText\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\n        /**\n         * Gets the field values for this list item for use in editing controls\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableInstance(this, \"FieldValuesForEdit\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"folder\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"folder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"file\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new files_1.File(this, \"file\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"versions\", {\n        /**\n         * Gets the collection of versions associated with this item\n         */\n        get: function () {\n            return new ItemVersions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        return new Promise(function (resolve, reject) {\n            var removeDependency = _this.addBatchDependency();\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n                var postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": listItemEntityType },\n                }, properties));\n                removeDependency();\n                return _this.postCore({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then(function (data) {\n                    resolve({\n                        data: data,\n                        item: _this,\n                    });\n                });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Item.prototype.recycle = function () {\n        return this.clone(Item, \"recycle\").postCore();\n    };\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    Item.prototype.getWopiFrameUrl = function (action) {\n        if (action === void 0) { action = 0; }\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\n        i._query.add(\"@action\", action);\n        return i.postCore().then(function (data) {\n            // handle verbose mode\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\n                return data.GetWOPIFrameUrl;\n            }\n            return data;\n        });\n    };\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\n    };\n    return Item;\n}(sharepointqueryableshareable_1.SharePointQueryableShareableItem));\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nvar PagedItemCollection = /** @class */ (function () {\n    function PagedItemCollection(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\n        /**\n         * If true there are more results available in the set, otherwise there are not\n         */\n        get: function () {\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    PagedItemCollection.prototype.getNext = function () {\n        if (this.hasNext) {\n            var items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(function (r) { return r(null); });\n    };\n    return PagedItemCollection;\n}());\nexports.PagedItemCollection = PagedItemCollection;\n/**\n * Describes a collection of Version objects\n *\n */\nvar ItemVersions = /** @class */ (function (_super) {\n    __extends(ItemVersions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function ItemVersions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    ItemVersions.prototype.getById = function (versionId) {\n        var v = new ItemVersion(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    return ItemVersions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.ItemVersions = ItemVersions;\n/**\n * Describes a single Version instance\n *\n */\nvar ItemVersion = /** @class */ (function (_super) {\n    __extends(ItemVersion, _super);\n    function ItemVersion() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    ItemVersion.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ItemVersion;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.ItemVersion = ItemVersion;\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\n    __extends(PagedItemCollectionParser, _super);\n    function PagedItemCollectionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PagedItemCollectionParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                r.json().then(function (json) {\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\n                });\n            }\n        });\n    };\n    return PagedItemCollectionParser;\n}(core_1.ODataParserBase));\nvar ItemUpdatedParser = /** @class */ (function (_super) {\n    __extends(ItemUpdatedParser, _super);\n    function ItemUpdatedParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ItemUpdatedParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    };\n    return ItemUpdatedParser;\n}(core_1.ODataParserBase));\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(9);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar logging_1 = __webpack_require__(5);\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nvar PnPClientStorageWrapper = /** @class */ (function () {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? -1 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n        // if the cache timeout is enabled call the handler\n        // this will clear any expired items and set the timeout function\n        if (pnplibconfig_1.RuntimeConfig.enableCacheExpiration) {\n            logging_1.Logger.write(\"Enabling cache expiration.\", logging_1.LogLevel.Info);\n            this.cacheExpirationHandler();\n        }\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    PnPClientStorageWrapper.prototype.get = function (key) {\n        if (!this.enabled) {\n            return null;\n        }\n        var o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        var persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            logging_1.Logger.write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", logging_1.LogLevel.Info);\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    };\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    };\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    PnPClientStorageWrapper.prototype.delete = function (key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    };\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\n        var _this = this;\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise(function (resolve) {\n            var o = _this.get(key);\n            if (o == null) {\n                getter().then(function (d) {\n                    _this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    };\n    /**\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\n     */\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (!_this.enabled) {\n                resolve();\n            }\n            try {\n                for (var i = 0; i < _this.store.length; i++) {\n                    var key = _this.store.key(i);\n                    // test the stored item to see if we stored it\n                    if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\n                        // get those items as get will delete from cache if they are expired\n                        _this.get(key);\n                    }\n                }\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    PnPClientStorageWrapper.prototype.test = function () {\n        var str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Creates the persistable to store\n     */\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\n        if (typeof expire === \"undefined\") {\n            // ensure we are by default inline with the global library setting\n            var defaultTimeout = pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = util_1.Util.dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\n    };\n    /**\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\n     */\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\n        var _this = this;\n        logging_1.Logger.write(\"Called cache expiration handler.\", logging_1.LogLevel.Verbose);\n        this.deleteExpired().then(function (_) {\n            // call ourself in the future\n            setTimeout(util_1.Util.getCtxCallback(_this, _this.cacheExpirationHandler), pnplibconfig_1.RuntimeConfig.cacheExpirationIntervalMilliseconds);\n        }).catch(function (e) {\n            // we've got some error - so just stop the loop and report the error\n            logging_1.Logger.log({\n                data: e,\n                level: logging_1.LogLevel.Error,\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\n            });\n        });\n    };\n    return PnPClientStorageWrapper;\n}());\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nvar MemoryStorage = /** @class */ (function () {\n    function MemoryStorage(_store) {\n        if (_store === void 0) { _store = new collections_1.Dictionary(); }\n        this._store = _store;\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () {\n            return this._store.count();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.clear = function () {\n        this._store.clear();\n    };\n    MemoryStorage.prototype.getItem = function (key) {\n        return this._store.get(key);\n    };\n    MemoryStorage.prototype.key = function (index) {\n        return this._store.getKeys()[index];\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        this._store.remove(key);\n    };\n    MemoryStorage.prototype.setItem = function (key, data) {\n        this._store.add(key, data);\n    };\n    return MemoryStorage;\n}());\n/**\n * A class that will establish wrappers for both local and session storage\n */\nvar PnPClientStorage = /** @class */ (function () {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    function PnPClientStorage(_local, _session) {\n        if (_local === void 0) { _local = null; }\n        if (_session === void 0) { _session = null; }\n        this._local = _local;\n        this._session = _session;\n    }\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\n        /**\n         * Provides access to the local storage of the browser\n         */\n        get: function () {\n            if (this._local === null) {\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n            }\n            return this._local;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\n        /**\n         * Provides access to the session storage of the browser\n         */\n        get: function () {\n            if (this._session === null) {\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n            }\n            return this._session;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PnPClientStorage;\n}());\nexports.PnPClientStorage = PnPClientStorage;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = __webpack_require__(2);\nvar logging_1 = __webpack_require__(5);\nvar ODataParserBase = /** @class */ (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\n                    r.text()\n                        .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\n                        .then(function (json) { return resolve(_this.parseODataJSON(json)); })\n                        .catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar items_1 = __webpack_require__(12);\nvar views_1 = __webpack_require__(53);\nvar contenttypes_1 = __webpack_require__(24);\nvar fields_1 = __webpack_require__(25);\nvar forms_1 = __webpack_require__(54);\nvar subscriptions_1 = __webpack_require__(55);\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar sharepointqueryablesecurable_1 = __webpack_require__(37);\nvar util_1 = __webpack_require__(0);\nvar usercustomactions_1 = __webpack_require__(26);\nvar odata_1 = __webpack_require__(3);\nvar exceptions_1 = __webpack_require__(2);\nvar folders_1 = __webpack_require__(18);\n/**\n * Describes a collection of List objects\n *\n */\nvar Lists = /** @class */ (function (_super) {\n    __extends(Lists, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Lists(baseUrl, path) {\n        if (path === void 0) { path = \"lists\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    Lists.prototype.getByTitle = function (title) {\n        return new List(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    Lists.prototype.getById = function (id) {\n        var list = new List(this);\n        list.concat(\"('\" + id + \"')\");\n        return list;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var addSettings = util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings);\n        return this.postCore({ body: JSON.stringify(addSettings) }).then(function (data) {\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\n        });\n    };\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise(function (resolve, reject) {\n            var addOrUpdateSettings = util_1.Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\n            list.get().then(function (_) {\n                list.update(addOrUpdateSettings).then(function (d) {\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            }).catch(function (_) {\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            });\n        });\n    };\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\n        return this.clone(Lists, \"ensuresiteassetslibrary\").postCore().then(function (json) {\n            return new List(odata_1.spExtractODataId(json));\n        });\n    };\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    Lists.prototype.ensureSitePagesLibrary = function () {\n        return this.clone(Lists, \"ensuresitepageslibrary\").postCore().then(function (json) {\n            return new List(odata_1.spExtractODataId(json));\n        });\n    };\n    return Lists;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nvar List = /** @class */ (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(List.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types in this list\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"items\", {\n        /**\n         * Gets the items in this list\n         *\n         */\n        get: function () {\n            return new items_1.Items(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"views\", {\n        /**\n         * Gets the views in this list\n         *\n         */\n        get: function () {\n            return new views_1.Views(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"fields\", {\n        /**\n         * Gets the fields in this list\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"forms\", {\n        /**\n         * Gets the forms in this list\n         *\n         */\n        get: function () {\n            return new forms_1.Forms(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"defaultView\", {\n        /**\n         * Gets the default view of this list\n         *\n         */\n        get: function () {\n            return new views_1.View(this, \"DefaultView\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this list\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\n        /**\n         * Gets the event receivers attached to this list\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"EventReceivers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"relatedFields\", {\n        /**\n         * Gets the related fields of this list\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"getRelatedFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\n        /**\n         * Gets the IRM settings for this list\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"InformationRightsManagementSettings\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"subscriptions\", {\n        /**\n         * Gets the webhook subscriptions of this list\n         *\n         */\n        get: function () {\n            return new subscriptions_1.Subscriptions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the list\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    List.prototype.getView = function (viewId) {\n        return new views_1.View(this, \"getView('\" + viewId + \"')\");\n    };\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    List.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retList = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    List.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    List.prototype.getChanges = function (query) {\n        return this.clone(List, \"getchanges\").postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\n        });\n    };\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    List.prototype.getItemsByCAMLQuery = function (query) {\n        var expands = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            expands[_i - 1] = arguments[_i];\n        }\n        var q = this.clone(List, \"getitems\");\n        return q.expand.apply(q, expands).postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\n        });\n    };\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    List.prototype.getListItemChangesSinceToken = function (query) {\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\n        }, { parse: function (r) { return r.text(); } });\n    };\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    List.prototype.recycle = function () {\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Renders list data based on the view xml provided\n     */\n    List.prototype.renderListData = function (viewXml) {\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.postCore().then(function (data) {\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return JSON.parse(data.RenderListData);\n            }\n            return JSON.parse(data);\n        });\n    };\n    /**\n     * Returns the data for the specified query view\n     *\n     * @param parameters The parameters to be used to render list data as JSON string.\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\n     */\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\n        if (overrideParameters === void 0) { overrideParameters = null; }\n        var postBody = {\n            overrideParameters: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.RenderListDataOverrideParameters\" },\n            }, overrideParameters),\n            parameters: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.RenderListDataParameters\" },\n            }, parameters),\n        };\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\n            body: JSON.stringify(postBody),\n        });\n    };\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    List.prototype.reserveListItemId = function () {\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\n     *\n     */\n    List.prototype.getListItemEntityTypeFullName = function () {\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\n    };\n    return List;\n}(sharepointqueryablesecurable_1.SharePointQueryableSecurable));\nexports.List = List;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar webs_1 = __webpack_require__(11);\nvar odata_1 = __webpack_require__(3);\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar sharepointqueryablesecurable_1 = __webpack_require__(37);\nvar types_1 = __webpack_require__(17);\n/**\n * Internal helper class used to augment classes to include sharing functionality\n */\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\n    __extends(SharePointQueryableShareable, _super);\n    function SharePointQueryableShareable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a sharing link for the supplied\n     *\n     * @param kind The kind of link to share\n     * @param expiration The optional expiration for this link\n     */\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\n        if (expiration === void 0) { expiration = null; }\n        // date needs to be an ISO string or null\n        var expString = expiration !== null ? expiration.toISOString() : null;\n        // clone using the factory and send the request\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postAsCore({\n            body: JSON.stringify({\n                request: {\n                    createLink: true,\n                    emailData: null,\n                    settings: {\n                        expiration: expString,\n                        linkKind: kind,\n                    },\n                },\n            }),\n        });\n    };\n    /**\n     * Shares this instance with the supplied users\n     *\n     * @param loginNames Resolved login names to share\n     * @param role The role\n     * @param requireSignin True to require the user is authenticated, otherwise false\n     * @param propagateAcl True to apply this share to all children\n     * @param emailData If supplied an email will be sent with the indicated properties\n     */\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\n        var _this = this;\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        // handle the multiple input types\n        if (!Array.isArray(loginNames)) {\n            loginNames = [loginNames];\n        }\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\n        var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n        // start by looking up the role definition id we need to set the roleValue\n        return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\n            if (!Array.isArray(def) || def.length < 1) {\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\n            }\n            var postBody = {\n                includeAnonymousLinkInEmail: requireSignin,\n                peoplePickerInput: userStr,\n                propagateAcl: propagateAcl,\n                roleValue: \"role:\" + def[0].Id,\n                useSimplifiedRoles: true,\n            };\n            if (typeof emailData !== \"undefined\") {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: emailData.body,\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\n                    sendEmail: true,\n                });\n            }\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postAsCore({\n                body: JSON.stringify(postBody),\n            });\n        });\n    };\n    /**\n     * Shares an object based on the supplied options\n     *\n     * @param options The set of options to send to the ShareObject method\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\n     */\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\n        var _this = this;\n        if (bypass === void 0) { bypass = false; }\n        if (bypass) {\n            // if the bypass flag is set send the supplied parameters directly to the service\n            return this.sendShareObjectRequest(options);\n        }\n        // extend our options with some defaults\n        options = util_1.Util.extend(options, {\n            group: null,\n            includeAnonymousLinkInEmail: false,\n            propagateAcl: false,\n            useSimplifiedRoles: true,\n        }, true);\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\n            // handle the multiple input types\n            if (!Array.isArray(options.loginNames)) {\n                options.loginNames = [options.loginNames];\n            }\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\n            var postBody = {\n                peoplePickerInput: userStr,\n                roleValue: roleValue,\n                url: options.url,\n            };\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: options.emailData.body,\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\n                    sendEmail: true,\n                });\n            }\n            return _this.sendShareObjectRequest(postBody);\n        });\n    };\n    /**\n     * Calls the web's UnshareObject method\n     *\n     * @param url The url of the object to unshare\n     */\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postAsCore({\n            body: JSON.stringify({\n                url: url,\n            }),\n        });\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postAsCore({\n            body: JSON.stringify({\n                recipients: recipients,\n            }),\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postAsCore({\n            body: JSON.stringify({\n                request: request,\n            }),\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postAsCore({\n            body: JSON.stringify({\n                useSimplifiedRoles: useSimplifiedRoles,\n            }),\n        });\n    };\n    /**\n     * Unshares this object\n     */\n    SharePointQueryableShareable.prototype.unshareObject = function () {\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postAsCore();\n    };\n    /**\n     * Deletes a link by type\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\n            body: JSON.stringify({ linkKind: kind }),\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\n        });\n    };\n    /**\n     * Calculates the roleValue string used in the sharing query\n     *\n     * @param role The Sharing Role\n     * @param group The Group type\n     */\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\n        // we will give group precedence, because we had to make a choice\n        if (typeof group !== \"undefined\" && group !== null) {\n            switch (group) {\n                case types_1.RoleType.Contributor:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedMemberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                case types_1.RoleType.Reader:\n                case types_1.RoleType.Guest:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedVisitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                default:\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\n            }\n        }\n        else {\n            var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n            return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\n                if (def.length < 1) {\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\n                }\n                return \"role: \" + def[0].Id;\n            });\n        }\n    };\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\n        return Promise.resolve(webs_1.Web.fromUrl(candidate, \"/_api/SP.Web.ShareObject\"));\n    };\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\n                body: JSON.stringify(options),\n            });\n        });\n    };\n    return SharePointQueryableShareable;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.SharePointQueryableShareable = SharePointQueryableShareable;\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\n    __extends(SharePointQueryableShareableWeb, _super);\n    function SharePointQueryableShareableWeb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this web with the supplied users\n     * @param loginNames The resolved login names to share\n     * @param role The role to share this web\n     * @param emailData Optional email data\n     */\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\n        var _this = this;\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        var dependency = this.addBatchDependency();\n        return webs_1.Web.fromUrl(this.toUrl(), \"/_api/web/url\").get().then(function (url) {\n            dependency();\n            return _this.shareObject(util_1.Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\n        });\n    };\n    /**\n     * Provides direct access to the static web.ShareObject method\n     *\n     * @param url The url to share\n     * @param loginNames Resolved loginnames string[] of a single login name string\n     * @param roleValue Role value\n     * @param emailData Optional email data\n     * @param groupId Optional group id\n     * @param propagateAcl\n     * @param includeAnonymousLinkInEmail\n     * @param useSimplifiedRoles\n     */\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(SharePointQueryableShareable, null).shareObject({\n            emailData: emailData,\n            group: group,\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\n            loginNames: loginNames,\n            propagateAcl: propagateAcl,\n            role: role,\n            url: url,\n            useSimplifiedRoles: useSimplifiedRoles,\n        });\n    };\n    /**\n     * Supplies a method to pass any set of arguments to ShareObject\n     *\n     * @param options The set of options to send to ShareObject\n     */\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\n    };\n    /**\n     * Unshares the object\n     *\n     * @param url The url of the object to stop sharing\n     */\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\n    };\n    return SharePointQueryableShareableWeb;\n}(sharepointqueryablesecurable_1.SharePointQueryableSecurable));\nexports.SharePointQueryableShareableWeb = SharePointQueryableShareableWeb;\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\n    __extends(SharePointQueryableShareableItem, _super);\n    function SharePointQueryableShareableItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing for this item\n     *\n     * @param kind The type of link to share\n     * @param expiration The optional expiration date\n     */\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\n    };\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\n    };\n    /**\n     * Unshare this item\n     */\n    SharePointQueryableShareableItem.prototype.unshare = function () {\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\n    };\n    /**\n     * Deletes a sharing link by kind\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\n    };\n    return SharePointQueryableShareableItem;\n}(sharepointqueryablesecurable_1.SharePointQueryableSecurable));\nexports.SharePointQueryableShareableItem = SharePointQueryableShareableItem;\nvar FileFolderShared = /** @class */ (function (_super) {\n    __extends(FileFolderShared, _super);\n    function FileFolderShared() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing\n     *\n     * @param kind The kind of link to get\n     * @param expiration Optional, an expiration for this link\n     */\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getShareLink(kind, expiration);\n        });\n    };\n    /**\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\n         *\n         * @param recipients The array of Entities for which Permissions need to be checked.\n         */\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.checkPermissions(recipients);\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    FileFolderShared.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getSharingInformation(request);\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\n        });\n    };\n    /**\n     * Unshare this item\n     */\n    FileFolderShared.prototype.unshare = function () {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareObject();\n        });\n    };\n    /**\n     * Deletes a sharing link by the kind of link\n     *\n     * @param kind The kind of link to be deleted.\n     */\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.deleteLinkByKind(kind);\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId The share id to delete\n     */\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareLink(kind, shareId);\n        });\n    };\n    /**\n     * For files and folders we need to use the associated item end point\n     */\n    FileFolderShared.prototype.getShareable = function () {\n        var _this = this;\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\n            var shareable = new SharePointQueryableShareable(odata_1.spGetEntityUrl(d));\n            // we need to handle batching\n            if (_this.hasBatch) {\n                shareable = shareable.inBatch(_this.batch);\n            }\n            return shareable;\n        });\n    };\n    return FileFolderShared;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.FileFolderShared = FileFolderShared;\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\n    __extends(SharePointQueryableShareableFile, _super);\n    function SharePointQueryableShareableFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\n        });\n    };\n    return SharePointQueryableShareableFile;\n}(FileFolderShared));\nexports.SharePointQueryableShareableFile = SharePointQueryableShareableFile;\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\n    __extends(SharePointQueryableShareableFolder, _super);\n    function SharePointQueryableShareableFolder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (shareEverything === void 0) { shareEverything = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\n        });\n    };\n    return SharePointQueryableShareableFolder;\n}(FileFolderShared));\nexports.SharePointQueryableShareableFolder = SharePointQueryableShareableFolder;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar ChoiceFieldFormatType;\n(function (ChoiceFieldFormatType) {\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\n})(ChoiceFieldFormatType = exports.ChoiceFieldFormatType || (exports.ChoiceFieldFormatType = {}));\nvar PermissionKind;\n(function (PermissionKind) {\n    /**\n     * Has no permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\n    /**\n     * View items in lists, documents in document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\n    /**\n     * Add items to lists, documents to document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\n    /**\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\n     * in documents, and customize Web Part Pages in document libraries.\n     */\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\n    /**\n     * Delete items from a list, documents from a document library, and Web discussion\n     * comments in documents.\n     */\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\n    /**\n     * Approve a minor version of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\n    /**\n     * View the source of documents with server-side file handlers.\n     */\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\n    /**\n     * View past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\n    /**\n     * Delete past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\n    /**\n     * Discard or check in a document which is checked out to another user.\n     */\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\n    /**\n     * Create, change, and delete personal views of lists.\n     */\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\n    /**\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\n     */\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\n    /**\n     * View forms, views, and application pages, and enumerate lists.\n     */\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\n    /**\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\n     * The list permissions in the site do not change.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\n    /**\n     * Allow users to open a Site, list, or folder to access items inside that container.\n     */\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\n    /**\n     * View pages in a Site.\n     */\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\n    /**\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\n     * a Windows SharePoint Services compatible editor.\n     */\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\n    /**\n     * Apply a theme or borders to the entire Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\n    /**\n     * Apply a style sheet (.css file) to the Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\n    /**\n     * View reports on Site usage.\n     */\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\n    /**\n     * Create a Site using Self-Service Site Creation.\n     */\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\n    /**\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\n     */\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\n    /**\n     * Create a group of users that can be used anywhere within the site collection.\n     */\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\n    /**\n     * Create and change permission levels on the Site and assign permissions to users\n     * and groups.\n     */\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\n    /**\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\n     * and WebDAV interfaces.\n     */\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\n    /**\n     * View information about users of the Site.\n     */\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\n    /**\n     * Add or remove personal Web Parts on a Web Part Page.\n     */\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\n    /**\n     * Update Web Parts to display personalized information.\n     */\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\n    /**\n     * Grant the ability to perform all administration tasks for the Site as well as\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\n     * through the object model or through the user interface (UI). When granted on the\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\n     * site collection scoped Features through the object model. To browse to the Site\n     * Collection Features page and activate or deactivate Site Collection scoped Features\n     * through the UI, you must be a Site Collection administrator.\n     */\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\n    /**\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\n    /**\n     * Use features that launch client applications. Otherwise, users must work on documents\n     * locally and upload changes.\n     */\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\n    /**\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\n     */\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\n    /**\n     * Manage alerts for all users of the Site.\n     */\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\n    /**\n     * Create e-mail alerts.\n     */\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\n    /**\n     * Allows a user to change his or her user information, such as adding a picture.\n     */\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\n    /**\n     * Enumerate permissions on Site, list, folder, document, or list item.\n     */\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\n    /**\n     * Has all permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\n})(PermissionKind = exports.PermissionKind || (exports.PermissionKind = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar PrincipalSource;\n(function (PrincipalSource) {\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\n})(PrincipalSource = exports.PrincipalSource || (exports.PrincipalSource = {}));\nvar RoleType;\n(function (RoleType) {\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\n})(RoleType = exports.RoleType || (exports.RoleType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\nvar SharingLinkKind;\n(function (SharingLinkKind) {\n    /**\n     * Uninitialized link\n     */\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    /**\n     * Direct link to the object being shared\n     */\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\n    /**\n     * Organization-shareable link to the object being shared with view permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\n    /**\n     * Organization-shareable link to the object being shared with edit permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\n    /**\n     * View only anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\n    /**\n     * Read/Write anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\n    /**\n     * Flexible sharing Link where properties can change without affecting link URL\n     */\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\n})(SharingLinkKind = exports.SharingLinkKind || (exports.SharingLinkKind = {}));\n/**\n * Indicates the role of the sharing link\n */\nvar SharingRole;\n(function (SharingRole) {\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\n})(SharingRole = exports.SharingRole || (exports.SharingRole = {}));\nvar SharingOperationStatusCode;\n(function (SharingOperationStatusCode) {\n    /**\n     * The share operation completed without errors.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\n    /**\n     * The share operation completed and generated requests for access.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\n    /**\n     * The share operation failed as there were no resolved users.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\n    /**\n     * The share operation failed due to insufficient permissions.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\n    /**\n     * The share operation failed when attempting a cross site share, which is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\n    /**\n     * The sharing operation failed due to an unknown error.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\n    /**\n     * The text you typed is too long. Please shorten it.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\n    /**\n     * The maximum number of unique scopes in the list has been exceeded.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\n    /**\n     * The share operation failed because a sharing capability is disabled in the site.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\n    /**\n     * The specified object for the share operation is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\n    /**\n     * A SharePoint group cannot contain another SharePoint group.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\n})(SharingOperationStatusCode = exports.SharingOperationStatusCode || (exports.SharingOperationStatusCode = {}));\nvar SPSharedObjectType;\n(function (SPSharedObjectType) {\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\n})(SPSharedObjectType = exports.SPSharedObjectType || (exports.SPSharedObjectType = {}));\nvar SharingDomainRestrictionMode;\n(function (SharingDomainRestrictionMode) {\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\n})(SharingDomainRestrictionMode = exports.SharingDomainRestrictionMode || (exports.SharingDomainRestrictionMode = {}));\nvar RenderListDataOptions;\n(function (RenderListDataOptions) {\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\n})(RenderListDataOptions = exports.RenderListDataOptions || (exports.RenderListDataOptions = {}));\nvar FieldUserSelectionMode;\n(function (FieldUserSelectionMode) {\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\n})(FieldUserSelectionMode = exports.FieldUserSelectionMode || (exports.FieldUserSelectionMode = {}));\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar sharepointqueryableshareable_1 = __webpack_require__(16);\nvar files_1 = __webpack_require__(8);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(3);\nvar items_1 = __webpack_require__(12);\n/**\n * Describes a collection of Folder objects\n *\n */\nvar Folders = /** @class */ (function (_super) {\n    __extends(Folders, _super);\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Folders(baseUrl, path) {\n        if (path === void 0) { path = \"folders\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    Folders.prototype.getByName = function (name) {\n        var f = new Folder(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    Folders.prototype.add = function (url) {\n        var _this = this;\n        return this.clone(Folders, \"add('\" + url + \"')\").postCore().then(function (response) {\n            return {\n                data: response,\n                folder: _this.getByName(url),\n            };\n        });\n    };\n    return Folders;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nvar Folder = /** @class */ (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\n        /**\n         * Specifies the sequence in which content types are displayed.\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"contentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"files\", {\n        /**\n         * Gets this folder's files\n         *\n         */\n        get: function () {\n            return new files_1.Files(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"folders\", {\n        /**\n         * Gets this folder's sub folders\n         *\n         */\n        get: function () {\n            return new Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\n        /**\n         * Gets this folder's list item field values\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\n        /**\n         * Gets the parent folder, if available\n         *\n         */\n        get: function () {\n            return new Folder(this, \"parentFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"properties\", {\n        /**\n         * Gets this folder's properties\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableInstance(this, \"properties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\n        /**\n         * Gets this folder's server relative url\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"serverRelativeUrl\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\n        /**\n         * Gets a value that specifies the content type order.\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Folder\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                folder: _this,\n            };\n        });\n    };\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Folder.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(Folder, null).postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Folder.prototype.recycle = function () {\n        return this.clone(Folder, \"recycle\").postCore();\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    Folder.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.spGetEntityUrl(d)), d);\n        });\n    };\n    return Folder;\n}(sharepointqueryableshareable_1.SharePointQueryableShareableFolder));\nexports.Folder = Folder;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar utils_1 = __webpack_require__(10);\nvar parsers_1 = __webpack_require__(7);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar pipeline_1 = __webpack_require__(20);\nvar ODataQueryable = /** @class */ (function () {\n    function ODataQueryable() {\n    }\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    ODataQueryable.prototype.concat = function (pathPart) {\n        this._url += pathPart;\n        return this;\n    };\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    ODataQueryable.prototype.append = function (pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    };\n    Object.defineProperty(ODataQueryable.prototype, \"parentUrl\", {\n        /**\n         * Gets the parent url used when creating this instance\n         *\n         */\n        get: function () {\n            return this._parentUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ODataQueryable.prototype, \"query\", {\n        /**\n         * Provides access to the query builder for this url\n         *\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets custom options for current object and all derived objects accessible via chaining\n     *\n     * @param options custom options\n     */\n    ODataQueryable.prototype.configure = function (options) {\n        utils_1.mergeOptions(this._options, options);\n        return this;\n    };\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    ODataQueryable.prototype.usingCaching = function (options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    };\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    ODataQueryable.prototype.toUrl = function () {\n        return this._url;\n    };\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    ODataQueryable.prototype.get = function (parser, options) {\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        if (options === void 0) { options = {}; }\n        return this.toRequestContext(\"GET\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    ODataQueryable.prototype.getAs = function (parser, options) {\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        if (options === void 0) { options = {}; }\n        return this.toRequestContext(\"GET\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    ODataQueryable.prototype.postCore = function (options, parser) {\n        if (options === void 0) { options = {}; }\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    ODataQueryable.prototype.postAsCore = function (options, parser) {\n        if (options === void 0) { options = {}; }\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    ODataQueryable.prototype.patchCore = function (options, parser) {\n        if (options === void 0) { options = {}; }\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"PATCH\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\n        if (options === void 0) { options = {}; }\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"DELETE\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    return ODataQueryable;\n}());\nexports.ODataQueryable = ODataQueryable;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = __webpack_require__(34);\nvar logging_1 = __webpack_require__(5);\nvar util_1 = __webpack_require__(0);\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult(context) {\n    logging_1.Logger.log({\n        data: context.result,\n        level: logging_1.LogLevel.Verbose,\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\n    });\n    return Promise.resolve(context.result);\n}\n/**\n * Sets the result on the context\n */\nfunction setResult(context, value) {\n    return new Promise(function (resolve) {\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\nexports.setResult = setResult;\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next(c) {\n    if (c.pipeline.length < 1) {\n        return Promise.resolve(c);\n    }\n    return c.pipeline.shift()(c);\n}\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nfunction pipe(context) {\n    return next(context)\n        .then(function (ctx) { return returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\n        };\n    };\n}\nexports.requestPipelineMethod = requestPipelineMethod;\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = /** @class */ (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        // handle the case where a parser needs to take special actions with a cached result (such as getAs)\n                        if (context.parser.hasOwnProperty(\"hydrate\")) {\n                            data = context.parser.hydrate(data);\n                        }\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", logging_1.LogLevel.Info);\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = context.clientFactory();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            if (context.isBatched) {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\n                });\n            }\n            else {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\n                });\n            }\n            resolve(context);\n        });\n    };\n    Object.defineProperty(PipelineMethods, \"default\", {\n        get: function () {\n            return [\n                PipelineMethods.logStart,\n                PipelineMethods.caching,\n                PipelineMethods.send,\n                PipelineMethods.logEnd,\n            ];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logStart\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"caching\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"send\", null);\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logEnd\", null);\n    return PipelineMethods;\n}());\nexports.PipelineMethods = PipelineMethods;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = __webpack_require__(51);\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(2);\nvar utils_1 = __webpack_require__(10);\nvar HttpClient = /** @class */ (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.spFetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        utils_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.spHeaders);\n        // second we add the local options so we can overwrite the globals\n        utils_1.mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:3.0.6\");\n        }\n        if (!headers.has(\"User-Agent\")) {\n            // this marks the requests for understanding by the service\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/3.0.6\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            // if we have either a request digest or an authorization header we don't need a digest\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        utils_1.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // Check if request was throttled - http status code 429\n                // Check if request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // grab our current delay\n                var delay = ctx.delay;\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar sitegroups_1 = __webpack_require__(23);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nvar RoleAssignments = /** @class */ (function (_super) {\n    __extends(RoleAssignments, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role assignments collection\n     */\n    function RoleAssignments(baseUrl, path) {\n        if (path === void 0) { path = \"roleassignments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection\n     *\n     * @param principalId The id of the user or group to assign permissions to\n     * @param roleDefId The id of the role definition that defines the permissions to assign\n     *\n     */\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\n    };\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The id of the user or group in the role assignment\n     * @param roleDefId The id of the role definition in the role assignment\n     *\n     */\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\n    };\n    /**\n     * Gets the role assignment associated with the specified principal id from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    RoleAssignments.prototype.getById = function (id) {\n        var ra = new RoleAssignment(this);\n        ra.concat(\"(\" + id + \")\");\n        return ra;\n    };\n    return RoleAssignments;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.RoleAssignments = RoleAssignments;\n/**\n * Describes a role assignment\n *\n */\nvar RoleAssignment = /** @class */ (function (_super) {\n    __extends(RoleAssignment, _super);\n    function RoleAssignment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\n        /**\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\n        /**\n         * Gets the role definition bindings for this role assignment\n         *\n         */\n        get: function () {\n            return new RoleDefinitionBindings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Deletes this role assignment\n     *\n     */\n    RoleAssignment.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleAssignment;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.RoleAssignment = RoleAssignment;\n/**\n * Describes a collection of role definitions\n *\n */\nvar RoleDefinitions = /** @class */ (function (_super) {\n    __extends(RoleDefinitions, _super);\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definitions collection\n     *\n     */\n    function RoleDefinitions(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the role definition with the specified id from the collection\n     *\n     * @param id The id of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getById = function (id) {\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets the role definition with the specified name\n     *\n     * @param name The name of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getByName = function (name) {\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n    };\n    /**\n     * Gets the role definition with the specified role type\n     *\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\n     *\n     */\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n    };\n    /**\n     * Creates a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                definition: _this.getById(data.Id),\n            };\n        });\n    };\n    return RoleDefinitions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.RoleDefinitions = RoleDefinitions;\n/**\n * Describes a role definition\n *\n */\nvar RoleDefinition = /** @class */ (function (_super) {\n    __extends(RoleDefinition, _super);\n    function RoleDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this role definition with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the role definition\n     */\n    /* tslint:disable no-string-literal */\n    RoleDefinition.prototype.update = function (properties) {\n        var _this = this;\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retDef = _this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\n                retDef = parent_1.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Deletes this role definition\n     *\n     */\n    RoleDefinition.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleDefinition;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.RoleDefinition = RoleDefinition;\n/**\n * Describes the role definitons bound to a role assignment object\n *\n */\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\n    __extends(RoleDefinitionBindings, _super);\n    /**\n     * Creates a new instance of the RoleDefinitionBindings class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definition bindings collection\n     */\n    function RoleDefinitionBindings(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return RoleDefinitionBindings;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar siteusers_1 = __webpack_require__(38);\nvar util_1 = __webpack_require__(0);\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site groups\n *\n */\nvar SiteGroups = /** @class */ (function (_super) {\n    __extends(SiteGroups, _super);\n    /**\n     * Creates a new instance of the SiteGroups class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this group collection\n     */\n    function SiteGroups(baseUrl, path) {\n        if (path === void 0) { path = \"sitegroups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The group properties object of property names and values to be set for the group\n     */\n    SiteGroups.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                group: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param groupName The name of the group to retrieve\n     */\n    SiteGroups.prototype.getByName = function (groupName) {\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n    };\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group to retrieve\n     */\n    SiteGroups.prototype.getById = function (id) {\n        var sg = new SiteGroup(this);\n        sg.concat(\"(\" + id + \")\");\n        return sg;\n    };\n    /**\n     * Removes the group with the specified member id from the collection\n     *\n     * @param id The id of the group to remove\n     */\n    SiteGroups.prototype.removeById = function (id) {\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\").postCore();\n    };\n    /**\n     * Removes the cross-site group with the specified name from the collection\n     *\n     * @param loginName The name of the group to remove\n     */\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\").postCore();\n    };\n    return SiteGroups;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nvar SiteGroup = /** @class */ (function (_super) {\n    __extends(SiteGroup, _super);\n    function SiteGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\n        /**\n         * Gets the users for this group\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this, \"users\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\n    */\n    /* tslint:disable no-string-literal */\n    SiteGroup.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.postCore({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retGroup = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    };\n    return SiteGroup;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.SiteGroup = SiteGroup;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar sharepointqueryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of content types\n *\n */\nvar ContentTypes = /** @class */ (function (_super) {\n    __extends(ContentTypes, _super);\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content types collection\n     */\n    function ContentTypes(baseUrl, path) {\n        if (path === void 0) { path = \"contenttypes\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    ContentTypes.prototype.getById = function (id) {\n        var ct = new ContentType(this);\n        ct.concat(\"('\" + id + \"')\");\n        return ct;\n    };\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return this.clone(ContentTypes, \"addAvailableContentType\").postAsCore({ body: postBody }).then(function (data) {\n            return {\n                contentType: _this.getById(data.id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (group === void 0) { group = \"Custom Content Types\"; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return { contentType: _this.getById(data.id), data: data };\n        });\n    };\n    return ContentTypes;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nvar ContentType = /** @class */ (function (_super) {\n    __extends(ContentType, _super);\n    function ContentType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\n        /**\n         * Gets the column (also known as field) references in the content type.\n        */\n        get: function () {\n            return new FieldLinks(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"fields\", {\n        /**\n         * Gets a value that specifies the collection of fields for the content type.\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"fields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"parent\", {\n        /**\n         * Gets the parent content type of the content type.\n         */\n        get: function () {\n            return new ContentType(this, \"parent\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\n        /**\n         * Gets a value that specifies the collection of workflow associations for the content type.\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"workflowAssociations\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this content type\n     */\n    ContentType.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ContentType;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nvar FieldLinks = /** @class */ (function (_super) {\n    __extends(FieldLinks, _super);\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content type instance\n     */\n    function FieldLinks(baseUrl, path) {\n        if (path === void 0) { path = \"fieldlinks\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    FieldLinks.prototype.getById = function (id) {\n        var fl = new FieldLink(this);\n        fl.concat(\"(guid'\" + id + \"')\");\n        return fl;\n    };\n    return FieldLinks;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nvar FieldLink = /** @class */ (function (_super) {\n    __extends(FieldLink, _super);\n    function FieldLink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldLink;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.FieldLink = FieldLink;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar types_1 = __webpack_require__(17);\n/**\n * Describes a collection of Field objects\n *\n */\nvar Fields = /** @class */ (function (_super) {\n    __extends(Fields, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Fields(baseUrl, path) {\n        if (path === void 0) { path = \"fields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    Fields.prototype.getByTitle = function (title) {\n        return new Field(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list\n     */\n    Fields.prototype.getById = function (id) {\n        var f = new Field(this);\n        f.concat(\"('\" + id + \"')\");\n        return f;\n    };\n    /**\n     * Creates a field based on the specified schema\n     */\n    Fields.prototype.createFieldAsXml = function (xml) {\n        var _this = this;\n        var info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        return this.clone(Fields, \"createfieldasxml\").postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new field to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.add = function (title, fieldType, properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.clone(Fields, null).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addText = function (title, maxLength, properties) {\n        if (maxLength === void 0) { maxLength = 255; }\n        var props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\n        if (outputType === void 0) { outputType = types_1.FieldTypes.Text; }\n        var props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.DateTimeFieldFormatType.DateOnly; }\n        if (calendarType === void 0) { calendarType = types_1.CalendarType.Gregorian; }\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\n        var props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\n        var props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\n        var props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\n        if (numberOfLines === void 0) { numberOfLines = 6; }\n        if (richText === void 0) { richText = true; }\n        if (restrictedMode === void 0) { restrictedMode = false; }\n        if (appendOnly === void 0) { appendOnly = false; }\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\n        var props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.UrlFieldFormatType.Hyperlink; }\n        var props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a user field to the colleciton\n     *\n     * @param title The new field's title\n     * @param selectionMode The selection mode of the field\n     * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\n     * @param properties\n     */\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\n        var props = {\n            FieldTypeKind: 20,\n            SelectionMode: selectionMode,\n        };\n        return this.add(title, \"SP.FieldUser\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a SP.FieldLookup to the collection\n     *\n     * @param title The new field's title\n     * @param lookupListId The guid id of the list where the source of the lookup is found\n     * @param lookupFieldName The internal name of the field in the source list\n     * @param properties Set of additional properties to set on the new field\n     */\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            parameters: util_1.Util.extend({\n                FieldTypeKind: 7,\n                LookupFieldName: lookupFieldName,\n                LookupListId: lookupListId,\n                Title: title,\n                \"__metadata\": { \"type\": \"SP.FieldCreationInformation\" },\n            }, properties),\n        });\n        return this.clone(Fields, \"addfield\").postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldChoice to the collection\n     *\n     * @param title The field title.\n     * @param choices The choices for the field.\n     * @param format The display format of the available options for the field.\n     * @param fillIn Specifies whether the field allows fill-in values.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\n        if (format === void 0) { format = types_1.ChoiceFieldFormatType.Dropdown; }\n        var props = {\n            Choices: {\n                results: choices,\n            },\n            EditFormat: format,\n            FieldTypeKind: 6,\n            FillInChoice: fillIn,\n        };\n        return this.add(title, \"SP.FieldChoice\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiChoice to the collection\n     *\n     * @param title The field title.\n     * @param choices The choices for the field.\n     * @param fillIn Specifies whether the field allows fill-in values.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\n        var props = {\n            Choices: {\n                results: choices,\n            },\n            FieldTypeKind: 15,\n            FillInChoice: fillIn,\n        };\n        return this.add(title, \"SP.FieldMultiChoice\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldBoolean to the collection\n     *\n     * @param title The field title.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addBoolean = function (title, properties) {\n        var props = {\n            FieldTypeKind: 8,\n        };\n        return this.add(title, \"SP.Field\", util_1.Util.extend(props, properties));\n    };\n    return Fields;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nvar Field = /** @class */ (function (_super) {\n    __extends(Field, _super);\n    function Field() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    Field.prototype.update = function (properties, fieldType) {\n        var _this = this;\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                field: _this,\n            };\n        });\n    };\n    /**\n     * Delete this fields\n     *\n     */\n    Field.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    Field.prototype.setShowInDisplayForm = function (show) {\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\n    };\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    Field.prototype.setShowInEditForm = function (show) {\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\n    };\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    Field.prototype.setShowInNewForm = function (show) {\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\n    };\n    return Field;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Field = Field;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a collection of user custom actions\n *\n */\nvar UserCustomActions = /** @class */ (function (_super) {\n    __extends(UserCustomActions, _super);\n    /**\n     * Creates a new instance of the UserCustomActions class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user custom actions collection\n     */\n    function UserCustomActions(baseUrl, path) {\n        if (path === void 0) { path = \"usercustomactions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns the user custom action with the specified id\n     *\n     * @param id The GUID id of the user custom action to retrieve\n     */\n    UserCustomActions.prototype.getById = function (id) {\n        var uca = new UserCustomAction(this);\n        uca.concat(\"('\" + id + \"')\");\n        return uca;\n    };\n    /**\n     * Creates a user custom action\n     *\n     * @param properties The information object of property names and values which define the new user custom action\n     *\n     */\n    UserCustomActions.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                action: _this.getById(data.Id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Deletes all user custom actions in the collection\n     *\n     */\n    UserCustomActions.prototype.clear = function () {\n        return this.clone(UserCustomActions, \"clear\").postCore();\n    };\n    return UserCustomActions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.UserCustomActions = UserCustomActions;\n/**\n * Describes a single user custom action\n *\n */\nvar UserCustomAction = /** @class */ (function (_super) {\n    __extends(UserCustomAction, _super);\n    function UserCustomAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Updates this user custom action with the supplied properties\n    *\n    * @param properties An information object of property names and values to update for this user custom action\n    */\n    UserCustomAction.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                action: _this,\n                data: data,\n            };\n        });\n    };\n    /**\n    * Removes this user custom action\n    *\n    */\n    UserCustomAction.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return UserCustomAction;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.UserCustomAction = UserCustomAction;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\n/**\n * Represents a collection of navigation nodes\n *\n */\nvar NavigationNodes = /** @class */ (function (_super) {\n    __extends(NavigationNodes, _super);\n    function NavigationNodes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    NavigationNodes.prototype.getById = function (id) {\n        var node = new NavigationNode(this);\n        node.concat(\"(\" + id + \")\");\n        return node;\n    };\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    NavigationNodes.prototype.add = function (title, url, visible) {\n        var _this = this;\n        if (visible === void 0) { visible = true; }\n        var postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                node: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\n        var postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\n    };\n    return NavigationNodes;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.NavigationNodes = NavigationNodes;\n/**\n * Represents an instance of a navigation node\n *\n */\nvar NavigationNode = /** @class */ (function (_super) {\n    __extends(NavigationNode, _super);\n    function NavigationNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\n        /**\n         * Represents the child nodes of this node\n         */\n        get: function () {\n            return new NavigationNodes(this, \"Children\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Deletes this node and any child nodes\n     */\n    NavigationNode.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return NavigationNode;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nvar Navigation = /** @class */ (function (_super) {\n    __extends(Navigation, _super);\n    /**\n     * Creates a new instance of the Navigation class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of these navigation components\n     */\n    function Navigation(baseUrl, path) {\n        if (path === void 0) { path = \"navigation\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\n        /**\n         * Gets the quicklaunch navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"quicklaunch\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\n        /**\n         * Gets the top bar navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"topnavigationbar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Navigation;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.Navigation = Navigation;\n/**\n * Represents the top level navigation service\n */\nvar NavigationService = /** @class */ (function (_super) {\n    __extends(NavigationService, _super);\n    function NavigationService(path) {\n        if (path === void 0) { path = null; }\n        return _super.call(this, \"_api/navigation\", path) || this;\n    }\n    /**\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\n     *\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\n     * @param customProperties comma seperated list of custom properties to be returned.\n     */\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\n        if (depth === void 0) { depth = 10; }\n        if (mapProviderName === void 0) { mapProviderName = null; }\n        if (customProperties === void 0) { customProperties = null; }\n        return (new NavigationService(\"MenuState\")).postCore({\n            body: JSON.stringify({\n                customProperties: customProperties,\n                depth: depth,\n                mapProviderName: mapProviderName,\n                menuNodeKey: menuNodeKey,\n            }),\n        });\n    };\n    /**\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\n     *\n     * @param currentUrl A url representing the SiteMapNode\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\n     */\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\n        if (mapProviderName === void 0) { mapProviderName = null; }\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\n            body: JSON.stringify({\n                currentUrl: currentUrl,\n                mapProviderName: mapProviderName,\n            }),\n        });\n    };\n    return NavigationService;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.NavigationService = NavigationService;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar logging_1 = __webpack_require__(5);\nvar httpclient_1 = __webpack_require__(21);\nvar utils_1 = __webpack_require__(10);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(2);\n/**\n * Manages a batch of OData operations\n */\nvar ODataBatch = /** @class */ (function () {\n    function ODataBatch(baseUrl, _batchId) {\n        if (_batchId === void 0) { _batchId = util_1.Util.getGUID(); }\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._dependencies = [];\n    }\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    ODataBatch.ParseResponse = function (body) {\n        return new Promise(function (resolve, reject) {\n            var responses = [];\n            var header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            var lines = body.split(\"\\n\");\n            var state = \"batch\";\n            var status;\n            var statusText;\n            for (var i = 0; i < lines.length; ++i) {\n                var line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        var parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    };\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\n        get: function () {\n            return this._batchId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    ODataBatch.prototype.add = function (url, method, options, parser) {\n        var info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        var p = new Promise(function (resolve, reject) {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    };\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    ODataBatch.prototype.addDependency = function () {\n        var resolver;\n        var promise = new Promise(function (resolve) {\n            resolver = resolve;\n        });\n        this._dependencies.push(promise);\n        return resolver;\n    };\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    ODataBatch.prototype.execute = function () {\n        var _this = this;\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added after the first set resolve\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\n    };\n    ODataBatch.prototype.executeImpl = function () {\n        var _this = this;\n        logging_1.Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(\"Resolving empty batch.\", logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        var client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\n            // build all the requests, send them, pipe results in order to parsers\n            var batchBody = [];\n            var currentChangeSetId = \"\";\n            for (var i = 0; i < _this._requests.length; i++) {\n                var reqInfo = _this._requests[i];\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n                    }\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n                }\n                // common batch part prefix\n                batchBody.push(\"Content-Type: application/http\\n\");\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n                var headers = new Headers();\n                // this is the url of the individual request within the batch\n                var url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    var method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                else {\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\n                }\n                // merge global config headers\n                utils_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.spHeaders);\n                // merge per-request headers\n                if (reqInfo.options) {\n                    utils_1.mergeHeaders(headers, reqInfo.options.headers);\n                }\n                // lastly we apply any default headers we need that may not exist\n                if (!headers.has(\"Accept\")) {\n                    headers.append(\"Accept\", \"application/json\");\n                }\n                if (!headers.has(\"Content-Type\")) {\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:3.0.6\");\n                }\n                // write headers into batch body\n                headers.forEach(function (value, name) {\n                    batchBody.push(name + \": \" + value + \"\\n\");\n                });\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n                }\n            }\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(\"--batch_\" + _this._batchId + \"--\\n\");\n            var batchHeaders = {\n                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this._batchId,\n            };\n            var batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n                \"method\": \"POST\",\n            };\n            logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", logging_1.LogLevel.Info);\n            return client.fetch(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(function (r) { return r.text(); })\n                .then(ODataBatch.ParseResponse)\n                .then(function (responses) {\n                if (responses.length !== _this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce(function (chain, response, index) {\n                    var request = _this._requests[index];\n                    logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", logging_1.LogLevel.Verbose);\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\n                }, Promise.resolve());\n            });\n        });\n    };\n    return ODataBatch;\n}());\nexports.ODataBatch = ODataBatch;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    appname: \"SPS2018Demo\",\n    debug: true\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar storage_1 = __webpack_require__(13);\nvar configuration_1 = __webpack_require__(49);\nvar logging_1 = __webpack_require__(5);\nvar rest_1 = __webpack_require__(50);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar rest_2 = __webpack_require__(60);\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the SharePoint REST interface\n */\nexports.sp = new rest_1.SPRest();\n/**\n * Provides access to the Microsoft Graph REST interface\n */\nexports.graph = new rest_2.GraphRest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Export everything back to the top level so it can be properly bundled\n */\n__export(__webpack_require__(69));\n__export(__webpack_require__(72));\n__export(__webpack_require__(74));\n__export(__webpack_require__(77));\n__export(__webpack_require__(78));\n// /**\n//  * Expose a subset of classes from the library for public consumption\n//  */\n// creating this class instead of directly assigning to default fixes issue #116\nvar Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Provides access to the Microsoft Graph REST interface\n     */\n    graph: exports.graph,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Makes requests using the fetch API\n */\nvar FetchClient = /** @class */ (function () {\n    function FetchClient() {\n    }\n    FetchClient.prototype.fetch = function (url, options) {\n        return global.fetch(url, options);\n    };\n    return FetchClient;\n}());\nexports.FetchClient = FetchClient;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)))\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Allows for the fluent construction of search queries\n */\nvar SearchQueryBuilder = /** @class */ (function () {\n    function SearchQueryBuilder(queryText, _query) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (_query === void 0) { _query = {}; }\n        this._query = _query;\n        if (typeof queryText === \"string\" && queryText.length > 0) {\n            this.extendQuery({ Querytext: queryText });\n        }\n    }\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (queryTemplate === void 0) { queryTemplate = {}; }\n        return new SearchQueryBuilder(queryText, queryTemplate);\n    };\n    SearchQueryBuilder.prototype.text = function (queryText) {\n        return this.extendQuery({ Querytext: queryText });\n    };\n    SearchQueryBuilder.prototype.template = function (template) {\n        return this.extendQuery({ QueryTemplate: template });\n    };\n    SearchQueryBuilder.prototype.sourceId = function (id) {\n        return this.extendQuery({ SourceId: id });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\n        get: function () {\n            return this.extendQuery({ EnableInterleaving: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\n        get: function () {\n            return this.extendQuery({ EnableStemming: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\n        get: function () {\n            return this.extendQuery({ TrimDuplicates: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.trimDuplicatesIncludeId = function (n) {\n        return this.extendQuery({ TrimDuplicatesIncludeId: n });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\n        get: function () {\n            return this.extendQuery({ EnableNicknames: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\n        get: function () {\n            return this.extendQuery({ EnableFQL: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\n        get: function () {\n            return this.extendQuery({ EnablePhonetic: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\n        get: function () {\n            return this.extendQuery({ BypassResultTypes: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\n        get: function () {\n            return this.extendQuery({ ProcessBestBets: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\n        get: function () {\n            return this.extendQuery({ EnableQueryRules: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\n        get: function () {\n            return this.extendQuery({ EnableSorting: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\n        get: function () {\n            return this.extendQuery({ GenerateBlockRankLog: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\n        return this.extendQuery({ RankingModelId: id });\n    };\n    SearchQueryBuilder.prototype.startRow = function (n) {\n        return this.extendQuery({ StartRow: n });\n    };\n    SearchQueryBuilder.prototype.rowLimit = function (n) {\n        return this.extendQuery({ RowLimit: n });\n    };\n    SearchQueryBuilder.prototype.rowsPerPage = function (n) {\n        return this.extendQuery({ RowsPerPage: n });\n    };\n    SearchQueryBuilder.prototype.selectProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SelectProperties: properties });\n    };\n    SearchQueryBuilder.prototype.culture = function (culture) {\n        return this.extendQuery({ Culture: culture });\n    };\n    SearchQueryBuilder.prototype.timeZoneId = function (id) {\n        return this.extendQuery({ TimeZoneId: id });\n    };\n    SearchQueryBuilder.prototype.refinementFilters = function () {\n        var filters = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filters[_i] = arguments[_i];\n        }\n        return this.extendQuery({ RefinementFilters: filters });\n    };\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\n        return this.extendQuery({ Refiners: refiners });\n    };\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\n        return this.extendQuery({ HiddenConstraints: constraints });\n    };\n    SearchQueryBuilder.prototype.sortList = function () {\n        var sorts = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sorts[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SortList: sorts });\n    };\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\n        return this.extendQuery({ Timeout: milliseconds });\n    };\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ HitHighlightedProperties: properties });\n    };\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\n        return this.extendQuery({ ClientType: clientType });\n    };\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\n        return this.extendQuery({ PersonalizationData: data });\n    };\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\n        return this.extendQuery({ ResultsUrl: url });\n    };\n    SearchQueryBuilder.prototype.queryTag = function () {\n        var tags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tags[_i] = arguments[_i];\n        }\n        return this.extendQuery({ QueryTag: tags });\n    };\n    SearchQueryBuilder.prototype.properties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ Properties: properties });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\n        get: function () {\n            return this.extendQuery({ ProcessPersonalFavorites: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\n    };\n    SearchQueryBuilder.prototype.reorderingRules = function () {\n        var rules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            rules[_i] = arguments[_i];\n        }\n        return this.extendQuery({ ReorderingRules: rules });\n    };\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\n        get: function () {\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\n        return this.extendQuery({ CollapseSpecification: spec });\n    };\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\n        return this.extendQuery({ UILanguage: lang });\n    };\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\n        return this.extendQuery({ DesiredSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\n        return this.extendQuery({ MaxSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\n        return this.extendQuery({ SummaryLength: len });\n    };\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\n        return this._query;\n    };\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\n        this._query = util_1.Util.extend(this._query, part);\n        return this;\n    };\n    return SearchQueryBuilder;\n}());\nexports.SearchQueryBuilder = SearchQueryBuilder;\n/**\n * Describes the search API\n *\n */\nvar Search = /** @class */ (function (_super) {\n    __extends(Search, _super);\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    function Search(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/postquery\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    Search.prototype.execute = function (query) {\n        var _this = this;\n        var formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = this.fixupProp(query.SortList);\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = this.fixupProp(query.Properties);\n        }\n        var postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\n    };\n    /**\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\n     *\n     * @param prop property to fixup for container struct\n     */\n    Search.prototype.fixupProp = function (prop) {\n        if (prop.hasOwnProperty(\"results\")) {\n            return prop;\n        }\n        return { results: prop };\n    };\n    return Search;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nvar SearchResults = /** @class */ (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\n        if (_raw === void 0) { _raw = null; }\n        if (_primary === void 0) { _primary = null; }\n        this._url = _url;\n        this._query = _query;\n        this._raw = _raw;\n        this._primary = _primary;\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n    }\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\n        get: function () {\n            return this.RawSearchResults.ElapsedTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\n        get: function () {\n            return this._raw;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\n        get: function () {\n            if (this._primary === null) {\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\n            }\n            return this._primary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a page of results\n     *\n     * @param pageNumber Index of the page to return. Used to determine StartRow\n     * @param pageSize Optional, items per page (default = 10)\n     */\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\n        // if we got all the available rows we don't have another page\n        if (this.TotalRows < this.RowCount) {\n            return Promise.resolve(null);\n        }\n        // if pageSize is supplied, then we use that regardless of any previous values\n        // otherwise get the previous RowLimit or default to 10\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\n        var query = util_1.Util.extend(this._query, {\n            RowLimit: rows,\n            StartRow: rows * (pageNumber - 1),\n        });\n        // we have reached the end\n        if (query.StartRow > this.TotalRows) {\n            return Promise.resolve(null);\n        }\n        var search = new Search(this._url, null);\n        return search.execute(query);\n    };\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\n        var results = new Array();\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\n            var tempResult = tempResults_1[_i];\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\n            results.push(cells.reduce(function (res, cell) {\n                Object.defineProperty(res, cell.Key, {\n                    configurable: false,\n                    enumerable: false,\n                    value: cell.Value,\n                    writable: false,\n                });\n                return res;\n            }, {}));\n        }\n        return results;\n    };\n    return SearchResults;\n}());\nexports.SearchResults = SearchResults;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\nvar SearchBuiltInSourceId = /** @class */ (function () {\n    function SearchBuiltInSourceId() {\n    }\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\n    return SearchBuiltInSourceId;\n}());\nexports.SearchBuiltInSourceId = SearchBuiltInSourceId;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = __webpack_require__(13);\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar CachingOptions = /** @class */ (function () {\n    function CachingOptions(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\n        get: function () {\n            if (this.storeName === \"local\") {\n                return CachingOptions.storage.local;\n            }\n            else {\n                return CachingOptions.storage.session;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CachingOptions.storage = new storage_1.PnPClientStorage();\n    return CachingOptions;\n}());\nexports.CachingOptions = CachingOptions;\nvar CachingParserWrapper = /** @class */ (function () {\n    function CachingParserWrapper(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    CachingParserWrapper.prototype.parse = function (response) {\n        var _this = this;\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(function (data) {\n            if (_this._cacheOptions.store !== null) {\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    };\n    return CachingParserWrapper;\n}());\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar SearchSuggest = /** @class */ (function (_super) {\n    __extends(SearchSuggest, _super);\n    function SearchSuggest(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/suggest\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    SearchSuggest.prototype.execute = function (query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\n    };\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    };\n    return SearchSuggest;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.SearchSuggest = SearchSuggest;\nvar SearchSuggestResult = /** @class */ (function () {\n    function SearchSuggestResult(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n    return SearchSuggestResult;\n}());\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar webs_1 = __webpack_require__(11);\nvar usercustomactions_1 = __webpack_require__(26);\nvar odata_1 = __webpack_require__(3);\nvar batch_1 = __webpack_require__(28);\nvar features_1 = __webpack_require__(40);\n/**\n * Describes a site collection\n *\n */\nvar Site = /** @class */ (function (_super) {\n    __extends(Site, _super);\n    /**\n     * Creates a new instance of the Site class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this site collection\n     */\n    function Site(baseUrl, path) {\n        if (path === void 0) { path = \"_api/site\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\n        /**\n         * Gets the root web of the site collection\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this, \"rootweb\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"features\", {\n        /**\n         * Gets the active features for this site collection\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\n        /**\n         * Gets all custom actions for this site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the context information for this site collection\n     */\n    Site.prototype.getContextInfo = function () {\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.postCore().then(function (data) {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                var info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\n        var q = new sharepointqueryable_1.SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the site url from a page url\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\n        var q = new sharepointqueryable_1.SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Creates a new batch for requests within the context of this site collection\n     *\n     */\n    Site.prototype.createBatch = function () {\n        return new batch_1.ODataBatch(this.parentUrl);\n    };\n    /**\n     * Opens a web by id (using POST)\n     *\n     * @param webId The GUID id of the web to open\n     */\n    Site.prototype.openWebById = function (webId) {\n        return this.clone(Site, \"openWebById('\" + webId + \"')\").postCore().then(function (d) {\n            return {\n                data: d,\n                web: webs_1.Web.fromUrl(odata_1.spExtractODataId(d)),\n            };\n        });\n    };\n    return Site;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Site = Site;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webs_1 = __webpack_require__(11);\nvar roles_1 = __webpack_require__(22);\nvar types_1 = __webpack_require__(17);\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\n    __extends(SharePointQueryableSecurable, _super);\n    function SharePointQueryableSecurable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\n        /**\n         * Gets the set of role assignments for this item\n         *\n         */\n        get: function () {\n            return new roles_1.RoleAssignments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\n        /**\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\n        var q = this.clone(sharepointqueryable_1.SharePointQueryable, \"getUserEffectivePermissions(@user)\");\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get().then(function (r) {\n            // handle verbose mode\n            return r.hasOwnProperty(\"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\n        });\n    };\n    /**\n     * Gets the effective permissions for the current user\n     */\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\n        var _this = this;\n        var w = webs_1.Web.fromUrl(this.toUrl());\n        return w.currentUser.select(\"LoginName\").getAs().then(function (user) {\n            return _this.getUserEffectivePermissions(user.LoginName);\n        });\n    };\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\n    };\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\n    };\n    /**\n     * Determines if a given user has the appropriate permissions\n     *\n     * @param loginName The user to check\n     * @param permission The permission being checked\n     */\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\n        var _this = this;\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Determines if the current user has the requested permissions\n     *\n     * @param permission The permission we wish to check\n     */\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\n        var _this = this;\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Taken from sp.js, checks the supplied permissions against the mask\n     *\n     * @param value The security principal's permissions on the given object\n     * @param perm The permission checked against the value\n     */\n    /* tslint:disable:no-bitwise */\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\n        if (!perm) {\n            return true;\n        }\n        var low = parseFloat(value.Low);\n        var high = parseFloat(value.High);\n        if (perm === types_1.PermissionKind.FullMask) {\n            return (high & 32767) === 32767 && low === 65535;\n        }\n        perm = perm - 1;\n        var num = 1;\n        if (perm >= 0 && perm < 32) {\n            num = num << perm;\n            return 0 !== (low & num);\n        }\n        else if (perm >= 32 && perm < 64) {\n            num = num << perm - 32;\n            return 0 !== (high & num);\n        }\n        return false;\n    };\n    return SharePointQueryableSecurable;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.SharePointQueryableSecurable = SharePointQueryableSecurable;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar sitegroups_1 = __webpack_require__(23);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a collection of all site collection users\n *\n */\nvar SiteUsers = /** @class */ (function (_super) {\n    __extends(SiteUsers, _super);\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user collection\n     */\n    function SiteUsers(baseUrl, path) {\n        if (path === void 0) { path = \"siteusers\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email address of the user to retrieve\n     */\n    SiteUsers.prototype.getByEmail = function (email) {\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n    };\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user to retrieve\n     */\n    SiteUsers.prototype.getById = function (id) {\n        return new SiteUser(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The login name of the user to retrieve\n     */\n    SiteUsers.prototype.getByLoginName = function (loginName) {\n        var su = new SiteUser(this);\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\n        return su;\n    };\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user to remove\n     */\n    SiteUsers.prototype.removeById = function (id) {\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\").postCore();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user to remove\n     */\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\");\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return o.postCore();\n    };\n    /**\n     * Adds a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    SiteUsers.prototype.add = function (loginName) {\n        var _this = this;\n        return this.clone(SiteUsers, null).postCore({\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\n        }).then(function () { return _this.getByLoginName(loginName); });\n    };\n    return SiteUsers;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nvar SiteUser = /** @class */ (function (_super) {\n    __extends(SiteUser, _super);\n    function SiteUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\n        /**\n         * Gets the groups for this user\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    SiteUser.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.postCore({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                user: _this,\n            };\n        });\n    };\n    /**\n     * Delete this user\n     *\n     */\n    SiteUser.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return SiteUser;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nvar CurrentUser = /** @class */ (function (_super) {\n    __extends(CurrentUser, _super);\n    function CurrentUser(baseUrl, path) {\n        if (path === void 0) { path = \"currentuser\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return CurrentUser;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.CurrentUser = CurrentUser;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar LimitedWebPartManager = /** @class */ (function (_super) {\n    __extends(LimitedWebPartManager, _super);\n    function LimitedWebPartManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\n        /**\n         * Gets the set of web part definitions contained by this web part manager\n         *\n         */\n        get: function () {\n            return new WebPartDefinitions(this, \"webparts\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    LimitedWebPartManager.prototype.export = function (id) {\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    };\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    LimitedWebPartManager.prototype.import = function (xml) {\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    };\n    return LimitedWebPartManager;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.LimitedWebPartManager = LimitedWebPartManager;\nvar WebPartDefinitions = /** @class */ (function (_super) {\n    __extends(WebPartDefinitions, _super);\n    function WebPartDefinitions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getById = function (id) {\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\n    };\n    /**\n     * Gets a web part definition from the collection by storage id\n     *\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getByControlId = function (id) {\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\n    };\n    return WebPartDefinitions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.WebPartDefinitions = WebPartDefinitions;\nvar WebPartDefinition = /** @class */ (function (_super) {\n    __extends(WebPartDefinition, _super);\n    function WebPartDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\n        /**\n         * Gets the webpart information associated with this definition\n         */\n        get: function () {\n            return new WebPart(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\n     */\n    WebPartDefinition.prototype.saveChanges = function () {\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\n    };\n    /**\n     * Moves the Web Part to a different location on a Web Part Page\n     *\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\n     */\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\n    };\n    /**\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.close = function () {\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\n    };\n    /**\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.open = function () {\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\n    };\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    WebPartDefinition.prototype.delete = function () {\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\n    };\n    return WebPartDefinition;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.WebPartDefinition = WebPartDefinition;\nvar WebPart = /** @class */ (function (_super) {\n    __extends(WebPart, _super);\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    function WebPart(baseUrl, path) {\n        if (path === void 0) { path = \"webpart\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return WebPart;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.WebPart = WebPart;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of List objects\n *\n */\nvar Features = /** @class */ (function (_super) {\n    __extends(Features, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Features(baseUrl, path) {\n        if (path === void 0) { path = \"features\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    Features.prototype.getById = function (id) {\n        var feature = new Feature(this);\n        feature.concat(\"('\" + id + \"')\");\n        return feature;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    Features.prototype.add = function (id, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"add\").postCore({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(function (data) {\n            return {\n                data: data,\n                feature: _this.getById(id),\n            };\n        });\n    };\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    Features.prototype.remove = function (id, force) {\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"remove\").postCore({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    };\n    return Features;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Features = Features;\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    function Feature() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    Feature.prototype.deactivate = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var removeDependency = this.addBatchDependency();\n        var idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(function (feature) {\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    };\n    return Feature;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Feature = Feature;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar files_1 = __webpack_require__(8);\nvar odata_1 = __webpack_require__(3);\nvar util_1 = __webpack_require__(0);\n/**\n * Represents an app catalog\n */\nvar AppCatalog = /** @class */ (function (_super) {\n    __extends(AppCatalog, _super);\n    function AppCatalog(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\n        var _this = this;\n        // we need to handle the case of getting created from something that already has \"_api/...\" or does not\n        var candidateUrl = \"\";\n        if (typeof baseUrl === \"string\") {\n            candidateUrl = baseUrl;\n        }\n        else if (typeof baseUrl !== \"undefined\") {\n            candidateUrl = baseUrl.toUrl();\n        }\n        _this = _super.call(this, util_1.extractWebUrl(candidateUrl), path) || this;\n        return _this;\n    }\n    /**\n     * Get details of specific app from the app catalog\n     * @param id - Specify the guid of the app\n     */\n    AppCatalog.prototype.getAppById = function (id) {\n        return new App(this, \"getById('\" + id + \"')\");\n    };\n    /**\n     * Uploads an app package. Not supported for batching\n     *\n     * @param filename Filename to create.\n     * @param content app package data (eg: the .app or .sppkg file).\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\n     * @returns Promise<AppAddResult>\n     */\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        // you don't add to the availableapps collection\n        var adder = new AppCatalog(util_1.extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\n        return adder.postCore({\n            body: content,\n        }).then(function (r) {\n            return {\n                data: r,\n                file: new files_1.File(odata_1.spExtractODataId(r)),\n            };\n        });\n    };\n    return AppCatalog;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.AppCatalog = AppCatalog;\n/**\n * Represents the actions you can preform on a given app within the catalog\n */\nvar App = /** @class */ (function (_super) {\n    __extends(App, _super);\n    function App() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This method deploys an app on the app catalog.  It must be called in the context\n     * of the tenant app catalog web or it will fail.\n     */\n    App.prototype.deploy = function () {\n        return this.clone(App, \"Deploy\").postCore();\n    };\n    /**\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\n     * of the tenant app catalog web or it will fail.\n     */\n    App.prototype.retract = function () {\n        return this.clone(App, \"Retract\").postCore();\n    };\n    /**\n     * This method allows an app which is already deployed to be installed on a web\n     */\n    App.prototype.install = function () {\n        return this.clone(App, \"Install\").postCore();\n    };\n    /**\n     * This method allows an app which is already insatlled to be uninstalled on a web\n     */\n    App.prototype.uninstall = function () {\n        return this.clone(App, \"Uninstall\").postCore();\n    };\n    /**\n     * This method allows an app which is already insatlled to be upgraded on a web\n     */\n    App.prototype.upgrade = function () {\n        return this.clone(App, \"Upgrade\").postCore();\n    };\n    /**\n     * This method removes an app from the app catalog.  It must be called in the context\n     * of the tenant app catalog web or it will fail.\n     */\n    App.prototype.remove = function () {\n        return this.clone(App, \"Remove\").postCore();\n    };\n    return App;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.App = App;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar files_1 = __webpack_require__(8);\nvar items_1 = __webpack_require__(12);\nvar util_1 = __webpack_require__(0);\n/**\n * Gets the next order value 1 based for the provided collection\n *\n * @param collection Collection of orderable things\n */\nfunction getNextOrder(collection) {\n    if (collection.length < 1) {\n        return 1;\n    }\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\n}\n/**\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\n *\n * @param this Types the called context this to a string in which the search will be conducted\n * @param regex A regex or string to match\n * @param startpos A starting position from which the search will begin\n */\nfunction regexIndexOf(regex, startpos) {\n    if (startpos === void 0) { startpos = 0; }\n    var indexOf = this.substring(startpos).search(regex);\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\n}\n/**\n * Gets an attribute value from an html string block\n *\n * @param html HTML to search\n * @param attrName The name of the attribute to find\n */\nfunction getAttrValueFromString(html, attrName) {\n    var reg = new RegExp(attrName + \"=\\\"([^\\\"]*?)\\\"\", \"i\");\n    var match = reg.exec(html);\n    return match.length > 0 ? match[1] : null;\n}\n/**\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\n *\n * @param html HTML to search\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\n */\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\n    var blocks = [];\n    if (typeof html === \"undefined\" || html === null) {\n        return blocks;\n    }\n    // remove some extra whitespace if present\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\n    // find the first div\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\n    if (startIndex < 0) {\n        // we found no blocks in the supplied html\n        return blocks;\n    }\n    // this loop finds each of the blocks\n    while (startIndex > -1) {\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\n        var openCounter = 1;\n        var searchIndex = startIndex + 1;\n        var nextDivOpen = -1;\n        var nextCloseDiv = -1;\n        // this loop finds the </div> tag that matches the opening of the control\n        while (true) {\n            // find both the next opening and closing div tags from our current searching index\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\n            if (nextDivOpen < 0) {\n                // we have no more opening divs, just set this to simplify checks below\n                nextDivOpen = cleanedHtml.length + 1;\n            }\n            // determine which we found first, then increment or decrement our counter\n            // and set the location to begin searching again\n            if (nextDivOpen < nextCloseDiv) {\n                openCounter++;\n                searchIndex = nextDivOpen + 1;\n            }\n            else if (nextCloseDiv < nextDivOpen) {\n                openCounter--;\n                searchIndex = nextCloseDiv + 1;\n            }\n            // once we have no open divs back to the level of the opening control div\n            // meaning we have all of the markup we intended to find\n            if (openCounter === 0) {\n                // get the bounded markup, +6 is the size of the ending </div> tag\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\n                // save the control data we found to the array\n                blocks.push(collector(markup));\n                // get out of our while loop\n                break;\n            }\n            if (openCounter > 1000 || openCounter < 0) {\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\n                // something has gone wrong above and we are probably stuck in our while loop\n                // let's get out of our while loop and not hang everything\n                throw new Error(\"getBoundedDivMarkup exceeded depth parameters.\");\n            }\n        }\n        // get the start of the next control\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\n    }\n    return blocks;\n}\n/**\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\n *\n * @param collection The collection to normalize\n */\nfunction reindex(collection) {\n    for (var i = 0; i < collection.length; i++) {\n        collection[i].order = i + 1;\n        if (collection[i].hasOwnProperty(\"columns\")) {\n            reindex(collection[i].columns);\n        }\n        else if (collection[i].hasOwnProperty(\"controls\")) {\n            reindex(collection[i].controls);\n        }\n    }\n}\n/**\n * Represents the data and methods associated with client side \"modern\" pages\n */\nvar ClientSidePage = /** @class */ (function (_super) {\n    __extends(ClientSidePage, _super);\n    /**\n     * Creates a new instance of the ClientSidePage class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\n     */\n    function ClientSidePage(file, sections, commentsDisabled) {\n        if (sections === void 0) { sections = []; }\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\n        var _this = _super.call(this, file) || this;\n        _this.sections = sections;\n        _this.commentsDisabled = commentsDisabled;\n        return _this;\n    }\n    /**\n     * Creates a new blank page within the supplied library\n     *\n     * @param library The library in which to create the page\n     * @param pageName Filename of the page, such as \"page.aspx\"\n     * @param title The display title of the page\n     * @param pageLayoutType Layout type of the page to use\n     */\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\n        // see if file exists, if not create it\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\n            if (fs.length > 0) {\n                throw new Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\n            }\n            // get our server relative path\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\n                var pageServerRelPath = util_1.Util.combinePaths(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\n                // add the template file\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, files_1.TemplateFileType.ClientSidePage).then(function (far) {\n                    // get the item associated with the file\n                    return far.file.getItem().then(function (i) {\n                        // update the item to have the correct values to create the client side page\n                        return i.update({\n                            BannerImageUrl: {\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\n                            },\n                            CanvasContent1: \"\",\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\n                            PageLayoutType: pageLayoutType,\n                            PromotedState: 0 /* NotPromoted */,\n                            Title: title,\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\n                    });\n                });\n            });\n        });\n    };\n    /**\n     * Creates a new ClientSidePage instance from the provided html content string\n     *\n     * @param html HTML markup representing the page\n     */\n    ClientSidePage.fromFile = function (file) {\n        var page = new ClientSidePage(file);\n        return page.load().then(function (_) { return page; });\n    };\n    /**\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\n     *\n     * @param json The json object to encode into a string\n     */\n    ClientSidePage.jsonToEscapedString = function (json) {\n        return JSON.stringify(json)\n            .replace(/\"/g, \"&quot;\")\n            .replace(/:/g, \"&#58;\")\n            .replace(/{/g, \"&#123;\")\n            .replace(/}/g, \"&#125;\");\n    };\n    /**\n     * Converts an escaped string from a client-side control attribute to a json object\n     *\n     * @param escapedString\n     */\n    ClientSidePage.escapedStringToJson = function (escapedString) {\n        return JSON.parse(escapedString\n            .replace(/&quot;/g, \"\\\"\")\n            .replace(/&#58;/g, \":\")\n            .replace(/&#123;/g, \"{\")\n            .replace(/&#125;/g, \"}\"));\n    };\n    /**\n     * Add a section to this page\n     */\n    ClientSidePage.prototype.addSection = function () {\n        var section = new CanvasSection(this, getNextOrder(this.sections));\n        this.sections.push(section);\n        return section;\n    };\n    /**\n     * Converts this page's content to html markup\n     */\n    ClientSidePage.prototype.toHtml = function () {\n        // trigger reindex of the entire tree\n        reindex(this.sections);\n        var html = [];\n        html.push(\"<div>\");\n        for (var i = 0; i < this.sections.length; i++) {\n            html.push(this.sections[i].toHtml());\n        }\n        html.push(\"</div>\");\n        return html.join(\"\");\n    };\n    /**\n     * Loads this page instance's content from the supplied html\n     *\n     * @param html html string representing the page's content\n     */\n    ClientSidePage.prototype.fromHtml = function (html) {\n        var _this = this;\n        // reset sections\n        this.sections = [];\n        // gather our controls from the supplied html\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\n            // get the control type\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\n            // if no control type is present this is a column which we give type 0 to let us process it\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\n            var control = null;\n            switch (controlType) {\n                case 0:\n                    // empty canvas column\n                    control = new CanvasColumn(null, 0);\n                    control.fromHtml(markup);\n                    _this.mergeColumnToTree(control);\n                    break;\n                case 3:\n                    // client side webpart\n                    control = new ClientSideWebpart(\"\");\n                    control.fromHtml(markup);\n                    _this.mergeControlToTree(control);\n                    break;\n                case 4:\n                    // client side text\n                    control = new ClientSideText();\n                    control.fromHtml(markup);\n                    _this.mergeControlToTree(control);\n                    break;\n            }\n        });\n        reindex(this.sections);\n        return this;\n    };\n    /**\n     * Loads this page's content from the server\n     */\n    ClientSidePage.prototype.load = function () {\n        var _this = this;\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\n            _this.fromHtml(item.CanvasContent1);\n            _this.commentsDisabled = item.CommentsDisabled;\n        });\n    };\n    /**\n     * Persists the content changes (sections, columns, and controls)\n     */\n    ClientSidePage.prototype.save = function () {\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\n    };\n    /**\n     * Enables comments on this page\n     */\n    ClientSidePage.prototype.enableComments = function () {\n        var _this = this;\n        return this.setCommentsOn(true).then(function (r) {\n            _this.commentsDisabled = false;\n            return r;\n        });\n    };\n    /**\n     * Disables comments on this page\n     */\n    ClientSidePage.prototype.disableComments = function () {\n        var _this = this;\n        return this.setCommentsOn(false).then(function (r) {\n            _this.commentsDisabled = true;\n            return r;\n        });\n    };\n    /**\n     * Finds a control by the specified instance id\n     *\n     * @param id Instance id of the control to find\n     */\n    ClientSidePage.prototype.findControlById = function (id) {\n        return this.findControl(function (c) { return c.id === id; });\n    };\n    /**\n     * Finds a control within this page's control tree using the supplied predicate\n     *\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\n     */\n    ClientSidePage.prototype.findControl = function (predicate) {\n        // check all sections\n        for (var i = 0; i < this.sections.length; i++) {\n            // check all columns\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\n                // check all controls\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\n                    // check to see if the predicate likes this control\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\n                        return this.sections[i].columns[j].controls[k];\n                    }\n                }\n            }\n        }\n        // we found nothing so give nothing back\n        return null;\n    };\n    /**\n     * Sets the comments flag for a page\n     *\n     * @param on If true comments are enabled, false they are disabled\n     */\n    ClientSidePage.prototype.setCommentsOn = function (on) {\n        return this.getItem().then(function (i) {\n            var updater = new items_1.Item(i, \"SetCommentsDisabled(\" + !on + \")\");\n            return updater.update({});\n        });\n    };\n    /**\n     * Merges the control into the tree of sections and columns for this page\n     *\n     * @param control The control to merge\n     */\n    ClientSidePage.prototype.mergeControlToTree = function (control) {\n        var section = null;\n        var column = null;\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\n        if (sections.length < 1) {\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\n            this.sections.push(section);\n        }\n        else {\n            section = sections[0];\n        }\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\n        if (columns.length < 1) {\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\n            section.columns.push(column);\n        }\n        else {\n            column = columns[0];\n        }\n        control.column = column;\n        column.addControl(control);\n    };\n    /**\n     * Merges the supplied column into the tree\n     *\n     * @param column Column to merge\n     * @param position The position data for the column\n     */\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\n        var section = null;\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\n        if (sections.length < 1) {\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\n            this.sections.push(section);\n        }\n        else {\n            section = sections[0];\n        }\n        column.section = section;\n        section.columns.push(column);\n    };\n    /**\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\n     *\n     * @param properties Set of properties to update\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\n    };\n    return ClientSidePage;\n}(files_1.File));\nexports.ClientSidePage = ClientSidePage;\nvar CanvasSection = /** @class */ (function () {\n    function CanvasSection(page, order, columns) {\n        if (columns === void 0) { columns = []; }\n        this.page = page;\n        this.order = order;\n        this.columns = columns;\n    }\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\n        /**\n         * Default column (this.columns[0]) for this section\n         */\n        get: function () {\n            if (this.columns.length < 1) {\n                this.addColumn(12);\n            }\n            return this.columns[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a new column to this section\n     */\n    CanvasSection.prototype.addColumn = function (factor) {\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\n        this.columns.push(column);\n        return column;\n    };\n    /**\n     * Adds a control to the default column for this section\n     *\n     * @param control Control to add to the default column\n     */\n    CanvasSection.prototype.addControl = function (control) {\n        this.defaultColumn.addControl(control);\n        return this;\n    };\n    CanvasSection.prototype.toHtml = function () {\n        var html = [];\n        for (var i = 0; i < this.columns.length; i++) {\n            html.push(this.columns[i].toHtml());\n        }\n        return html.join(\"\");\n    };\n    return CanvasSection;\n}());\nexports.CanvasSection = CanvasSection;\nvar CanvasControl = /** @class */ (function () {\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\n        if (column === void 0) { column = null; }\n        if (order === void 0) { order = 1; }\n        if (id === void 0) { id = util_1.Util.getGUID(); }\n        if (controlData === void 0) { controlData = null; }\n        this.controlType = controlType;\n        this.dataVersion = dataVersion;\n        this.column = column;\n        this.order = order;\n        this.id = id;\n        this.controlData = controlData;\n    }\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\n        /**\n         * Value of the control's \"data-sp-controldata\" attribute\n         */\n        get: function () {\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CanvasControl.prototype.fromHtml = function (html) {\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\n        this.controlType = this.controlData.controlType;\n        this.id = this.controlData.id;\n    };\n    return CanvasControl;\n}());\nexports.CanvasControl = CanvasControl;\nvar CanvasColumn = /** @class */ (function (_super) {\n    __extends(CanvasColumn, _super);\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\n        if (factor === void 0) { factor = 12; }\n        if (controls === void 0) { controls = []; }\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\n        var _this = _super.call(this, 0, dataVersion) || this;\n        _this.section = section;\n        _this.order = order;\n        _this.factor = factor;\n        _this.controls = controls;\n        return _this;\n    }\n    CanvasColumn.prototype.addControl = function (control) {\n        control.column = this;\n        this.controls.push(control);\n        return this;\n    };\n    CanvasColumn.prototype.getControl = function (index) {\n        return this.controls[index];\n    };\n    CanvasColumn.prototype.toHtml = function () {\n        var html = [];\n        if (this.controls.length < 1) {\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\n        }\n        else {\n            for (var i = 0; i < this.controls.length; i++) {\n                html.push(this.controls[i].toHtml(i + 1));\n            }\n        }\n        return html.join(\"\");\n    };\n    CanvasColumn.prototype.fromHtml = function (html) {\n        _super.prototype.fromHtml.call(this, html);\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\n        this.factor = this.controlData.position.sectionFactor;\n        this.order = this.controlData.position.sectionIndex;\n    };\n    CanvasColumn.prototype.getControlData = function () {\n        return {\n            displayMode: 2,\n            position: {\n                sectionFactor: this.factor,\n                sectionIndex: this.order,\n                zoneIndex: this.section.order,\n            },\n        };\n    };\n    return CanvasColumn;\n}(CanvasControl));\nexports.CanvasColumn = CanvasColumn;\nvar ClientSideText = /** @class */ (function (_super) {\n    __extends(ClientSideText, _super);\n    function ClientSideText(text) {\n        if (text === void 0) { text = \"\"; }\n        var _this = _super.call(this, 4, \"1.0\") || this;\n        _this.text = text;\n        return _this;\n    }\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\n        /**\n         * The text markup of this control\n         */\n        get: function () {\n            return this._text;\n        },\n        set: function (text) {\n            if (!text.startsWith(\"<p>\")) {\n                text = \"<p>\" + text + \"</p>\";\n            }\n            this._text = text;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ClientSideText.prototype.getControlData = function () {\n        return {\n            controlType: this.controlType,\n            editorType: \"CKEditor\",\n            id: this.id,\n            position: {\n                controlIndex: this.order,\n                sectionFactor: this.column.factor,\n                sectionIndex: this.column.order,\n                zoneIndex: this.column.section.order,\n            },\n        };\n    };\n    ClientSideText.prototype.toHtml = function (index) {\n        // set our order to the value passed in\n        this.order = index;\n        var html = [];\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\n        html.push(\"\" + this.text);\n        html.push(\"</div>\");\n        html.push(\"</div>\");\n        return html.join(\"\");\n    };\n    ClientSideText.prototype.fromHtml = function (html) {\n        _super.prototype.fromHtml.call(this, html);\n        var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>/i.exec(html);\n        this.text = match.length > 1 ? match[1] : \"\";\n    };\n    return ClientSideText;\n}(CanvasControl));\nexports.ClientSideText = ClientSideText;\nvar ClientSideWebpart = /** @class */ (function (_super) {\n    __extends(ClientSideWebpart, _super);\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent) {\n        if (description === void 0) { description = \"\"; }\n        if (propertieJson === void 0) { propertieJson = {}; }\n        if (webPartId === void 0) { webPartId = \"\"; }\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\n        var _this = _super.call(this, 3, \"1.0\") || this;\n        _this.title = title;\n        _this.description = description;\n        _this.propertieJson = propertieJson;\n        _this.webPartId = webPartId;\n        _this.htmlProperties = htmlProperties;\n        _this.serverProcessedContent = serverProcessedContent;\n        return _this;\n    }\n    ClientSideWebpart.fromComponentDef = function (definition) {\n        var part = new ClientSideWebpart(\"\");\n        part.import(definition);\n        return part;\n    };\n    ClientSideWebpart.prototype.import = function (component) {\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\");\n        var manifest = JSON.parse(component.Manifest);\n        this.title = manifest.preconfiguredEntries[0].title.default;\n        this.description = manifest.preconfiguredEntries[0].description.default;\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\n    };\n    ClientSideWebpart.prototype.setProperties = function (properties) {\n        this.propertieJson = properties;\n        return this;\n    };\n    ClientSideWebpart.prototype.getProperties = function () {\n        return this.propertieJson;\n    };\n    ClientSideWebpart.prototype.toHtml = function (index) {\n        // set our order to the value passed in\n        this.order = index;\n        // will form the value of the data-sp-webpartdata attribute\n        var data = {\n            dataVersion: this.dataVersion,\n            description: this.description,\n            id: this.webPartId,\n            instanceId: this.id,\n            properties: this.propertieJson,\n            title: this.title,\n        };\n        var html = [];\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\n        html.push(\"<div data-sp-componentid>\");\n        html.push(this.webPartId);\n        html.push(\"</div>\");\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\n        html.push(this.renderHtmlProperties());\n        html.push(\"</div>\");\n        html.push(\"</div>\");\n        html.push(\"</div>\");\n        return html.join(\"\");\n    };\n    ClientSideWebpart.prototype.fromHtml = function (html) {\n        _super.prototype.fromHtml.call(this, html);\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\n        this.title = webPartData.title;\n        this.description = webPartData.description;\n        this.webPartId = webPartData.id;\n        this.setProperties(webPartData.properties);\n        if (typeof webPartData.serverProcessedContent !== \"undefined\") {\n            this.serverProcessedContent = webPartData.serverProcessedContent;\n        }\n        // get our html properties\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\n        });\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\n    };\n    ClientSideWebpart.prototype.getControlData = function () {\n        return {\n            controlType: this.controlType,\n            id: this.id,\n            position: {\n                controlIndex: this.order,\n                sectionFactor: this.column.factor,\n                sectionIndex: this.column.order,\n                zoneIndex: this.column.section.order,\n            },\n            webPartId: this.webPartId,\n        };\n    };\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\n        var html = [];\n        if (typeof this.serverProcessedContent === \"undefined\" || this.serverProcessedContent === null) {\n            html.push(this.htmlProperties);\n        }\n        else if (typeof this.serverProcessedContent !== \"undefined\") {\n            if (typeof this.serverProcessedContent.searchablePlainTexts !== \"undefined\") {\n                for (var i = 0; i < this.serverProcessedContent.searchablePlainTexts.length; i++) {\n                    var prop = this.serverProcessedContent.searchablePlainTexts[i];\n                    html.push(\"<div data-sp-prop-name=\\\"\" + prop.Name + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\n                    html.push(prop.Value);\n                    html.push(\"</div>\");\n                }\n            }\n            if (typeof this.serverProcessedContent.imageSources !== \"undefined\") {\n                for (var i = 0; i < this.serverProcessedContent.imageSources.length; i++) {\n                    var prop = this.serverProcessedContent.imageSources[i];\n                    html.push(\"<img data-sp-prop-name=\\\"\" + prop.Name + \"\\\" src=\\\"\" + prop.Value + \"\\\" />\");\n                }\n            }\n            if (typeof this.serverProcessedContent.links !== \"undefined\") {\n                for (var i = 0; i < this.serverProcessedContent.links.length; i++) {\n                    var prop = this.serverProcessedContent.links[i];\n                    html.push(\"<a data-sp-prop-name=\\\"\" + prop.Name + \"\\\" href=\\\"\" + prop.Value + \"\\\"></a>\");\n                }\n            }\n        }\n        return html.join(\"\");\n    };\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.serverProcessedContent !== \"undefined\") {\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\n        }\n        else if (typeof props.serverProcessedContent !== \"undefined\") {\n            this.serverProcessedContent = props.serverProcessedContent;\n        }\n        else {\n            this.serverProcessedContent = null;\n        }\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.properties !== \"undefined\") {\n            return props.webPartData.properties;\n        }\n        else if (typeof props.properties !== \"undefined\") {\n            return props.properties;\n        }\n        else {\n            return props;\n        }\n    };\n    return ClientSideWebpart;\n}(CanvasControl));\nexports.ClientSideWebpart = ClientSideWebpart;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Exposes social following methods\n */\nvar SocialQuery = /** @class */ (function (_super) {\n    __extends(SocialQuery, _super);\n    /**\n     * Creates a new instance of the SocialQuery class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\n     */\n    function SocialQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/social.following\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\n        get: function () {\n            return new MySocialQuery(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a URI to a site that lists the current user's followed sites.\n     */\n    SocialQuery.prototype.getFollowedSitesUri = function () {\n        return this.clone(SocialQuery, \"FollowedSitesUri\").get().then(function (r) {\n            return r.FollowedSitesUri || r;\n        });\n    };\n    /**\n     * Gets a URI to a site that lists the current user's followed documents.\n     */\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\n        return this.clone(SocialQuery, \"FollowedDocumentsUri\").get().then(function (r) {\n            return r.FollowedDocumentsUri || r;\n        });\n    };\n    /**\n     * Makes the current user start following a user, document, site, or tag\n     *\n     * @param actorInfo The actor to start following\n     */\n    SocialQuery.prototype.follow = function (actorInfo) {\n        return this.clone(SocialQuery, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\n    };\n    /**\n     * Indicates whether the current user is following a specified user, document, site, or tag\n     *\n     * @param actorInfo The actor to find the following status for\n     */\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\n        return this.clone(SocialQuery, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\n    };\n    /**\n     * Makes the current user stop following a user, document, site, or tag\n     *\n     * @param actorInfo The actor to stop following\n     */\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\n        return this.clone(SocialQuery, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\n    };\n    /**\n     * Creates SocialActorInfo request body\n     *\n     * @param actorInfo The actor to create request body\n     */\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\n        return JSON.stringify({\n            \"actor\": util_1.Util.extend({\n                Id: null,\n                \"__metadata\": { \"type\": \"SP.Social.SocialActorInfo\" },\n            }, actorInfo),\n        });\n    };\n    return SocialQuery;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.SocialQuery = SocialQuery;\nvar MySocialQuery = /** @class */ (function (_super) {\n    __extends(MySocialQuery, _super);\n    /**\n     * Creates a new instance of the SocialQuery class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\n     */\n    function MySocialQuery(baseUrl, path) {\n        if (path === void 0) { path = \"my\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets users, documents, sites, and tags that the current user is following.\n     *\n     * @param types Bitwise set of SocialActorTypes to retrieve\n     */\n    MySocialQuery.prototype.followed = function (types) {\n        return this.clone(MySocialQuery, \"followed(types=\" + types + \")\").get().then(function (r) {\n            return r.hasOwnProperty(\"Followed\") ? r.Followed.results : r;\n        });\n    };\n    /**\n     * Gets the count of users, documents, sites, and tags that the current user is following.\n     *\n     * @param types Bitwise set of SocialActorTypes to retrieve\n     */\n    MySocialQuery.prototype.followedCount = function (types) {\n        return this.clone(MySocialQuery, \"followedcount(types=\" + types + \")\").get().then(function (r) {\n            return r.FollowedCount || r;\n        });\n    };\n    /**\n     * Gets the users who are following the current user.\n     */\n    MySocialQuery.prototype.followers = function () {\n        return this.clone(MySocialQuery, \"followers\").get().then(function (r) {\n            return r.hasOwnProperty(\"Followers\") ? r.Followers.results : r;\n        });\n    };\n    /**\n     * Gets users who the current user might want to follow.\n     */\n    MySocialQuery.prototype.suggestions = function () {\n        return this.clone(MySocialQuery, \"suggestions\").get().then(function (r) {\n            return r.hasOwnProperty(\"Suggestions\") ? r.Suggestions.results : r;\n        });\n    };\n    return MySocialQuery;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.MySocialQuery = MySocialQuery;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar files_1 = __webpack_require__(8);\nvar odata_1 = __webpack_require__(3);\n/**\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\n */\nvar UtilityMethod = /** @class */ (function (_super) {\n    __extends(UtilityMethod, _super);\n    /**\n     * Creates a new instance of the Utility method class\n     *\n     * @param baseUrl The parent url provider\n     * @param methodName The static method name to call on the utility class\n     */\n    function UtilityMethod(baseUrl, methodName) {\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\n    }\n    UtilityMethod.getBaseUrl = function (candidate) {\n        if (typeof candidate === \"string\") {\n            return candidate;\n        }\n        var c = candidate;\n        var url = c.toUrl();\n        var index = url.indexOf(\"_api/\");\n        if (index < 0) {\n            return url;\n        }\n        return url.substr(0, index);\n    };\n    UtilityMethod.prototype.excute = function (props) {\n        return this.postAsCore({\n            body: JSON.stringify(props),\n        });\n    };\n    /**\n     * Sends an email based on the supplied properties\n     *\n     * @param props The properties of the email to send\n     */\n    UtilityMethod.prototype.sendEmail = function (props) {\n        var params = {\n            properties: {\n                Body: props.Body,\n                From: props.From,\n                Subject: props.Subject,\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\n            },\n        };\n        if (props.To && props.To.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                To: { results: props.To },\n            });\n        }\n        if (props.CC && props.CC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                CC: { results: props.CC },\n            });\n        }\n        if (props.BCC && props.BCC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                BCC: { results: props.BCC },\n            });\n        }\n        if (props.AdditionalHeaders) {\n            params.properties = util_1.Util.extend(params.properties, {\n                AdditionalHeaders: props.AdditionalHeaders,\n            });\n        }\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\n    };\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\n    };\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\n        var params = {\n            addToUserInfoList: addToUserInfoList,\n            input: input,\n            inputIsEmailOnly: inputIsEmailOnly,\n            matchUserInfoList: matchUserInfoList,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\n    };\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\n        var params = {\n            groupName: groupName,\n            input: input,\n            maxCount: maxCount,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\n    };\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\n        var params = {\n            pageAddress: pageAddress,\n        };\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\n    };\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\n        if (maxCount === void 0) { maxCount = 30; }\n        var params = {\n            inputs: inputs,\n            maxCount: maxCount,\n        };\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\n    };\n    UtilityMethod.prototype.createWikiPage = function (info) {\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\n            parameters: info,\n        }).then(function (r) {\n            return {\n                data: r,\n                file: new files_1.File(odata_1.spExtractODataId(r)),\n            };\n        });\n    };\n    return UtilityMethod;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.UtilityMethod = UtilityMethod;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar utils_1 = __webpack_require__(10);\n// import { APIUrlException } from \"../utils/exceptions\";\nvar GraphHttpClient = /** @class */ (function () {\n    function GraphHttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.graphFetchClientFactory();\n    }\n    GraphHttpClient.prototype.fetch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        utils_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.graphHeaders);\n        // second we add the local options so we can overwrite the globals\n        utils_1.mergeHeaders(headers, options.headers);\n        var opts = util_1.Util.extend(options, { headers: headers });\n        // TODO: we could process auth here\n        return this.fetchRaw(url, opts);\n    };\n    GraphHttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        utils_1.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, {}, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // Check if request was throttled - http status code 429\n                // Check if request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // grab our current delay\n                var delay = ctx.delay;\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    GraphHttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    GraphHttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    GraphHttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    GraphHttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    return GraphHttpClient;\n}());\nexports.GraphHttpClient = GraphHttpClient;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage = __webpack_require__(13);\nvar exceptions_1 = __webpack_require__(2);\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nvar CachingConfigurationProvider = /** @class */ (function () {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = \"_configcache_\" + cacheKey;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\n        return this.wrappedProvider;\n    };\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\n        var _this = this;\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        var cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise(function (resolve) {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        var providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then(function (providedConfig) {\n            _this.store.put(_this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    };\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\n        var pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    };\n    return CachingConfigurationProvider;\n}());\nexports.default = CachingConfigurationProvider;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _config = __webpack_require__(29);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _compareobject = __webpack_require__(48);\n\nvar _spPnpJs = __webpack_require__(30);\n\nvar _spPnpJs2 = _interopRequireDefault(_spPnpJs);\n\nvar _edit = __webpack_require__(80);\n\nvar _edit2 = _interopRequireDefault(_edit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EmptyDataObject = {\n    Title: '',\n    last_name: '',\n    company: '',\n    email: '',\n    description: '',\n    avatar: ''\n};\n// import the templates\n\n\nvar demodata = [];\nvar formData = {};\n\nfunction Toast(type, msg, options) {\n    toastr.options = $.extend({}, {\n        \"closeButton\": false,\n        \"debug\": false,\n        \"newestOnTop\": false,\n        \"progressBar\": false,\n        \"positionClass\": \"toast-top-right\",\n        \"preventDuplicates\": false,\n        \"onclick\": null,\n        \"showDuration\": \"300\",\n        \"hideDuration\": \"1000\",\n        \"timeOut\": \"5000\",\n        \"extendedTimeOut\": \"1000\",\n        \"showEasing\": \"swing\",\n        \"hideEasing\": \"linear\",\n        \"showMethod\": \"fadeIn\",\n        \"hideMethod\": \"fadeOut\"\n    }, options);\n    toastr[type](msg);\n}\n\nfunction HandleNavLinkClicks(e) {\n    e.preventDefault();\n    var whichLink = $(e.target).data(\"function\");\n    switch (whichLink) {\n        case \"New\":\n            formData = {};\n            formData = $.extend({}, EmptyDataObject);\n            $(\"#app-container\").html((0, _edit2.default)(EmptyDataObject));\n            break;\n        default:\n            DisplayList();\n    }\n}\n\nfunction HandleAvatarClick(e) {\n    console.log(\"HandleAvatarClick\");\n    e.preventDefault();\n    var img = GetRandomImage();\n    e.target.src = img;\n    formData.avatar = img;\n}\n\nfunction HandleEditFormButton(e) {\n    console.log(\"HandleEditFormButton\");\n    e.preventDefault();\n    var action = $(e.target).data(\"action\");\n    switch (action) {\n        case \"save\":\n            console.log(\"save\");\n            var id = $(e.target).data(\"id\");\n            console.log(\"id\", id);\n            if (id === undefined || id === 'undefined') {\n                // add new data\n                console.log(\"add new list item\", formData);\n                formData.avatar = formData.avatar == null || formData.avatar.length == 0 ? GetRandomImage() : formData.avatar;\n                _spPnpJs2.default.sp.web.lists.getByTitle(\"MockData\").items.add(formData).then(function (results) {\n                    console.log(\"results\", results);\n                    Toast(\"success\", \"New Item Saved.\");\n                    demodata.push(results.data);\n                    DisplayList();\n                    return;\n                });\n            } else {\n                // update existing item\n                var origItem = demodata.find(function (d) {\n                    return d.Id == id;\n                });\n                console.log(\"origItem\", origItem);\n                console.log(\"formData\", formData);\n                if (!(0, _compareobject.IsEqual)(origItem, formData)) {\n                    console.log(\"They are not equal\");\n                    // get current index and update the original item.\n                    formData.avatar = formData.avatar == null || formData.avatar.length == 0 ? GetRandomImage() : formData.avatar;\n                    var idx = demodata.findIndex(function (d) {\n                        return d.Id == id;\n                    });\n                    console.log(\"idx\", idx);\n                    demodata[idx] = formData;\n                    _spPnpJs2.default.sp.web.lists.getByTitle(\"MockData\").items.getById(id).update(formData).then(function (results) {\n                        console.log(\"results\", results);\n                        Toast(\"success\", \"Item updated.\");\n                        DisplayList();\n                        return;\n                    });\n                } else {\n                    console.log(\"objects are equal\");\n                    DisplayList();\n                }\n            }\n            break;\n        default:\n            DisplayList();\n    }\n}\n\nfunction GetRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction GetRandomImage() {\n    var generators = ['https://www.placecage.com', 'https://www.placecage.com/g', 'https://www.placecage.com/c', 'https://baconmockup.com', 'https://fillmurray.com', 'https://fillmurray.com/g', 'https://stevensegallery.com', 'https://stevensegallery.com/g', 'https://placebear.com', 'https://lorempixel.com', 'https://placebeard.it'];\n    return generators[GetRandomInt(generators.length)] + '/150/150';\n}\n\nfunction HandleFormChange(e) {\n    console.log(\"HandleFormChange\");\n    e.preventDefault();\n    formData[e.target.id] = e.target.value;\n}\n\nfunction DisplayList() {\n    var refresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    console.log(\"DisplayList\");\n    $(\"#app-container\").html(\"<TABLE id='app-table' class='table table-condensed display' cellspacing='0' width='100%' />\");\n    var dataTableConfig = {\n        data: demodata,\n        pageLength: 25,\n        info: false,\n        order: [2, 'asc'],\n        columns: [{\n            data: \"Id\",\n            render: function render(id) {\n                return '<i class=\\'fas fa-edit edit-item\\' data-id=\\'' + id + '\\'></i>';\n            },\n            className: 'dt-body-center',\n            orderable: false\n        }, {\n            data: \"avatar\",\n            render: function render(avatar) {\n                return '<img src=\"' + avatar + '\" height=\"50\" width=\"50\" />';\n            },\n            className: 'dt-body-center',\n            orderable: false\n        }, { data: \"last_name\", title: \"Last Name\", type: \"string\" }, { data: \"Title\", title: \"First Name\", type: \"string\" }, { data: \"company\", title: \"Company\", type: \"string\" }, { data: \"email\", title: \"E-Mail\", type: \"string\" }, {\n            data: \"Id\",\n            render: function render(id) {\n                return '<i class=\\'fas fa-trash-alt delete-item\\' data-id=\\'' + id + '\\'></i>';\n            },\n            className: 'dt-body-center',\n            orderable: false\n        }]\n    };\n    console.log(\"dataTableConfig\", dataTableConfig);\n    console.log(\"demodata.length: \", demodata.length);\n    if (demodata.length > 0 && refresh == false) {\n        $(\"#app-table\").DataTable(dataTableConfig);\n    } else {\n        _spPnpJs2.default.sp.web.lists.getByTitle(\"MockData\").items.select(\"Id,Title, last_name, company, email, avatar, description\").orderBy(\"last_name\").get().then(function (d) {\n            console.log(\"d\", d);\n            d.forEach(function (el, idx) {\n                return d[idx].avatar = el.avatar.replace('http://', 'https://');\n            });\n            demodata = d;\n            console.log(\"demodata\", demodata);\n            dataTableConfig.data = demodata;\n            $(\"#app-table\").DataTable(dataTableConfig);\n        });\n    }\n}\n\nfunction EditListItem(e) {\n    console.log(\"EditListItem\");\n    e.preventDefault();\n    // make sure old values are cleared.\n    formData = {};\n    var id = $(e.target).data(\"id\");\n    console.log(\"edit id: \", id);\n    var itm = demodata.find(function (d) {\n        return d.Id == id;\n    });\n    formData = $.extend({}, EmptyDataObject, itm);\n    $(\"#app-container\").html((0, _edit2.default)(formData));\n}\n\nfunction DeleteListItem(e) {\n    console.log(\"DeleteListItem\");\n    e.preventDefault();\n    var id = $(e.target).data(\"id\");\n    console.log(\"delete id: \", id);\n    demodata = demodata.filter(function (d) {\n        return d.Id !== id;\n    });\n    _spPnpJs2.default.sp.web.lists.getByTitle(\"MockData\").items.getById(id).delete().then(function (r) {\n        console.log(\"results of delete\", r);\n        Toast(\"success\", \"Item Deleted\");\n        DisplayList();\n    });\n}\n\n$(document).ready(function () {\n    _spPnpJs2.default.setup({\n        sp: {\n            headers: {\n                \"Accept\": \"application/json;odata=nometadata\"\n            }\n        }\n    });\n    $(\".navbar\").on(\"click\", \".nav-link\", HandleNavLinkClicks);\n    $(\"#app-container\").on(\"click\", \".edit-item\", EditListItem);\n    $(\"#app-container\").on(\"click\", \".delete-item\", DeleteListItem);\n    $(\"#app-container\").on(\"click\", \".edit-form-button\", HandleEditFormButton);\n    $(\"#app-container\").on(\"change\", HandleFormChange);\n    $(\"#app-container\").on(\"click\", \".avatar\", HandleAvatarClick);\n    DisplayList();\n});\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.IsEqual = IsEqual;\n//Returns the object's class, Array, Date, RegExp, Object are of interest to us\nvar getClass = function getClass(val) {\n\treturn Object.prototype.toString.call(val).match(/^\\[object\\s(.*)\\]$/)[1];\n};\n//Defines the type of the value, extended typeof\nvar whatis = exports.whatis = function whatis(val) {\n\tif (val === undefined) return 'undefined';\n\tif (val === null) return 'null';\n\tvar type = typeof val === 'undefined' ? 'undefined' : _typeof(val);\n\tif (type === 'object') type = getClass(val).toLowerCase();\n\tif (type === 'number') {\n\t\tif (val.toString().indexOf('.') > 0) return 'float';else return 'integer';\n\t}\n\treturn type;\n};\n\nvar compareObjects = function compareObjects(a, b) {\n\tif (a === b) return true;\n\tfor (var i in a) {\n\t\tif (b.hasOwnProperty(i)) {\n\t\t\tif (!IsEqual(a[i], b[i])) return false;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfor (var _i in b) {\n\t\tif (!a.hasOwnProperty(_i)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nvar compareArrays = function compareArrays(a, b) {\n\tif (a === b) return true;\n\tif (a.length !== b.length) return false;\n\tfor (var i = 0; i < a.length; i++) {\n\t\tif (!IsEqual(a[i], b[i])) return false;\n\t};\n\treturn true;\n};\n\nvar _equal = {};\n_equal.array = compareArrays;\n_equal.object = compareObjects;\n_equal.date = function (a, b) {\n\treturn a.getTime() === b.getTime();\n};\n_equal.regexp = function (a, b) {\n\treturn a.toString() === b.toString();\n};\n\n/*\r\n * Are two values equal, deep compare for objects and arrays.\r\n * @param a {any}\r\n * @param b {any}\r\n * @return {boolean} Are equal?\r\n */\n\nfunction IsEqual(a, b) {\n\tif (a !== b) {\n\t\tvar atype = whatis(a),\n\t\t    btype = whatis(b);\n\n\t\tif (atype === btype) return _equal.hasOwnProperty(atype) ? _equal[atype](a, b) : a == b;\n\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = __webpack_require__(9);\n/**\n * Class used to manage the current application settings\n *\n */\nvar Settings = /** @class */ (function () {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    function Settings() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    Settings.prototype.add = function (key, value) {\n        this._settings.add(key, value);\n    };\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    Settings.prototype.addJSON = function (key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    };\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    Settings.prototype.apply = function (hash) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                _this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    Settings.prototype.load = function (provider) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            provider.getConfiguration().then(function (value) {\n                _this._settings.merge(value);\n                resolve();\n            }).catch(function (reason) {\n                reject(reason);\n            });\n        });\n    };\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    Settings.prototype.get = function (key) {\n        return this._settings.get(key);\n    };\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    Settings.prototype.getJSON = function (key) {\n        var o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    };\n    return Settings;\n}());\nexports.Settings = Settings;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search_1 = __webpack_require__(33);\nvar searchsuggest_1 = __webpack_require__(35);\nvar site_1 = __webpack_require__(36);\nvar webs_1 = __webpack_require__(11);\nvar util_1 = __webpack_require__(0);\nvar userprofiles_1 = __webpack_require__(58);\nvar social_1 = __webpack_require__(43);\nvar navigation_1 = __webpack_require__(27);\nvar exceptions_1 = __webpack_require__(2);\nvar utilities_1 = __webpack_require__(44);\n/**\n * Root of the SharePoint REST module\n */\nvar SPRest = /** @class */ (function () {\n    /**\n     * Creates a new instance of the SPRest class\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    function SPRest(options, baseUrl) {\n        if (options === void 0) { options = {}; }\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        this._options = options;\n        this._baseUrl = baseUrl;\n    }\n    /**\n     * Configures instance with additional options and baseUrl.\n     * Provided configuration used by other objects in a chain\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    SPRest.prototype.configure = function (options, baseUrl) {\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        return new SPRest(options, baseUrl);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.searchSuggest = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.search = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else if (query instanceof search_1.SearchQueryBuilder) {\n            finalQuery = query.toSearchQuery();\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    Object.defineProperty(SPRest.prototype, \"site\", {\n        /**\n         * Begins a site collection scoped REST request\n         *\n         */\n        get: function () {\n            return new site_1.Site(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"web\", {\n        /**\n         * Begins a web scoped REST request\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\n        /**\n         * Access to user profile methods\n         */\n        get: function () {\n            return new userprofiles_1.UserProfileQuery(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"social\", {\n        /**\n         * Access to social methods\n         */\n        get: function () {\n            return new social_1.SocialQuery(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\n        /**\n         * Access to the site collection level navigation service\n         */\n        get: function () {\n            return new navigation_1.NavigationService();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\n     *\n     */\n    SPRest.prototype.createBatch = function () {\n        return this.web.createBatch();\n    };\n    Object.defineProperty(SPRest.prototype, \"utility\", {\n        /**\n         * Static utilities methods from SP.Utilities.Utility\n         */\n        get: function () {\n            return new utilities_1.UtilityMethod(this._baseUrl, \"\").configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    };\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    };\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    SPRest.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        var instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance.configure(this._options);\n    };\n    return SPRest;\n}());\nexports.SPRest = SPRest;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = __webpack_require__(9);\nvar util_1 = __webpack_require__(0);\nvar parsers_1 = __webpack_require__(7);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar CachedDigest = /** @class */ (function () {\n    function CachedDigest() {\n    }\n    return CachedDigest;\n}());\nexports.CachedDigest = CachedDigest;\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\nvar digests = new collections_1.Dictionary();\nvar DigestCache = /** @class */ (function () {\n    function DigestCache(_httpClient, _digests) {\n        if (_digests === void 0) { _digests = digests; }\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    DigestCache.prototype.getDigest = function (webUrl) {\n        var _this = this;\n        var cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            var now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        var headers = {\n            \"Accept\": \"application/json;odata=verbose\",\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\n        };\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.spHeaders, true),\n            method: \"POST\",\n        }).then(function (response) {\n            var parser = new parsers_1.ODataDefaultParser();\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\n        }).then(function (data) {\n            var newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            var seconds = data.FormDigestTimeoutSeconds;\n            var expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            _this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    };\n    DigestCache.prototype.clear = function () {\n        this._digests.clear();\n    };\n    return DigestCache;\n}());\nexports.DigestCache = DigestCache;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar parsers_1 = __webpack_require__(7);\n/**\n * Describes a collection of Item objects\n *\n */\nvar AttachmentFiles = /** @class */ (function (_super) {\n    __extends(AttachmentFiles, _super);\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this attachments collection\n     */\n    function AttachmentFiles(baseUrl, path) {\n        if (path === void 0) { path = \"AttachmentFiles\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    AttachmentFiles.prototype.getByName = function (name) {\n        var f = new AttachmentFile(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new attachment to the collection. Not supported for batching.\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    AttachmentFiles.prototype.add = function (name, content) {\n        var _this = this;\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\", false).postCore({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(name),\n            };\n        });\n    };\n    /**\n     * Adds multiple new attachment to the collection. Not supported for batching.\n     *\n     * @files name The collection of files to add\n     */\n    AttachmentFiles.prototype.addMultiple = function (files) {\n        var _this = this;\n        // add the files in series so we don't get update conflicts\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\", false).postCore({\n            body: file.content,\n        }); }); }, Promise.resolve());\n    };\n    /**\n     * Delete multiple attachments from the collection. Not supported for batching.\n     *\n     * @files name The collection of files to delete\n     */\n    AttachmentFiles.prototype.deleteMultiple = function () {\n        var _this = this;\n        var files = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            files[_i] = arguments[_i];\n        }\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\n    };\n    /**\n     * Delete multiple attachments from the collection and sends it to recycle bin. Not supported for batching.\n     *\n     * @files name The collection of files to delete\n     */\n    AttachmentFiles.prototype.recycleMultiple = function () {\n        var _this = this;\n        var files = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            files[_i] = arguments[_i];\n        }\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).recycle(); }); }, Promise.resolve());\n    };\n    return AttachmentFiles;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nvar AttachmentFile = /** @class */ (function (_super) {\n    __extends(AttachmentFile, _super);\n    function AttachmentFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    AttachmentFile.prototype.getText = function () {\n        return this.clone(AttachmentFile, \"$value\", false).get(new parsers_1.TextFileParser());\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    AttachmentFile.prototype.getBlob = function () {\n        return this.clone(AttachmentFile, \"$value\", false).get(new parsers_1.BlobFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getBuffer = function () {\n        return this.clone(AttachmentFile, \"$value\", false).get(new parsers_1.BufferFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getJSON = function () {\n        return this.clone(AttachmentFile, \"$value\", false).get(new parsers_1.JSONFileParser());\n    };\n    /**\n     * Sets the content of a file. Not supported for batching\n     *\n     * @param content The value to set for the file contents\n     */\n    AttachmentFile.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new AttachmentFile(_this); });\n    };\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Delete this attachment file and send it to Recycle Bin\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.recycle = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(AttachmentFile, \"recycleObject\").postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return AttachmentFile;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.AttachmentFile = AttachmentFile;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes the views available in the current context\n *\n */\nvar Views = /** @class */ (function (_super) {\n    __extends(Views, _super);\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Views(baseUrl, path) {\n        if (path === void 0) { path = \"views\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    Views.prototype.getById = function (id) {\n        var v = new View(this);\n        v.concat(\"('\" + id + \"')\");\n        return v;\n    };\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    Views.prototype.getByTitle = function (title) {\n        return new View(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    Views.prototype.add = function (title, personalView, additionalSettings) {\n        var _this = this;\n        if (personalView === void 0) { personalView = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.clone(Views, null).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                view: _this.getById(data.Id),\n            };\n        });\n    };\n    return Views;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(View.prototype, \"fields\", {\n        get: function () {\n            return new ViewFields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    View.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                view: _this,\n            };\n        });\n    };\n    /**\n     * Delete this view\n     *\n     */\n    View.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    View.prototype.renderAsHtml = function () {\n        return this.clone(sharepointqueryable_1.SharePointQueryable, \"renderashtml\").get();\n    };\n    return View;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.View = View;\nvar ViewFields = /** @class */ (function (_super) {\n    __extends(ViewFields, _super);\n    function ViewFields(baseUrl, path) {\n        if (path === void 0) { path = \"viewfields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    ViewFields.prototype.getSchemaXml = function () {\n        return this.clone(sharepointqueryable_1.SharePointQueryable, \"schemaxml\").get();\n    };\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\n    };\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    ViewFields.prototype.move = function (fieldInternalName, index) {\n        return this.clone(ViewFields, \"moveviewfieldto\").postCore({\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\n        });\n    };\n    /**\n     * Removes all the fields from the collection.\n     */\n    ViewFields.prototype.removeAll = function () {\n        return this.clone(ViewFields, \"removeallviewfields\").postCore();\n    };\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    ViewFields.prototype.remove = function (fieldInternalName) {\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\n    };\n    return ViewFields;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.ViewFields = ViewFields;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of Field objects\n *\n */\nvar Forms = /** @class */ (function (_super) {\n    __extends(Forms, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Forms(baseUrl, path) {\n        if (path === void 0) { path = \"forms\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    Forms.prototype.getById = function (id) {\n        var i = new Form(this);\n        i.concat(\"('\" + id + \"')\");\n        return i;\n    };\n    return Forms;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nvar Form = /** @class */ (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Form;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Form = Form;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nvar Subscriptions = /** @class */ (function (_super) {\n    __extends(Subscriptions, _super);\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or SharePointQueryable which forms the parent of this webhook subscriptions collection\n     */\n    function Subscriptions(baseUrl, path) {\n        if (path === void 0) { path = \"subscriptions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\n     */\n    Subscriptions.prototype.getById = function (subscriptionId) {\n        var subscription = new Subscription(this);\n        subscription.concat(\"('\" + subscriptionId + \"')\");\n        return subscription;\n    };\n    /**\n     * Creates a new webhook subscription\n     *\n     * @param notificationUrl The url to receive the notifications\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\n     */\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n            return { data: result, subscription: _this.getById(result.id) };\n        });\n    };\n    return Subscriptions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nvar Subscription = /** @class */ (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Renews this webhook subscription\n     *\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     */\n    Subscription.prototype.update = function (expirationDate) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n            return { data: data, subscription: _this };\n        });\n    };\n    /**\n     * Removes this webhook subscription\n     *\n     */\n    Subscription.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return Subscription;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Subscription = Subscription;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar odata_1 = __webpack_require__(3);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes regional settings ODada object\n */\nvar RegionalSettings = /** @class */ (function (_super) {\n    __extends(RegionalSettings, _super);\n    /**\n     * Creates a new instance of the RegionalSettings class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this regional settings collection\n     */\n    function RegionalSettings(baseUrl, path) {\n        if (path === void 0) { path = \"regionalsettings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\n        /**\n         * Gets the collection of languages used in a server farm.\n         */\n        get: function () {\n            return new InstalledLanguages(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\n        /**\n         * Gets the collection of language packs that are installed on the server.\n         */\n        get: function () {\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\n        /**\n         * Gets time zone\n         */\n        get: function () {\n            return new TimeZone(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\n        /**\n         * Gets time zones\n         */\n        get: function () {\n            return new TimeZones(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegionalSettings;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.RegionalSettings = RegionalSettings;\n/**\n * Describes installed languages ODada queriable collection\n */\nvar InstalledLanguages = /** @class */ (function (_super) {\n    __extends(InstalledLanguages, _super);\n    function InstalledLanguages(baseUrl, path) {\n        if (path === void 0) { path = \"installedlanguages\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return InstalledLanguages;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.InstalledLanguages = InstalledLanguages;\n/**\n * Describes TimeZone ODada object\n */\nvar TimeZone = /** @class */ (function (_super) {\n    __extends(TimeZone, _super);\n    function TimeZone(baseUrl, path) {\n        if (path === void 0) { path = \"timezone\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Local Time by UTC Time\n     *\n     * @param utcTime UTC Time as Date or ISO String\n     */\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\n        var dateIsoString;\n        if (typeof utcTime === \"string\") {\n            dateIsoString = utcTime;\n        }\n        else {\n            dateIsoString = utcTime.toISOString();\n        }\n        return this.clone(TimeZone, \"utctolocaltime('\" + dateIsoString + \"')\")\n            .postCore()\n            .then(function (res) { return res.hasOwnProperty(\"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\n    };\n    /**\n     * Gets an UTC Time by Local Time\n     *\n     * @param localTime Local Time as Date or ISO String\n     */\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\n        var dateIsoString;\n        if (typeof localTime === \"string\") {\n            dateIsoString = localTime;\n        }\n        else {\n            dateIsoString = util_1.Util.dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\n        }\n        return this.clone(TimeZone, \"localtimetoutc('\" + dateIsoString + \"')\")\n            .postCore()\n            .then(function (res) { return res.hasOwnProperty(\"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\n    };\n    return TimeZone;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.TimeZone = TimeZone;\n/**\n * Describes time zones queriable collection\n */\nvar TimeZones = /** @class */ (function (_super) {\n    __extends(TimeZones, _super);\n    function TimeZones(baseUrl, path) {\n        if (path === void 0) { path = \"timezones\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\n    /**\n     * Gets an TimeZone by id\n     *\n     * @param id The integer id of the timezone to retrieve\n     */\n    TimeZones.prototype.getById = function (id) {\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\n        return this.clone(TimeZones, \"GetById(\" + id + \")\").postAsCore({}, odata_1.spODataEntity(TimeZone));\n    };\n    return TimeZones;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.TimeZones = TimeZones;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\n    __extends(RelatedItemManagerImpl, _super);\n    function RelatedItemManagerImpl(baseUrl, path) {\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    RelatedItemManagerImpl.FromUrl = function (url) {\n        if (url === null) {\n            return new RelatedItemManagerImpl(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new RelatedItemManagerImpl(url.substr(0, index));\n        }\n        return new RelatedItemManagerImpl(url);\n    };\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".GetRelatedItems\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".GetPageOneRelatedItems\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".AddSingleLink\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemID,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\n     *\n     * @param sourceListName The source list name or list id\n     * @param sourceItemId The source item id\n     * @param targetItemUrl The target item url\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".AddSingleLinkToUrl\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                TargetItemUrl: targetItemUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\n     *\n     * @param sourceItemUrl The source item url\n     * @param targetListName The target list name or list id\n     * @param targetItemId The target item id\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".AddSingleLinkFromUrl\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemUrl: sourceItemUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".DeleteSingleLink\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryDeleteReverseLink: tryDeleteReverseLink,\n            }),\n        });\n    };\n    return RelatedItemManagerImpl;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.RelatedItemManagerImpl = RelatedItemManagerImpl;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = __webpack_require__(1);\nvar files_1 = __webpack_require__(59);\nvar parsers_1 = __webpack_require__(7);\nvar UserProfileQuery = /** @class */ (function (_super) {\n    __extends(UserProfileQuery, _super);\n    /**\n     * Creates a new instance of the UserProfileQuery class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\n     */\n    function UserProfileQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\n        var _this = _super.call(this, baseUrl, path) || this;\n        _this.profileLoader = new ProfileLoader(baseUrl);\n        return _this;\n    }\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\n        /**\n         * The url of the edit profile page for the current user\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(parsers_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\n        /**\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(parsers_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * A boolean value that indicates whether the current user is being followed by the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * A boolean value that indicates whether the current user is following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets tags that the current user is following\n     *\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\n     */\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\n        if (maxCount === void 0) { maxCount = 20; }\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\n    };\n    /**\n     * Gets the people who are following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\n        /**\n         * Gets the people who are following the current user\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"getmyfollowers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\n        /**\n         * Gets user properties for the current user\n         *\n         */\n        get: function () {\n            return new UserProfileQuery(this, \"getmyproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the people who the specified user is following\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\n        /**\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\n         *\n         */\n        get: function () {\n            var q = this.clone(UserProfileQuery, null);\n            q.concat(\".gettrendingtags\");\n            return q.get();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the specified user profile property for the specified user\n     *\n     * @param loginName The account name of the user\n     * @param propertyName The case-sensitive name of the property to get\n     */\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Removes the specified user from the user's list of suggested people to follow\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.postCore();\n    };\n    /**\n     * A boolean values that indicates whether the first user is following the second user\n     *\n     * @param follower The account name of the user who might be following the followee\n     * @param followee The account name of the user who might be followed by the follower\n     */\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\n        var q = this.clone(UserProfileQuery, null);\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    };\n    /**\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\n     *\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\n     */\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            files_1.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\n                request.postCore({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(function (_) { return resolve(); });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Sets single value User Profile property\n     *\n     * @param accountName The account name of the user\n     * @param propertyName Property name\n     * @param propertyValue Property value\n     */\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\n        var postBody = JSON.stringify({\n            accountName: accountName,\n            propertyName: propertyName,\n            propertyValue: propertyValue,\n        });\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\n            .postCore({ body: postBody });\n    };\n    /**\n     * Sets multi valued User Profile property\n     *\n     * @param accountName The account name of the user\n     * @param propertyName Property name\n     * @param propertyValues Property values\n     */\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\n        var postBody = JSON.stringify({\n            accountName: accountName,\n            propertyName: propertyName,\n            propertyValues: propertyValues,\n        });\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\n            .postCore({ body: postBody });\n    };\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\n        var emails = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            emails[_i] = arguments[_i];\n        }\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner\n         *\n         */\n        get: function () {\n            return this.profileLoader.ownerUserProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile for the current user\n         */\n        get: function () {\n            return this.profileLoader.userProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private\n     */\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\n        return this.profileLoader.shareAllSocialData(share);\n    };\n    return UserProfileQuery;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.UserProfileQuery = UserProfileQuery;\nvar ProfileLoader = /** @class */ (function (_super) {\n    __extends(ProfileLoader, _super);\n    /**\n   * Creates a new instance of the ProfileLoader class\n   *\n   * @param baseUrl The url or SharePointQueryable which forms the parent of this profile loader\n   */\n    function ProfileLoader(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\", false).postCore({\n            body: JSON.stringify({ \"emailIDs\": emails }),\n        });\n    };\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n            if (this.hasBatch) {\n                q = q.inBatch(this.batch);\n            }\n            return q.postAsCore();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile of the current user.\n         *\n         */\n        get: function () {\n            return this.clone(ProfileLoader, \"getuserprofile\").postAsCore();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\n    };\n    return ProfileLoader;\n}(sharepointqueryable_1.SharePointQueryable));\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar v1_1 = __webpack_require__(61);\nvar GraphRest = /** @class */ (function () {\n    function GraphRest() {\n    }\n    Object.defineProperty(GraphRest.prototype, \"v1\", {\n        get: function () {\n            return new v1_1.V1(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GraphRest;\n}());\nexports.GraphRest = GraphRest;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = __webpack_require__(6);\nvar groups_1 = __webpack_require__(62);\n// import { Me } from \"./me\";\n/**\n * Root object wrapping v1 functionality for MS Graph\n *\n */\nvar V1 = /** @class */ (function (_super) {\n    __extends(V1, _super);\n    /**\n     * Creates a new instance of the V1 class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional additional path\n     */\n    function V1(baseUrl, path) {\n        if (path === void 0) { path = \"v1.0\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(V1.prototype, \"groups\", {\n        get: function () {\n            return new groups_1.Groups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return V1;\n}(graphqueryable_1.GraphQueryable));\nexports.V1 = V1;\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = __webpack_require__(6);\nvar members_1 = __webpack_require__(63);\nvar util_1 = __webpack_require__(0);\nvar calendars_1 = __webpack_require__(64);\nvar conversations_1 = __webpack_require__(65);\nvar plans_1 = __webpack_require__(67);\nvar photos_1 = __webpack_require__(68);\nvar GroupType;\n(function (GroupType) {\n    /**\n     * Office 365 (aka unified group)\n     */\n    GroupType[GroupType[\"Office365\"] = 0] = \"Office365\";\n    /**\n     * Dynamic membership\n     */\n    GroupType[GroupType[\"Dynamic\"] = 1] = \"Dynamic\";\n    /**\n     * Security\n     */\n    GroupType[GroupType[\"Security\"] = 2] = \"Security\";\n})(GroupType = exports.GroupType || (exports.GroupType = {}));\n/**\n * Describes a collection of Field objects\n *\n */\nvar Groups = /** @class */ (function (_super) {\n    __extends(Groups, _super);\n    function Groups(baseUrl, path) {\n        if (path === void 0) { path = \"groups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a group from the collection using the specified id\n     *\n     * @param id Id of the group to get from this collection\n     */\n    Groups.prototype.getById = function (id) {\n        return new Group(this, id);\n    };\n    /**\n     * Create a new group as specified in the request body.\n     *\n     * @param name Name to display in the address book for the group\n     * @param mailNickname Mail alias for the group\n     * @param groupType Type of group being created\n     * @param additionalProperties A plain object collection of additional properties you want to set on the new group\n     */\n    Groups.prototype.add = function (name, mailNickname, groupType, additionalProperties) {\n        var _this = this;\n        if (additionalProperties === void 0) { additionalProperties = {}; }\n        var postBody = util_1.Util.extend({\n            displayName: name,\n            mailEnabled: groupType === GroupType.Office365,\n            mailNickname: mailNickname,\n            securityEnabled: groupType !== GroupType.Office365,\n        }, additionalProperties);\n        // include a group type if required\n        if (groupType !== GroupType.Security) {\n            postBody = util_1.Util.extend(postBody, {\n                groupTypes: [groupType === GroupType.Office365 ? \"Unified\" : \"DynamicMembership\"],\n            });\n        }\n        return this.postCore({\n            body: JSON.stringify(postBody),\n        }).then(function (r) {\n            return {\n                data: r,\n                group: _this.getById(r.id),\n            };\n        });\n    };\n    return Groups;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Groups = Groups;\n/**\n * Represents a group entity\n */\nvar Group = /** @class */ (function (_super) {\n    __extends(Group, _super);\n    function Group() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Group.prototype, \"caldendar\", {\n        /**\n         * The calendar associated with this group\n         */\n        get: function () {\n            return new calendars_1.Calendar(this, \"calendar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"events\", {\n        /**\n         * Retrieve a list of event objects\n         */\n        get: function () {\n            return new calendars_1.Events(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"owners\", {\n        /**\n         * Gets the collection of owners for this group\n         */\n        get: function () {\n            return new members_1.Owners(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"plans\", {\n        /**\n         * The collection of plans for this group\n         */\n        get: function () {\n            return new plans_1.Plans(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"members\", {\n        /**\n         * Gets the collection of members for this group\n         */\n        get: function () {\n            return new members_1.Members(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"conversations\", {\n        /**\n         * Gets the conversations collection for this group\n         */\n        get: function () {\n            return new conversations_1.Conversations(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"acceptedSenders\", {\n        /**\n         * Gets the collection of accepted senders for this group\n         */\n        get: function () {\n            return new conversations_1.Senders(this, \"acceptedsenders\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"rejectedSenders\", {\n        /**\n         * Gets the collection of rejected senders for this group\n         */\n        get: function () {\n            return new conversations_1.Senders(this, \"rejectedsenders\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"photo\", {\n        /**\n         * The photo associated with the group\n         */\n        get: function () {\n            return new photos_1.Photo(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Add the group to the list of the current user's favorite groups. Supported for only Office 365 groups\n     */\n    Group.prototype.addFavorite = function () {\n        return this.clone(Group, \"addFavorite\").postCore();\n    };\n    /**\n     * Return all the groups that the specified group is a member of. The check is transitive\n     *\n     * @param securityEnabledOnly\n     */\n    Group.prototype.getMemberGroups = function (securityEnabledOnly) {\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\n        return this.clone(Group, \"getMemberGroups\").postCore({\n            body: JSON.stringify({\n                securityEnabledOnly: securityEnabledOnly,\n            }),\n        });\n    };\n    /**\n     * Deletes this group\n     */\n    Group.prototype.delete = function () {\n        return this.deleteCore();\n    };\n    /**\n     * Update the properties of a group object\n     *\n     * @param properties Set of properties of this group to update\n     */\n    Group.prototype.update = function (properties) {\n        return this.patchCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    /**\n     * Remove the group from the list of the current user's favorite groups. Supported for only Office 365 groups\n     */\n    Group.prototype.removeFavorite = function () {\n        return this.clone(Group, \"removeFavorite\").postCore();\n    };\n    /**\n     * Reset the unseenCount of all the posts that the current user has not seen since their last visit\n     */\n    Group.prototype.resetUnseenCount = function () {\n        return this.clone(Group, \"resetUnseenCount\").postCore();\n    };\n    /**\n     * Calling this method will enable the current user to receive email notifications for this group,\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\n     */\n    Group.prototype.subscribeByMail = function () {\n        return this.clone(Group, \"subscribeByMail\").postCore();\n    };\n    /**\n     * Calling this method will prevent the current user from receiving email notifications for this group\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\n     */\n    Group.prototype.unsubscribeByMail = function () {\n        return this.clone(Group, \"unsubscribeByMail\").postCore();\n    };\n    /**\n     * Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range, from the default calendar of a group\n     *\n     * @param start Start date and time of the time range\n     * @param end End date and time of the time range\n     */\n    Group.prototype.getCalendarView = function (start, end) {\n        var view = this.clone(Group, \"calendarView\");\n        view.query.add(\"startDateTime\", start.toISOString());\n        view.query.add(\"endDateTime\", end.toISOString());\n        return view.get();\n    };\n    return Group;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Group = Group;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = __webpack_require__(6);\nvar Members = /** @class */ (function (_super) {\n    __extends(Members, _super);\n    function Members(baseUrl, path) {\n        if (path === void 0) { path = \"members\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Use this API to add a member to an Office 365 group, a security group or a mail-enabled security group through\n     * the members navigation property. You can add users or other groups.\n     * Important: You can add only users to Office 365 groups.\n     *\n     * @param id Full @odata.id of the directoryObject, user, or group object you want to add (ex: https://graph.microsoft.com/v1.0/directoryObjects/${id})\n     */\n    Members.prototype.add = function (id) {\n        return this.clone(Members, \"$ref\").postCore({\n            body: JSON.stringify({\n                \"@odata.id\": id,\n            }),\n        });\n    };\n    /**\n     * Gets a member of the group by id\n     *\n     * @param id Group member's id\n     */\n    Members.prototype.getById = function (id) {\n        return new Member(this, id);\n    };\n    return Members;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Members = Members;\nvar Member = /** @class */ (function (_super) {\n    __extends(Member, _super);\n    function Member() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Member;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Member = Member;\nvar Owners = /** @class */ (function (_super) {\n    __extends(Owners, _super);\n    function Owners(baseUrl, path) {\n        if (path === void 0) { path = \"owners\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return Owners;\n}(Members));\nexports.Owners = Owners;\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = __webpack_require__(6);\n// import { Attachments } from \"./attachments\";\nvar Calendars = /** @class */ (function (_super) {\n    __extends(Calendars, _super);\n    function Calendars(baseUrl, path) {\n        if (path === void 0) { path = \"calendars\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return Calendars;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Calendars = Calendars;\nvar Calendar = /** @class */ (function (_super) {\n    __extends(Calendar, _super);\n    function Calendar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Calendar.prototype, \"events\", {\n        get: function () {\n            return new Events(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Calendar;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Calendar = Calendar;\nvar Events = /** @class */ (function (_super) {\n    __extends(Events, _super);\n    function Events(baseUrl, path) {\n        if (path === void 0) { path = \"events\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Events.prototype.getById = function (id) {\n        return new Event(this, id);\n    };\n    /**\n     * Adds a new event to the collection\n     *\n     * @param properties The set of properties used to create the event\n     */\n    Events.prototype.add = function (properties) {\n        var _this = this;\n        return this.postCore({\n            body: JSON.stringify(properties),\n        }).then(function (r) {\n            return {\n                data: r,\n                event: _this.getById(r.id),\n            };\n        });\n    };\n    return Events;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Events = Events;\nvar Event = /** @class */ (function (_super) {\n    __extends(Event, _super);\n    function Event() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // TODO:: when supported\n    // /**\n    //  * Gets the collection of attachments for this event\n    //  */\n    // public get attachments(): Attachments {\n    //     return new Attachments(this);\n    // }\n    /**\n     * Update the properties of an event object\n     *\n     * @param properties Set of properties of this event to update\n     */\n    Event.prototype.update = function (properties) {\n        return this.patchCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    /**\n     * Deletes this event\n     */\n    Event.prototype.delete = function () {\n        return this.deleteCore();\n    };\n    return Event;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Event = Event;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = __webpack_require__(6);\nvar attachments_1 = __webpack_require__(66);\nvar Conversations = /** @class */ (function (_super) {\n    __extends(Conversations, _super);\n    function Conversations(baseUrl, path) {\n        if (path === void 0) { path = \"conversations\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Create a new conversation by including a thread and a post.\n     *\n     * @param properties Properties used to create the new conversation\n     */\n    Conversations.prototype.add = function (properties) {\n        return this.postCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    /**\n     * Gets a conversation from this collection by id\n     *\n     * @param id Group member's id\n     */\n    Conversations.prototype.getById = function (id) {\n        return new Conversation(this, id);\n    };\n    return Conversations;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Conversations = Conversations;\nvar Threads = /** @class */ (function (_super) {\n    __extends(Threads, _super);\n    function Threads(baseUrl, path) {\n        if (path === void 0) { path = \"threads\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a thread from this collection by id\n     *\n     * @param id Group member's id\n     */\n    Threads.prototype.getById = function (id) {\n        return new Thread(this, id);\n    };\n    /**\n     * Adds a new thread to this collection\n     *\n     * @param properties properties used to create the new thread\n     * @returns Id of the new thread\n     */\n    Threads.prototype.add = function (properties) {\n        return this.postCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    return Threads;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Threads = Threads;\nvar Posts = /** @class */ (function (_super) {\n    __extends(Posts, _super);\n    function Posts(baseUrl, path) {\n        if (path === void 0) { path = \"posts\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a thread from this collection by id\n     *\n     * @param id Group member's id\n     */\n    Posts.prototype.getById = function (id) {\n        return new Post(this, id);\n    };\n    /**\n     * Adds a new thread to this collection\n     *\n     * @param properties properties used to create the new thread\n     * @returns Id of the new thread\n     */\n    Posts.prototype.add = function (properties) {\n        return this.postCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    return Posts;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Posts = Posts;\nvar Conversation = /** @class */ (function (_super) {\n    __extends(Conversation, _super);\n    function Conversation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Conversation.prototype, \"threads\", {\n        /**\n         * Get all the threads in a group conversation.\n         */\n        get: function () {\n            return new Threads(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this conversation\n     */\n    Conversation.prototype.update = function (properties) {\n        return this.patchCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    /**\n     * Deletes this member from the group\n     */\n    Conversation.prototype.delete = function () {\n        return this.deleteCore();\n    };\n    return Conversation;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Conversation = Conversation;\nvar Thread = /** @class */ (function (_super) {\n    __extends(Thread, _super);\n    function Thread() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Thread.prototype, \"posts\", {\n        /**\n         * Get all the threads in a group conversation.\n         */\n        get: function () {\n            return new Posts(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reply to a thread in a group conversation and add a new post to it\n     *\n     * @param post Contents of the post\n     */\n    Thread.prototype.reply = function (post) {\n        return this.clone(Thread, \"reply\").postCore({\n            body: JSON.stringify({\n                post: post,\n            }),\n        });\n    };\n    /**\n     * Deletes this member from the group\n     */\n    Thread.prototype.delete = function () {\n        return this.deleteCore();\n    };\n    return Thread;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Thread = Thread;\nvar Post = /** @class */ (function (_super) {\n    __extends(Post, _super);\n    function Post() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Post.prototype, \"attachments\", {\n        get: function () {\n            return new attachments_1.Attachments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Deletes this post\n     */\n    Post.prototype.delete = function () {\n        return this.deleteCore();\n    };\n    /**\n     * Forward a post to a recipient\n     */\n    Post.prototype.forward = function (info) {\n        return this.clone(Post, \"forward\").postCore({\n            body: JSON.stringify(info),\n        });\n    };\n    /**\n     * Reply to a thread in a group conversation and add a new post to it\n     *\n     * @param post Contents of the post\n     */\n    Post.prototype.reply = function (post) {\n        return this.clone(Post, \"reply\").postCore({\n            body: JSON.stringify({\n                post: post,\n            }),\n        });\n    };\n    return Post;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Post = Post;\nvar Senders = /** @class */ (function (_super) {\n    __extends(Senders, _super);\n    function Senders(baseUrl, path) {\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Add a new user or group to this senders collection\n     * @param id The full @odata.id value to add (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\n     */\n    Senders.prototype.add = function (id) {\n        return this.clone(Senders, \"$ref\").postCore({\n            body: JSON.stringify({\n                \"@odata.id\": id,\n            }),\n        });\n    };\n    /**\n     * Removes the entity from the collection\n     *\n     * @param id The full @odata.id value to remove (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\n     */\n    Senders.prototype.remove = function (id) {\n        var remover = this.clone(Senders, \"$ref\");\n        remover.query.add(\"$id\", id);\n        return remover.deleteCore();\n    };\n    return Senders;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Senders = Senders;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = __webpack_require__(6);\nvar Attachments = /** @class */ (function (_super) {\n    __extends(Attachments, _super);\n    function Attachments(baseUrl, path) {\n        if (path === void 0) { path = \"attachments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a member of the group by id\n     *\n     * @param id Attachment id\n     */\n    Attachments.prototype.getById = function (id) {\n        return new Attachment(this, id);\n    };\n    /**\n     * Add attachment to this collection\n     *\n     * @param name Name given to the attachment file\n     * @param bytes File content\n     */\n    Attachments.prototype.addFile = function (name, bytes) {\n        return this.postCore({\n            body: JSON.stringify({\n                \"@odata.type\": \"#microsoft.graph.fileAttachment\",\n                contentBytes: bytes,\n                name: name,\n            }),\n        });\n    };\n    return Attachments;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Attachments = Attachments;\nvar Attachment = /** @class */ (function (_super) {\n    __extends(Attachment, _super);\n    function Attachment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Attachment;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Attachment = Attachment;\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = __webpack_require__(6);\nvar Plans = /** @class */ (function (_super) {\n    __extends(Plans, _super);\n    function Plans(baseUrl, path) {\n        if (path === void 0) { path = \"planner/plans\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a plan from this collection by id\n     *\n     * @param id Plan's id\n     */\n    Plans.prototype.getById = function (id) {\n        return new Plan(this, id);\n    };\n    return Plans;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Plans = Plans;\nvar Plan = /** @class */ (function (_super) {\n    __extends(Plan, _super);\n    function Plan() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Plan;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Plan = Plan;\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = __webpack_require__(6);\nvar parsers_1 = __webpack_require__(7);\nvar Photo = /** @class */ (function (_super) {\n    __extends(Photo, _super);\n    function Photo(baseUrl, path) {\n        if (path === void 0) { path = \"photo\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the image bytes as a blob (browser)\n     */\n    Photo.prototype.getBlob = function () {\n        return this.clone(Photo, \"$value\", false).get(new parsers_1.BlobFileParser());\n    };\n    /**\n     * Gets the image file byets as a Buffer (node.js)\n     */\n    Photo.prototype.getBuffer = function () {\n        return this.clone(Photo, \"$value\", false).get(new parsers_1.BufferFileParser());\n    };\n    /**\n     * Sets the file bytes\n     *\n     * @param content Image file contents, max 4 MB\n     */\n    Photo.prototype.setContent = function (content) {\n        return this.clone(Photo, \"$value\", false).patchCore({\n            body: content,\n        });\n    };\n    return Photo;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Photo = Photo;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(70));\nvar collections_1 = __webpack_require__(9);\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = __webpack_require__(0);\nexports.Util = util_1.Util;\n__export(__webpack_require__(5));\n__export(__webpack_require__(2));\n__export(__webpack_require__(13));\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = __webpack_require__(46);\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = __webpack_require__(71);\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = __webpack_require__(46);\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nvar SPListConfigurationProvider = /** @class */ (function () {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle) {\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\n        /**\n         * Gets the url of the SharePoint site, where the configuration list is located\n         *\n         * @return {string} Url address of the site\n         */\n        get: function () {\n            return this.sourceWeb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\n        /**\n         * Gets the title of the SharePoint list, which contains the configuration settings\n         *\n         * @return {string} List title\n         */\n        get: function () {\n            return this.sourceListTitle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then(function (data) {\n            return data.reduce(function (configuration, item) {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    };\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    SPListConfigurationProvider.prototype.asCaching = function () {\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    };\n    return SPListConfigurationProvider;\n}());\nexports.default = SPListConfigurationProvider;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(73));\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = __webpack_require__(6);\nexports.GraphQueryable = graphqueryable_1.GraphQueryable;\nexports.GraphQueryableCollection = graphqueryable_1.GraphQueryableCollection;\nexports.GraphQueryableInstance = graphqueryable_1.GraphQueryableInstance;\nexports.GraphQueryableSearchableCollection = graphqueryable_1.GraphQueryableSearchableCollection;\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar httpclient_1 = __webpack_require__(21);\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = __webpack_require__(75);\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = __webpack_require__(76);\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = __webpack_require__(32);\nexports.FetchClient = fetchclient_1.FetchClient;\nvar graphclient_1 = __webpack_require__(45);\nexports.GraphHttpClient = graphclient_1.GraphHttpClient;\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar exceptions_1 = __webpack_require__(2);\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nvar SPRequestExecutorClient = /** @class */ (function () {\n    function SPRequestExecutorClient() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = function (spResponse) {\n            var responseHeaders = new Headers();\n            for (var h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\n        var headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        // this is a way to determine if we need to set the binaryStringRequestBody by testing what method we are calling\n        // and if they would normally have a binary body. This addresses issue #565.\n        var paths = [\n            \"files\\/add\",\n            \"files\\/addTemplateFile\",\n            \"file\\/startUpload\",\n            \"file\\/continueUpload\",\n            \"file\\/finishUpload\",\n            \"attachmentfiles\\/add\",\n        ];\n        var isBinaryRequest = (new RegExp(paths.join(\"|\"), \"i\")).test(url);\n        return new Promise(function (resolve, reject) {\n            var requestOptions = {\n                error: function (error) {\n                    reject(_this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: function (response) {\n                    resolve(_this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n                if (isBinaryRequest) {\n                    requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n                }\n            }\n            executor.executeAsync(requestOptions);\n        });\n    };\n    return SPRequestExecutorClient;\n}());\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = __webpack_require__(2);\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nvar NodeFetchClient = /** @class */ (function () {\n    function NodeFetchClient() {\n    }\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    NodeFetchClient.prototype.fetch = function () {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    };\n    return NodeFetchClient;\n}());\nexports.NodeFetchClient = NodeFetchClient;\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(14));\n__export(__webpack_require__(7));\n__export(__webpack_require__(34));\n__export(__webpack_require__(19));\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(79));\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar appcatalog_1 = __webpack_require__(41);\nexports.AppCatalog = appcatalog_1.AppCatalog;\nexports.App = appcatalog_1.App;\n__export(__webpack_require__(42));\nvar batch_1 = __webpack_require__(28);\nexports.ODataBatch = batch_1.ODataBatch;\nvar fields_1 = __webpack_require__(25);\nexports.Field = fields_1.Field;\nexports.Fields = fields_1.Fields;\nvar files_1 = __webpack_require__(8);\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nexports.File = files_1.File;\nexports.Files = files_1.Files;\nvar folders_1 = __webpack_require__(18);\nexports.Folder = folders_1.Folder;\nexports.Folders = folders_1.Folders;\nvar items_1 = __webpack_require__(12);\nexports.Item = items_1.Item;\nexports.Items = items_1.Items;\nexports.ItemVersion = items_1.ItemVersion;\nexports.ItemVersions = items_1.ItemVersions;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = __webpack_require__(27);\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = __webpack_require__(15);\nexports.List = lists_1.List;\nexports.Lists = lists_1.Lists;\nvar odata_1 = __webpack_require__(3);\nexports.spExtractODataId = odata_1.spExtractODataId;\nexports.spODataEntity = odata_1.spODataEntity;\nexports.spODataEntityArray = odata_1.spODataEntityArray;\nvar sharepointqueryable_1 = __webpack_require__(1);\nexports.SharePointQueryable = sharepointqueryable_1.SharePointQueryable;\nexports.SharePointQueryableInstance = sharepointqueryable_1.SharePointQueryableInstance;\nexports.SharePointQueryableCollection = sharepointqueryable_1.SharePointQueryableCollection;\nvar roles_1 = __webpack_require__(22);\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = __webpack_require__(33);\nexports.Search = search_1.Search;\nexports.SearchQueryBuilder = search_1.SearchQueryBuilder;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nexports.SearchBuiltInSourceId = search_1.SearchBuiltInSourceId;\nvar searchsuggest_1 = __webpack_require__(35);\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = __webpack_require__(36);\nexports.Site = site_1.Site;\n__export(__webpack_require__(43));\n__export(__webpack_require__(17));\nvar utilities_1 = __webpack_require__(44);\nexports.UtilityMethod = utilities_1.UtilityMethod;\nvar webparts_1 = __webpack_require__(39);\nexports.WebPartDefinitions = webparts_1.WebPartDefinitions;\nexports.WebPartDefinition = webparts_1.WebPartDefinition;\nexports.WebPart = webparts_1.WebPart;\nvar webs_1 = __webpack_require__(11);\nexports.Web = webs_1.Web;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _config = __webpack_require__(29);\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (data) {\n  return \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">\\n    <img class=\\\"avatar\\\" src=\\\"\" + (data.avatar == null || data.avatar.length == 0 ? \"../siteassets/\" + _config2.default.appname + \"/assets/avatar-generic.png\" : data.avatar) + \"\\\" alt=\\\"\" + \"\".concat(data.title, ' ', data.last_name) + \"\\\" />\\n  </div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"Title\\\">First Name</label>\\n      <input id=\\\"Title\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"\" + (data.Title == null ? '' : data.Title) + \"\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"last_name\\\">Last Name</label>\\n      <input id=\\\"last_name\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"\" + (data.last_name == null ? '' : data.last_name) + \"\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"company\\\">Company</label>\\n      <input id=\\\"company\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"\" + (data.company == null ? '' : data.company) + \"\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">E-Mail</label>\\n      <input id=\\\"email\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"\" + (data.email == null ? '' : data.email) + \"\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description</label>\\n      <textarea id=\\\"description\\\" class=\\\"form-control\\\">\" + (data.description == null ? '' : data.description) + \"</textarea>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"float-right\\\">\\n      <button class=\\\"btn btn-outline-default edit-form-button\\\" data-action=\\\"save\\\" data-id=\\\"\" + data.Id + \"\\\" type=\\\"button\\\">Save</button>\\n      <button class=\\\"btn btn-outline-default edit-form-button\\\" data-action=\\\"cancel\\\" type=\\\"button\\\">Cancel</button>\\n    </div>\\n  </div>\\n</div>\\n\";\n};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// sps2018demo.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 47);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f6c0a5d3aa44a6023d4a","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nfunction extractWebUrl(candidateUrl) {\n    if (candidateUrl === null) {\n        return \"\";\n    }\n    var index = candidateUrl.indexOf(\"_api/\");\n    if (index > -1) {\n        return candidateUrl.substr(0, index);\n    }\n    // if all else fails just give them what they gave us back\n    return candidateUrl;\n}\nexports.extractWebUrl = extractWebUrl;\nvar Util = /** @class */ (function () {\n    function Util() {\n    }\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    Util.getCtxCallback = function (context, method) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function () {\n            method.apply(context, params);\n        };\n    };\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    Util.urlParamExists = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    };\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    Util.getUrlParamByName = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        var results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    Util.getUrlParamBoolByName = function (name) {\n        var p = this.getUrlParamByName(name);\n        var isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    };\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    Util.stringInsert = function (target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    };\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    Util.dateAdd = function (date, interval, units) {\n        var ret = new Date(date); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    };\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    Util.loadStylesheet = function (path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        var head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            var e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    };\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    Util.combinePaths = function () {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        return paths\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    };\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    Util.getRandomString = function (chars) {\n        var text = new Array(chars);\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    };\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    Util.getGUID = function () {\n        var d = new Date().getTime();\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    Util.isFunction = function (candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    Util.isArray = function (array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    };\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    Util.stringIsNullOrEmpty = function (s) {\n        return typeof s === \"undefined\" || s === null || s.length < 1;\n    };\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    Util.extend = function (target, source, noOverwrite) {\n        if (noOverwrite === void 0) { noOverwrite = false; }\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\n        return Object.getOwnPropertyNames(source)\n            .filter(function (v) { return check(target, v); })\n            .reduce(function (t, v) {\n            t[v] = source[v];\n            return t;\n        }, target);\n    };\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    Util.isUrlAbsolute = function (url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    };\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    Util.toAbsoluteUrl = function (candidateUrl) {\n        return new Promise(function (resolve) {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.spBaseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.spBaseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have a certain path part in it?\n            if (typeof global.location !== \"undefined\") {\n                var baseUrl_1 = global.location.toString().toLowerCase();\n                [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\n                    var index = baseUrl_1.indexOf(s);\n                    if (index > 0) {\n                        return resolve(Util.combinePaths(baseUrl_1.substr(0, index), candidateUrl));\n                    }\n                });\n            }\n            return resolve(candidateUrl);\n        });\n    };\n    return Util;\n}());\nexports.Util = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/utils/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar collections_1 = require(\"../collections/collections\");\nvar utils_1 = require(\"../net/utils\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar logging_1 = require(\"../utils/logging\");\nvar queryable_1 = require(\"../odata/queryable\");\nvar pipeline_1 = require(\"../request/pipeline\");\nvar httpclient_1 = require(\"../net/httpclient\");\n/**\n * SharePointQueryable Base Class\n *\n */\nvar SharePointQueryable = /** @class */ (function (_super) {\n    __extends(SharePointQueryable, _super);\n    /**\n     * Creates a new instance of the SharePointQueryable class\n     *\n     * @constructor\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\n     *\n     */\n    function SharePointQueryable(baseUrl, path) {\n        var _this = _super.call(this) || this;\n        _this._options = {};\n        _this._query = new collections_1.Dictionary();\n        _this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            var urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                _this._parentUrl = urlStr;\n                _this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                var index = urlStr.lastIndexOf(\"/\");\n                _this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                _this._url = util_1.Util.combinePaths(_this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                var index = urlStr.lastIndexOf(\"(\");\n                _this._parentUrl = urlStr.slice(0, index);\n                _this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            var q = baseUrl;\n            _this._parentUrl = q._url;\n            _this._options = q._options;\n            var target = q._query.get(\"@target\");\n            if (target !== null) {\n                _this._query.add(\"@target\", target);\n            }\n            _this._url = util_1.Util.combinePaths(_this._parentUrl, path);\n        }\n        return _this;\n    }\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    SharePointQueryable.prototype.addBatchDependency = function () {\n        if (this.hasBatch) {\n            return this._batch.addDependency();\n        }\n        return function () { return null; };\n    };\n    Object.defineProperty(SharePointQueryable.prototype, \"hasBatch\", {\n        /**\n         * Indicates if the current query has a batch associated\n         *\n         */\n        get: function () {\n            return this._batch !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SharePointQueryable.prototype, \"batch\", {\n        /**\n         * The batch currently associated with this query or null\n         *\n         */\n        get: function () {\n            return this.hasBatch ? this._batch : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new SharePointQueryable\n     */\n    SharePointQueryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    SharePointQueryable.prototype.inBatch = function (batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\n        var aliasedParams = new collections_1.Dictionary();\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\n            logging_1.Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, logging_1.LogLevel.Verbose);\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\n            return labelName;\n        });\n        // inlude our explicitly set query string params\n        aliasedParams.merge(this._query);\n        if (aliasedParams.count() > 0) {\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\n        }\n        return url;\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        var parent = new factory(baseUrl, path);\n        parent.configure(this._options);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        if (typeof batch !== \"undefined\") {\n            parent = parent.inBatch(batch);\n        }\n        return parent;\n    };\n    /**\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = true; }\n        var clone = new factory(this, additionalPath);\n        clone.configure(this._options);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (pipeline === void 0) { pipeline = pipeline_1.PipelineMethods.default; }\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\n            utils_1.mergeOptions(options, _this._options);\n            // build our request context\n            var context = {\n                batch: _this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: _this._cachingOptions,\n                clientFactory: function () { return new httpclient_1.HttpClient(); },\n                isBatched: _this.hasBatch,\n                isCached: _this._useCaching,\n                options: options,\n                parser: parser,\n                pipeline: pipeline,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    };\n    return SharePointQueryable;\n}(queryable_1.ODataQueryable));\nexports.SharePointQueryable = SharePointQueryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\n    __extends(SharePointQueryableCollection, _super);\n    function SharePointQueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    SharePointQueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    SharePointQueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    SharePointQueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    SharePointQueryableCollection.prototype.skip = function (skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    SharePointQueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    return SharePointQueryableCollection;\n}(SharePointQueryable));\nexports.SharePointQueryableCollection = SharePointQueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\n    __extends(SharePointQueryableInstance, _super);\n    function SharePointQueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    SharePointQueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    SharePointQueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return SharePointQueryableInstance;\n}(SharePointQueryable));\nexports.SharePointQueryableInstance = SharePointQueryableInstance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/sharepointqueryable.js\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = require(\"../utils/logging\");\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\n    __extends(ProcessHttpClientResponseException, _super);\n    function ProcessHttpClientResponseException(status, statusText, data) {\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\n        _this.status = status;\n        _this.statusText = statusText;\n        _this.data = data;\n        _this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ProcessHttpClientResponseException;\n}(Error));\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nvar NoCacheAvailableException = /** @class */ (function (_super) {\n    __extends(NoCacheAvailableException, _super);\n    function NoCacheAvailableException(msg) {\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NoCacheAvailableException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NoCacheAvailableException;\n}(Error));\nexports.NoCacheAvailableException = NoCacheAvailableException;\nvar APIUrlException = /** @class */ (function (_super) {\n    __extends(APIUrlException, _super);\n    function APIUrlException(msg) {\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return APIUrlException;\n}(Error));\nexports.APIUrlException = APIUrlException;\nvar AuthUrlException = /** @class */ (function (_super) {\n    __extends(AuthUrlException, _super);\n    function AuthUrlException(data, msg) {\n        if (msg === void 0) { msg = \"Auth URL Endpoint could not be determined from data. Data logged.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return AuthUrlException;\n}(Error));\nexports.AuthUrlException = AuthUrlException;\nvar NodeFetchClientUnsupportedException = /** @class */ (function (_super) {\n    __extends(NodeFetchClientUnsupportedException, _super);\n    function NodeFetchClientUnsupportedException(msg) {\n        if (msg === void 0) { msg = \"Using NodeFetchClient in the browser is not supported.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NodeFetchClientUnsupportedException;\n}(Error));\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nvar SPRequestExecutorUndefinedException = /** @class */ (function (_super) {\n    __extends(SPRequestExecutorUndefinedException, _super);\n    function SPRequestExecutorUndefinedException() {\n        var _this = this;\n        var msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        _this = _super.call(this, msg) || this;\n        _this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return SPRequestExecutorUndefinedException;\n}(Error));\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nvar MaxCommentLengthException = /** @class */ (function (_super) {\n    __extends(MaxCommentLengthException, _super);\n    function MaxCommentLengthException(msg) {\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"MaxCommentLengthException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return MaxCommentLengthException;\n}(Error));\nexports.MaxCommentLengthException = MaxCommentLengthException;\nvar NotSupportedInBatchException = /** @class */ (function (_super) {\n    __extends(NotSupportedInBatchException, _super);\n    function NotSupportedInBatchException(operation) {\n        if (operation === void 0) { operation = \"This operation\"; }\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\n        _this.name = \"NotSupportedInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NotSupportedInBatchException;\n}(Error));\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nvar ODataIdException = /** @class */ (function (_super) {\n    __extends(ODataIdException, _super);\n    function ODataIdException(data, msg) {\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ODataIdException;\n}(Error));\nexports.ODataIdException = ODataIdException;\nvar BatchParseException = /** @class */ (function (_super) {\n    __extends(BatchParseException, _super);\n    function BatchParseException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"BatchParseException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return BatchParseException;\n}(Error));\nexports.BatchParseException = BatchParseException;\nvar AlreadyInBatchException = /** @class */ (function (_super) {\n    __extends(AlreadyInBatchException, _super);\n    function AlreadyInBatchException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"AlreadyInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return AlreadyInBatchException;\n}(Error));\nexports.AlreadyInBatchException = AlreadyInBatchException;\nvar FunctionExpectedException = /** @class */ (function (_super) {\n    __extends(FunctionExpectedException, _super);\n    function FunctionExpectedException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"FunctionExpectedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return FunctionExpectedException;\n}(Error));\nexports.FunctionExpectedException = FunctionExpectedException;\nvar UrlException = /** @class */ (function (_super) {\n    __extends(UrlException, _super);\n    function UrlException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"UrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return UrlException;\n}(Error));\nexports.UrlException = UrlException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/utils/exceptions.js\n// module id = 2\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar logging_1 = require(\"../utils/logging\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar core_1 = require(\"../odata/core\");\nfunction spExtractODataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.spExtractODataId = spExtractODataId;\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\n    __extends(SPODataEntityParserImpl, _super);\n    function SPODataEntityParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.hydrate = function (d) {\n            var o = new _this.factory(spGetEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        };\n        return _this;\n    }\n    SPODataEntityParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            var o = new _this.factory(spGetEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    };\n    return SPODataEntityParserImpl;\n}(core_1.ODataParserBase));\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\n    __extends(SPODataEntityArrayParserImpl, _super);\n    function SPODataEntityArrayParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.hydrate = function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(spGetEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        };\n        return _this;\n    }\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(spGetEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    };\n    return SPODataEntityArrayParserImpl;\n}(core_1.ODataParserBase));\nfunction spGetEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.metadata\") && entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(util_1.extractWebUrl(entity[\"odata.metadata\"]), \"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.spGetEntityUrl = spGetEntityUrl;\nfunction spODataEntity(factory) {\n    return new SPODataEntityParserImpl(factory);\n}\nexports.spODataEntity = spODataEntity;\nfunction spODataEntityArray(factory) {\n    return new SPODataEntityArrayParserImpl(factory);\n}\nexports.spODataEntityArray = spODataEntityArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/odata.js\n// module id = 3\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fetchclient_1 = require(\"../net/fetchclient\");\nvar RuntimeConfigImpl = /** @class */ (function () {\n    function RuntimeConfigImpl() {\n        // these are our default values for the library\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 60;\n        this._globalCacheDisable = false;\n        this._enableCacheExpiration = false;\n        this._cacheExpirationIntervalMilliseconds = 750;\n        this._spfxContext = null;\n        // sharepoint settings\n        this._spFetchClientFactory = function () { return new fetchclient_1.FetchClient(); };\n        this._spBaseUrl = null;\n        this._spHeaders = null;\n        // ms graph settings\n        this._graphHeaders = null;\n        this._graphFetchClientFactory = function () { return null; };\n    }\n    RuntimeConfigImpl.prototype.set = function (config) {\n        var _this = this;\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"sp\")) {\n            if (config.sp.hasOwnProperty(\"fetchClientFactory\")) {\n                this._spFetchClientFactory = config.sp.fetchClientFactory;\n            }\n            if (config.sp.hasOwnProperty(\"baseUrl\")) {\n                this._spBaseUrl = config.sp.baseUrl;\n            }\n            if (config.sp.hasOwnProperty(\"headers\")) {\n                this._spHeaders = config.sp.headers;\n            }\n        }\n        if (config.hasOwnProperty(\"spfxContext\")) {\n            this._spfxContext = config.spfxContext;\n            if (typeof this._spfxContext.graphHttpClient !== \"undefined\") {\n                this._graphFetchClientFactory = function () { return _this._spfxContext.graphHttpClient; };\n            }\n        }\n        if (config.hasOwnProperty(\"graph\")) {\n            if (config.graph.hasOwnProperty(\"headers\")) {\n                this._graphHeaders = config.graph.headers;\n            }\n            // this comes after the default setting of the _graphFetchClientFactory client so it can be overwritten\n            if (config.graph.hasOwnProperty(\"fetchClientFactory\")) {\n                this._graphFetchClientFactory = config.graph.fetchClientFactory;\n            }\n        }\n        if (config.hasOwnProperty(\"enableCacheExpiration\")) {\n            this._enableCacheExpiration = config.enableCacheExpiration;\n        }\n        if (config.hasOwnProperty(\"cacheExpirationIntervalMilliseconds\")) {\n            // we don't let the interval be less than 300 milliseconds\n            var interval = config.cacheExpirationIntervalMilliseconds < 300 ? 300 : config.cacheExpirationIntervalMilliseconds;\n            this._cacheExpirationIntervalMilliseconds = interval;\n        }\n    };\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\n        get: function () {\n            return this._defaultCachingStore;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\n        get: function () {\n            return this._defaultCachingTimeoutSeconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\n        get: function () {\n            return this._globalCacheDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spFetchClientFactory\", {\n        get: function () {\n            return this._spFetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spBaseUrl\", {\n        get: function () {\n            if (this._spBaseUrl !== null) {\n                return this._spBaseUrl;\n            }\n            else if (this._spfxContext !== null) {\n                return this._spfxContext.pageContext.web.absoluteUrl;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spHeaders\", {\n        get: function () {\n            return this._spHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\n        get: function () {\n            return this._enableCacheExpiration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\n        get: function () {\n            return this._cacheExpirationIntervalMilliseconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\n        get: function () {\n            return this._spfxContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"graphFetchClientFactory\", {\n        get: function () {\n            return this._graphFetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"graphHeaders\", {\n        get: function () {\n            return this._graphHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RuntimeConfigImpl;\n}());\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nvar _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/configuration/pnplibconfig.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nvar Logger = /** @class */ (function () {\n    function Logger() {\n    }\n    Object.defineProperty(Logger, \"activeLogLevel\", {\n        get: function () {\n            return Logger.instance.activeLogLevel;\n        },\n        set: function (value) {\n            Logger.instance.activeLogLevel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger, \"instance\", {\n        get: function () {\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n                Logger._instance = new LoggerImpl();\n            }\n            return Logger._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    Logger.subscribe = function () {\n        var listeners = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            listeners[_i] = arguments[_i];\n        }\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\n    };\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    Logger.clearSubscribers = function () {\n        return Logger.instance.clearSubscribers();\n    };\n    Object.defineProperty(Logger, \"count\", {\n        /**\n         * Gets the current subscriber count\n         */\n        get: function () {\n            return Logger.instance.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: message });\n    };\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.writeJSON = function (json, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    };\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    Logger.log = function (entry) {\n        Logger.instance.log(entry);\n    };\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    Logger.measure = function (name, f) {\n        return Logger.instance.measure(name, f);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\nvar LoggerImpl = /** @class */ (function () {\n    function LoggerImpl(activeLogLevel, subscribers) {\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\n        if (subscribers === void 0) { subscribers = []; }\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    LoggerImpl.prototype.subscribe = function (listener) {\n        this.subscribers.push(listener);\n    };\n    LoggerImpl.prototype.clearSubscribers = function () {\n        var s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    };\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\n        get: function () {\n            return this.subscribers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        this.log({ level: level, message: message });\n    };\n    LoggerImpl.prototype.log = function (entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\n    };\n    LoggerImpl.prototype.measure = function (name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    };\n    return LoggerImpl;\n}());\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nvar ConsoleListener = /** @class */ (function () {\n    function ConsoleListener() {\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    ConsoleListener.prototype.log = function (entry) {\n        var msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    };\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    ConsoleListener.prototype.format = function (entry) {\n        var msg = [];\n        msg.push(\"Message: \" + entry.message);\n        if (typeof entry.data !== \"undefined\") {\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\n        }\n        return msg.join(\"\");\n    };\n    return ConsoleListener;\n}());\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nvar FunctionListener = /** @class */ (function () {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    function FunctionListener(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    FunctionListener.prototype.log = function (entry) {\n        this.method(entry);\n    };\n    return FunctionListener;\n}());\nexports.FunctionListener = FunctionListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/utils/logging.js\n// module id = 5\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar collections_1 = require(\"../collections/collections\");\nvar graphclient_1 = require(\"../net/graphclient\");\nvar queryable_1 = require(\"../odata/queryable\");\nvar pipeline_1 = require(\"../request/pipeline\");\n/**\n * Queryable Base Class\n *\n */\nvar GraphQueryable = /** @class */ (function (_super) {\n    __extends(GraphQueryable, _super);\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    function GraphQueryable(baseUrl, path) {\n        var _this = _super.call(this) || this;\n        _this._query = new collections_1.Dictionary();\n        if (typeof baseUrl === \"string\") {\n            var urlStr = baseUrl;\n            _this._parentUrl = urlStr;\n            _this._url = util_1.Util.combinePaths(urlStr, path);\n        }\n        else {\n            var q = baseUrl;\n            _this._parentUrl = q._url;\n            _this._url = util_1.Util.combinePaths(_this._parentUrl, path);\n        }\n        return _this;\n    }\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new queryable\n     */\n    GraphQueryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    GraphQueryable.prototype.toUrlAndQuery = function () {\n        var _this = this;\n        return this.toUrl() + (\"?\" + this._query.getKeys().map(function (key) { return key + \"=\" + _this._query.get(key); }).join(\"&\"));\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    GraphQueryable.prototype.getParent = function (factory, baseUrl, path) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        return new factory(baseUrl, path);\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    GraphQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = true; }\n        // TODO:: include batching info in clone\n        if (includeBatch) {\n            return new factory(this, additionalPath);\n        }\n        return new factory(this, additionalPath);\n    };\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    GraphQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\n        if (options === void 0) { options = {}; }\n        if (pipeline === void 0) { pipeline = pipeline_1.PipelineMethods.default; }\n        // TODO:: add batch support\n        return Promise.resolve({\n            batch: null,\n            batchDependency: function () { return void (0); },\n            cachingOptions: this._cachingOptions,\n            clientFactory: function () { return new graphclient_1.GraphHttpClient(); },\n            isBatched: false,\n            isCached: this._useCaching,\n            options: options,\n            parser: parser,\n            pipeline: pipeline,\n            requestAbsoluteUrl: this.toUrlAndQuery(),\n            requestId: util_1.Util.getGUID(),\n            verb: verb,\n        });\n    };\n    return GraphQueryable;\n}(queryable_1.ODataQueryable));\nexports.GraphQueryable = GraphQueryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar GraphQueryableCollection = /** @class */ (function (_super) {\n    __extends(GraphQueryableCollection, _super);\n    function GraphQueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @param filter The string representing the filter query\n     */\n    GraphQueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    GraphQueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    GraphQueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    GraphQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    GraphQueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    /**\n     * Skips a set number of items in the return set\n     *\n     * @param num Number of items to skip\n     */\n    GraphQueryableCollection.prototype.skip = function (num) {\n        this._query.add(\"$top\", num.toString());\n        return this;\n    };\n    /**\n     * \tTo request second and subsequent pages of Graph data\n     */\n    GraphQueryableCollection.prototype.skipToken = function (token) {\n        this._query.add(\"$skiptoken\", token);\n        return this;\n    };\n    Object.defineProperty(GraphQueryableCollection.prototype, \"count\", {\n        /**\n         * \tRetrieves the total count of matching resources\n         */\n        get: function () {\n            this._query.add(\"$count\", \"true\");\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GraphQueryableCollection;\n}(GraphQueryable));\nexports.GraphQueryableCollection = GraphQueryableCollection;\nvar GraphQueryableSearchableCollection = /** @class */ (function (_super) {\n    __extends(GraphQueryableSearchableCollection, _super);\n    function GraphQueryableSearchableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * \tTo request second and subsequent pages of Graph data\n     */\n    GraphQueryableSearchableCollection.prototype.search = function (query) {\n        this._query.add(\"$search\", query);\n        return this;\n    };\n    return GraphQueryableSearchableCollection;\n}(GraphQueryableCollection));\nexports.GraphQueryableSearchableCollection = GraphQueryableSearchableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar GraphQueryableInstance = /** @class */ (function (_super) {\n    __extends(GraphQueryableInstance, _super);\n    function GraphQueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    GraphQueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    GraphQueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return GraphQueryableInstance;\n}(GraphQueryable));\nexports.GraphQueryableInstance = GraphQueryableInstance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/graphqueryable.js\n// module id = 6\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"./core\");\nvar util_1 = require(\"../utils/util\");\nvar ODataDefaultParser = /** @class */ (function (_super) {\n    __extends(ODataDefaultParser, _super);\n    function ODataDefaultParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ODataDefaultParser;\n}(core_1.ODataParserBase));\nexports.ODataDefaultParser = ODataDefaultParser;\nvar ODataValueParserImpl = /** @class */ (function (_super) {\n    __extends(ODataValueParserImpl, _super);\n    function ODataValueParserImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ODataValueParserImpl.prototype.parse = function (r) {\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\n    };\n    return ODataValueParserImpl;\n}(core_1.ODataParserBase));\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nvar ODataRawParserImpl = /** @class */ (function () {\n    function ODataRawParserImpl() {\n    }\n    ODataRawParserImpl.prototype.parse = function (r) {\n        return r.json();\n    };\n    return ODataRawParserImpl;\n}());\nexports.ODataRawParserImpl = ODataRawParserImpl;\nexports.ODataRaw = new ODataRawParserImpl();\nvar TextFileParser = /** @class */ (function () {\n    function TextFileParser() {\n    }\n    TextFileParser.prototype.parse = function (r) {\n        return r.text();\n    };\n    return TextFileParser;\n}());\nexports.TextFileParser = TextFileParser;\nvar BlobFileParser = /** @class */ (function () {\n    function BlobFileParser() {\n    }\n    BlobFileParser.prototype.parse = function (r) {\n        return r.blob();\n    };\n    return BlobFileParser;\n}());\nexports.BlobFileParser = BlobFileParser;\nvar JSONFileParser = /** @class */ (function () {\n    function JSONFileParser() {\n    }\n    JSONFileParser.prototype.parse = function (r) {\n        return r.json();\n    };\n    return JSONFileParser;\n}());\nexports.JSONFileParser = JSONFileParser;\nvar BufferFileParser = /** @class */ (function () {\n    function BufferFileParser() {\n    }\n    BufferFileParser.prototype.parse = function (r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    };\n    return BufferFileParser;\n}());\nexports.BufferFileParser = BufferFileParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/odata/parsers.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar parsers_1 = require(\"../odata/parsers\");\nvar util_1 = require(\"../utils/util\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar webparts_1 = require(\"./webparts\");\nvar items_1 = require(\"./items\");\nvar sharepointqueryableshareable_1 = require(\"./sharepointqueryableshareable\");\nvar odata_1 = require(\"./odata\");\n/**\n * Describes a collection of File objects\n *\n */\nvar Files = /** @class */ (function (_super) {\n    __extends(Files, _super);\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Files(baseUrl, path) {\n        if (path === void 0) { path = \"files\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    Files.prototype.getByName = function (name) {\n        var f = new File(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.add = function (url, content, shouldOverWrite) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\n            .postCore({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\n        return adder.postCore()\n            .then(function () { return _this.getByName(url); })\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\n    };\n    /**\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\n        var _this = this;\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\n            .postCore().then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(fileUrl),\n            };\n        });\n    };\n    return Files;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nvar File = /** @class */ (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\n        /**\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"versions\", {\n        /**\n         * Gets a collection of versions\n         *\n         */\n        get: function () {\n            return new Versions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    File.prototype.approve = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\n    };\n    /**\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    File.prototype.cancelUpload = function (uploadId) {\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\n    };\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    File.prototype.checkin = function (comment, checkinType) {\n        if (comment === void 0) { comment = \"\"; }\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\n    };\n    /**\n     * Checks out the file from a document library.\n     */\n    File.prototype.checkout = function () {\n        return this.clone(File, \"checkout\").postCore();\n    };\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    File.prototype.copyTo = function (url, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\n    };\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    File.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(File, null).postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    File.prototype.deny = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\n    };\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    File.prototype.getLimitedWebPartManager = function (scope) {\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\n        return new webparts_1.LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n    };\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    File.prototype.moveTo = function (url, moveOperations) {\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\n    };\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    File.prototype.publish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\n    };\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    File.prototype.recycle = function () {\n        return this.clone(File, \"recycle\").postCore();\n    };\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    File.prototype.undoCheckout = function () {\n        return this.clone(File, \"undoCheckout\").postCore();\n    };\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    File.prototype.unpublish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\n    };\n    /**\n     * Gets the contents of the file as text. Not supported in batching.\n     *\n     */\n    File.prototype.getText = function () {\n        return this.clone(File, \"$value\", false).get(new parsers_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\n     *\n     */\n    File.prototype.getBlob = function () {\n        return this.clone(File, \"$value\", false).get(new parsers_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getBuffer = function () {\n        return this.clone(File, \"$value\", false).get(new parsers_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getJSON = function () {\n        return this.clone(File, \"$value\", false).get(new parsers_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\n     *\n     * @param content The file content\n     *\n     */\n    File.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(File, \"$value\", false).postCore({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new File(_this); });\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    File.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.spGetEntityUrl(d)), d);\n        });\n    };\n    /**\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\n        var _this = this;\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        if (typeof progress === \"undefined\") {\n            progress = function () { return null; };\n        }\n        var fileSize = file.size;\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        var uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\n        var _loop_1 = function (i) {\n            chain = chain.then(function (pointer) {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        };\n        // skip the first and last blocks\n        for (var i = 2; i < blockCount; i++) {\n            _loop_1(i);\n        }\n        return chain.then(function (pointer) {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\n        });\n    };\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.startUpload = function (uploadId, fragment) {\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\n            .postAsCore({ body: fragment })\n            .then(function (n) {\n            // When OData=verbose the payload has the following shape:\n            // { StartUpload: \"10485760\" }\n            if (typeof n === \"object\") {\n                n = n.StartUpload;\n            }\n            return parseFloat(n);\n        });\n    };\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\n            .postAsCore({ body: fragment })\n            .then(function (n) {\n            // When OData=verbose the payload has the following shape:\n            // { ContinueUpload: \"20971520\" }\n            if (typeof n === \"object\") {\n                n = n.ContinueUpload;\n            }\n            return parseFloat(n);\n        });\n    };\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\n            .postAsCore({ body: fragment })\n            .then(function (response) {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    };\n    return File;\n}(sharepointqueryableshareable_1.SharePointQueryableShareableFile));\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nvar Versions = /** @class */ (function (_super) {\n    __extends(Versions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Versions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    Versions.prototype.getById = function (versionId) {\n        var v = new Version(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    Versions.prototype.deleteAll = function () {\n        return new Versions(this, \"deleteAll\").postCore();\n    };\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.deleteById = function (versionId) {\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\").postCore();\n    };\n    /**\n     * Recycles the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.recycleByID = function (versionId) {\n        return this.clone(Versions, \"recycleByID(vid=\" + versionId + \")\").postCore();\n    };\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.deleteByLabel = function (label) {\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\n    };\n    /**\n     * REcycles the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.recycleByLabel = function (label) {\n        return this.clone(Versions, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\n    };\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    Versions.prototype.restoreByLabel = function (label) {\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\n    };\n    return Versions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nvar Version = /** @class */ (function (_super) {\n    __extends(Version, _super);\n    function Version() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Version.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Opens the file as a stream.\n     */\n    Version.prototype.openBinaryStream = function () {\n        return this.clone(Version, \"openBinaryStream\").postCore();\n    };\n    return Version;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/files.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/collections/collections.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nfunction mergeOptions(target, source) {\n    target.headers = target.headers || {};\n    var headers = util_1.Util.extend(target.headers, source.headers);\n    target = util_1.Util.extend(target, source);\n    target.headers = headers;\n}\nexports.mergeOptions = mergeOptions;\nfunction mergeHeaders(target, source) {\n    if (typeof source !== \"undefined\" && source !== null) {\n        var temp = new Request(\"\", { headers: source });\n        temp.headers.forEach(function (value, name) {\n            target.append(name, value);\n        });\n    }\n}\nexports.mergeHeaders = mergeHeaders;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/net/utils.js\n// module id = 10\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar lists_1 = require(\"./lists\");\nvar fields_1 = require(\"./fields\");\nvar navigation_1 = require(\"./navigation\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar regionalsettings_1 = require(\"./regionalsettings\");\nvar folders_1 = require(\"./folders\");\nvar roles_1 = require(\"./roles\");\nvar files_1 = require(\"./files\");\nvar util_1 = require(\"../utils/util\");\nvar lists_2 = require(\"./lists\");\nvar siteusers_1 = require(\"./siteusers\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar batch_1 = require(\"./batch\");\nvar features_1 = require(\"./features\");\nvar sharepointqueryableshareable_1 = require(\"./sharepointqueryableshareable\");\nvar relateditems_1 = require(\"./relateditems\");\nvar appcatalog_1 = require(\"./appcatalog\");\nvar clientsidepages_1 = require(\"./clientsidepages\");\n/**\n * Describes a collection of webs\n *\n */\nvar Webs = /** @class */ (function (_super) {\n    __extends(Webs, _super);\n    /**\n     * Creates a new instance of the Webs class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\n     */\n    function Webs(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webs\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The new web's description\n     * @param template The new web's template internal name (default = STS)\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\n     */\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = \"STS\"; }\n        if (language === void 0) { language = 1033; }\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\n        var props = {\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        };\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        return this.clone(Webs, \"add\").postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                web: new Web(odata_1.spExtractODataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    };\n    return Webs;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Webs = Webs;\n/**\n * Describes a collection of web infos\n *\n */\nvar WebInfos = /** @class */ (function (_super) {\n    __extends(WebInfos, _super);\n    /**\n     * Creates a new instance of the WebInfos class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web infos collection\n     */\n    function WebInfos(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webinfos\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    return WebInfos;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.WebInfos = WebInfos;\n/**\n * Describes a web\n *\n */\nvar Web = /** @class */ (function (_super) {\n    __extends(Web, _super);\n    /**\n     * Creates a new instance of the Web class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web\n     */\n    function Web(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Creates a new web instance from the given url by indexing the location of the /_api/\n     * segment. If this is not found the method creates a new web with the entire string as\n     * supplied.\n     *\n     * @param url\n     */\n    Web.fromUrl = function (url, path) {\n        return new Web(util_1.extractWebUrl(url), path);\n    };\n    Object.defineProperty(Web.prototype, \"webs\", {\n        /**\n         * Gets this web's subwebs\n         *\n         */\n        get: function () {\n            return new Webs(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\n    *\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\n    */\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\n    };\n    Object.defineProperty(Web.prototype, \"allProperties\", {\n        /**\n         * Gets the set of all web properties from the read-only collection.\n         */\n        get: function () {\n            return this.clone(sharepointqueryable_1.SharePointQueryableCollection, \"allproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"webinfos\", {\n        /**\n         * Gets a collection of WebInfos for this web's subwebs\n         *\n         */\n        get: function () {\n            return new WebInfos(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types available in this web\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"lists\", {\n        /**\n         * Gets the lists in this web\n         *\n         */\n        get: function () {\n            return new lists_1.Lists(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"fields\", {\n        /**\n         * Gets the fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"features\", {\n        /**\n         * Gets the active features for this web\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"availablefields\", {\n        /**\n         * Gets the available fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this, \"availablefields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"navigation\", {\n        /**\n         * Gets the navigation options in this web\n         *\n         */\n        get: function () {\n            return new navigation_1.Navigation(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\n        /**\n         * Gets the site users\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\n        /**\n         * Gets the site groups\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\n        /**\n         * Gets site user info list\n         *\n         */\n        get: function () {\n            return new lists_2.List(this, \"siteuserinfolist\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\n        /**\n         * Gets regional settings\n         *\n         */\n        get: function () {\n            return new regionalsettings_1.RegionalSettings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"currentUser\", {\n        /**\n         * Gets the current user\n         */\n        get: function () {\n            return new siteusers_1.CurrentUser(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"folders\", {\n        /**\n         * Gets the top-level folders in this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\n        /**\n         * Gets all user custom actions for this web\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this web\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"effectivebasepermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\n        /**\n         * Gets the collection of RoleDefinition resources\n         *\n         */\n        get: function () {\n            return new roles_1.RoleDefinitions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\n        /**\n         * Provides an interface to manage related items\n         *\n         */\n        get: function () {\n            return relateditems_1.RelatedItemManagerImpl.FromUrl(this.toUrl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch for requests within the context of this web\n     *\n     */\n    Web.prototype.createBatch = function () {\n        return new batch_1.ODataBatch(this.parentUrl);\n    };\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\n        /**\n         * Gets the root folder of this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\n        /**\n         * Gets the associated owner group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedownergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\n        /**\n         * Gets the associated member group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedmembergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\n        /**\n         * Gets the associated visitor group for this web\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedvisitorgroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a folder by server relative url\n     *\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\n     * This works only in SharePoint online.\n     *\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a file by server relative url\n     *\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a file by server relative url if your file name contains # and % characters\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\n     *\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Gets a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    Web.prototype.getList = function (listRelativeUrl) {\n        return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n    };\n    /**\n     * Updates this web instance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    Web.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                web: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this web\n     *\n     */\n    Web.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\n     *\n     * @param colorPaletteUrl The server-relative URL of the color palette file\n     * @param fontSchemeUrl The server-relative URL of the font scheme\n     * @param backgroundImageUrl The server-relative URL of the background image\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\n     */\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        var postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        return this.clone(Web, \"applytheme\").postCore({ body: postBody });\n    };\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    Web.prototype.applyWebTemplate = function (template) {\n        var q = this.clone(Web, \"applywebtemplate\");\n        q.concat(\"(@t)\");\n        q.query.add(\"@t\", template);\n        return q.postCore();\n    };\n    /**\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    Web.prototype.ensureUser = function (loginName) {\n        var postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        return this.clone(Web, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                user: new siteusers_1.SiteUser(odata_1.spExtractODataId(data)),\n            };\n        });\n    };\n    /**\n     * Returns a collection of site templates available for the site\n     *\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\n     */\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\n        if (language === void 0) { language = 1033; }\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\n        return new sharepointqueryable_1.SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n    };\n    /**\n     * Returns the list gallery on the site\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    Web.prototype.getCatalog = function (type) {\n        return this.clone(Web, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\n            return new lists_2.List(odata_1.spExtractODataId(data));\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\n     *\n     * @param query The change query\n     */\n    Web.prototype.getChanges = function (query) {\n        var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        return this.clone(Web, \"getchanges\").postCore({ body: postBody });\n    };\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\n        /**\n         * Gets the custom list templates for the site\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"getcustomlisttemplates\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site\n     *\n     * @param id The id of the user\n     */\n    Web.prototype.getUserById = function (id) {\n        return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n    };\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    Web.prototype.mapToIcon = function (filename, size, progId) {\n        if (size === void 0) { size = 0; }\n        if (progId === void 0) { progId = \"\"; }\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\n    };\n    /**\n     * Returns the tenant property corresponding to the specified key in the app catalog site\n     *\n     * @param key\n     */\n    Web.prototype.getStorageEntity = function (key) {\n        return this.clone(Web, \"getStorageEntity('\" + key + \"')\").get();\n    };\n    /**\n     * Gets the app catalog for this web\n     *\n     * @param url Optional url or web containing the app catalog (default: current web)\n     */\n    Web.prototype.getAppCatalog = function (url) {\n        return new appcatalog_1.AppCatalog(url || this);\n    };\n    /**\n     * Gets the collection of available client side web parts for this web instance\n     */\n    Web.prototype.getClientSideWebParts = function () {\n        return this.clone(sharepointqueryable_1.SharePointQueryableCollection, \"GetClientSideWebParts\").get();\n    };\n    /**\n     * Creates a new client side page\n     *\n     * @param pageName Name of the new page\n     * @param title Display title of the new page\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\n     */\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\n        return clientsidepages_1.ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\n    };\n    return Web;\n}(sharepointqueryableshareable_1.SharePointQueryableShareableWeb));\nexports.Web = Web;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/webs.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar sharepointqueryableshareable_1 = require(\"./sharepointqueryableshareable\");\nvar folders_1 = require(\"./folders\");\nvar files_1 = require(\"./files\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar util_1 = require(\"../utils/util\");\nvar core_1 = require(\"../odata/core\");\nvar attachmentfiles_1 = require(\"./attachmentfiles\");\nvar lists_1 = require(\"./lists\");\nvar pnp_1 = require(\"../pnp\");\n/**\n * Describes a collection of Item objects\n *\n */\nvar Items = /** @class */ (function (_super) {\n    __extends(Items, _super);\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Items(baseUrl, path) {\n        if (path === void 0) { path = \"items\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    Items.prototype.getById = function (id) {\n        var i = new Item(this);\n        i.concat(\"(\" + id + \")\");\n        return i;\n    };\n    /**\n     * Gets BCS Item by string id\n     *\n     * @param stringId The string id of the BCS item to retrieve\n     */\n    Items.prototype.getItemByStringId = function (stringId) {\n        var i = new Item(this);\n        i.concat(\"/../getItemByStringId('\" + stringId + \"')\");\n        return i;\n    };\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\n     */\n    Items.prototype.skip = function (skip, reverse) {\n        if (reverse === void 0) { reverse = false; }\n        if (reverse) {\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\n        }\n        else {\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\n        }\n        return this;\n    };\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    Items.prototype.getPaged = function () {\n        return this.getAs(new PagedItemCollectionParser());\n    };\n    /**\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\n     *\n     *  @param requestSize Number of items to return in each request (Default: 2000)\n     */\n    Items.prototype.getAll = function (requestSize) {\n        var _this = this;\n        if (requestSize === void 0) { requestSize = 2000; }\n        pnp_1.Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", pnp_1.LogLevel.Warning);\n        // this will be used for the actual query\n        // and we set no metadata here to try and reduce traffic\n        var items = new Items(this, \"\").top(requestSize).configure({\n            headers: {\n                \"Accept\": \"application/json;odata=nometadata\",\n            },\n        });\n        // let's copy over the odata query params that can be applied\n        // $top - allow setting the page size this way (override what we did above)\n        // $select - allow picking the return fields (good behavior)\n        // $filter - allow setting a filter, though this may fail for large lists\n        this.query.getKeys()\n            .filter(function (k) { return /^\\$select$|^\\$filter$|^\\$top$/.test(k.toLowerCase()); })\n            .reduce(function (i, k) {\n            i.query.add(k, _this.query.get(k));\n            return i;\n        }, items);\n        // give back the promise\n        return new Promise(function (resolve, reject) {\n            // this will eventually hold the items we return\n            var itemsCollector = [];\n            // action that will gather up our results recursively\n            var gatherer = function (last) {\n                // collect that set of results\n                [].push.apply(itemsCollector, last.results);\n                // if we have more, repeat - otherwise resolve with the collected items\n                if (last.hasNext) {\n                    last.getNext().then(gatherer).catch(reject);\n                }\n                else {\n                    resolve(itemsCollector);\n                }\n            };\n            // start the cycle\n            items.getPaged().then(gatherer).catch(reject);\n        });\n    };\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        var removeDependency = this.addBatchDependency();\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n            var postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            var promise = _this.clone(Items, null).postAsCore({ body: postBody }).then(function (data) {\n                return {\n                    data: data,\n                    item: _this.getById(data.Id),\n                };\n            });\n            removeDependency();\n            return promise;\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List).getListItemEntityTypeFullName();\n    };\n    return Items;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nvar Item = /** @class */ (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\n        /**\n         * Gets the set of attachments for this item\n         *\n         */\n        get: function () {\n            return new attachmentfiles_1.AttachmentFiles(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"contentType\", {\n        /**\n         * Gets the content type for this item\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentType(this, \"ContentType\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions for the item\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\n        /**\n         * Gets the effective base permissions for the item in a UI context\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\n        /**\n         * Gets the field values for this list item in their HTML representation\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\n        /**\n         * Gets the field values for this list item in their text representation\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableInstance(this, \"FieldValuesAsText\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\n        /**\n         * Gets the field values for this list item for use in editing controls\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableInstance(this, \"FieldValuesForEdit\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"folder\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"folder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"file\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new files_1.File(this, \"file\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"versions\", {\n        /**\n         * Gets the collection of versions associated with this item\n         */\n        get: function () {\n            return new ItemVersions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        return new Promise(function (resolve, reject) {\n            var removeDependency = _this.addBatchDependency();\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n                var postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": listItemEntityType },\n                }, properties));\n                removeDependency();\n                return _this.postCore({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then(function (data) {\n                    resolve({\n                        data: data,\n                        item: _this,\n                    });\n                });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Item.prototype.recycle = function () {\n        return this.clone(Item, \"recycle\").postCore();\n    };\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    Item.prototype.getWopiFrameUrl = function (action) {\n        if (action === void 0) { action = 0; }\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\n        i._query.add(\"@action\", action);\n        return i.postCore().then(function (data) {\n            // handle verbose mode\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\n                return data.GetWOPIFrameUrl;\n            }\n            return data;\n        });\n    };\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\n    };\n    return Item;\n}(sharepointqueryableshareable_1.SharePointQueryableShareableItem));\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nvar PagedItemCollection = /** @class */ (function () {\n    function PagedItemCollection(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\n        /**\n         * If true there are more results available in the set, otherwise there are not\n         */\n        get: function () {\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    PagedItemCollection.prototype.getNext = function () {\n        if (this.hasNext) {\n            var items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(function (r) { return r(null); });\n    };\n    return PagedItemCollection;\n}());\nexports.PagedItemCollection = PagedItemCollection;\n/**\n * Describes a collection of Version objects\n *\n */\nvar ItemVersions = /** @class */ (function (_super) {\n    __extends(ItemVersions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function ItemVersions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    ItemVersions.prototype.getById = function (versionId) {\n        var v = new ItemVersion(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    return ItemVersions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.ItemVersions = ItemVersions;\n/**\n * Describes a single Version instance\n *\n */\nvar ItemVersion = /** @class */ (function (_super) {\n    __extends(ItemVersion, _super);\n    function ItemVersion() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    ItemVersion.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ItemVersion;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.ItemVersion = ItemVersion;\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\n    __extends(PagedItemCollectionParser, _super);\n    function PagedItemCollectionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PagedItemCollectionParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                r.json().then(function (json) {\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\n                });\n            }\n        });\n    };\n    return PagedItemCollectionParser;\n}(core_1.ODataParserBase));\nvar ItemUpdatedParser = /** @class */ (function (_super) {\n    __extends(ItemUpdatedParser, _super);\n    function ItemUpdatedParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ItemUpdatedParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    };\n    return ItemUpdatedParser;\n}(core_1.ODataParserBase));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/items.js\n// module id = 12\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar collections_1 = require(\"../collections/collections\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar logging_1 = require(\"./logging\");\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nvar PnPClientStorageWrapper = /** @class */ (function () {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? -1 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n        // if the cache timeout is enabled call the handler\n        // this will clear any expired items and set the timeout function\n        if (pnplibconfig_1.RuntimeConfig.enableCacheExpiration) {\n            logging_1.Logger.write(\"Enabling cache expiration.\", logging_1.LogLevel.Info);\n            this.cacheExpirationHandler();\n        }\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    PnPClientStorageWrapper.prototype.get = function (key) {\n        if (!this.enabled) {\n            return null;\n        }\n        var o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        var persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            logging_1.Logger.write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", logging_1.LogLevel.Info);\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    };\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    };\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    PnPClientStorageWrapper.prototype.delete = function (key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    };\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\n        var _this = this;\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise(function (resolve) {\n            var o = _this.get(key);\n            if (o == null) {\n                getter().then(function (d) {\n                    _this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    };\n    /**\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\n     */\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (!_this.enabled) {\n                resolve();\n            }\n            try {\n                for (var i = 0; i < _this.store.length; i++) {\n                    var key = _this.store.key(i);\n                    // test the stored item to see if we stored it\n                    if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\n                        // get those items as get will delete from cache if they are expired\n                        _this.get(key);\n                    }\n                }\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    PnPClientStorageWrapper.prototype.test = function () {\n        var str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Creates the persistable to store\n     */\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\n        if (typeof expire === \"undefined\") {\n            // ensure we are by default inline with the global library setting\n            var defaultTimeout = pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = util_1.Util.dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\n    };\n    /**\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\n     */\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\n        var _this = this;\n        logging_1.Logger.write(\"Called cache expiration handler.\", logging_1.LogLevel.Verbose);\n        this.deleteExpired().then(function (_) {\n            // call ourself in the future\n            setTimeout(util_1.Util.getCtxCallback(_this, _this.cacheExpirationHandler), pnplibconfig_1.RuntimeConfig.cacheExpirationIntervalMilliseconds);\n        }).catch(function (e) {\n            // we've got some error - so just stop the loop and report the error\n            logging_1.Logger.log({\n                data: e,\n                level: logging_1.LogLevel.Error,\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\n            });\n        });\n    };\n    return PnPClientStorageWrapper;\n}());\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nvar MemoryStorage = /** @class */ (function () {\n    function MemoryStorage(_store) {\n        if (_store === void 0) { _store = new collections_1.Dictionary(); }\n        this._store = _store;\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () {\n            return this._store.count();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.clear = function () {\n        this._store.clear();\n    };\n    MemoryStorage.prototype.getItem = function (key) {\n        return this._store.get(key);\n    };\n    MemoryStorage.prototype.key = function (index) {\n        return this._store.getKeys()[index];\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        this._store.remove(key);\n    };\n    MemoryStorage.prototype.setItem = function (key, data) {\n        this._store.add(key, data);\n    };\n    return MemoryStorage;\n}());\n/**\n * A class that will establish wrappers for both local and session storage\n */\nvar PnPClientStorage = /** @class */ (function () {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    function PnPClientStorage(_local, _session) {\n        if (_local === void 0) { _local = null; }\n        if (_session === void 0) { _session = null; }\n        this._local = _local;\n        this._session = _session;\n    }\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\n        /**\n         * Provides access to the local storage of the browser\n         */\n        get: function () {\n            if (this._local === null) {\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n            }\n            return this._local;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\n        /**\n         * Provides access to the session storage of the browser\n         */\n        get: function () {\n            if (this._session === null) {\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n            }\n            return this._session;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PnPClientStorage;\n}());\nexports.PnPClientStorage = PnPClientStorage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/utils/storage.js\n// module id = 13\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar logging_1 = require(\"../utils/logging\");\nvar ODataParserBase = /** @class */ (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\n                    r.text()\n                        .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\n                        .then(function (json) { return resolve(_this.parseODataJSON(json)); })\n                        .catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/odata/core.js\n// module id = 14\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar items_1 = require(\"./items\");\nvar views_1 = require(\"./views\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar fields_1 = require(\"./fields\");\nvar forms_1 = require(\"./forms\");\nvar subscriptions_1 = require(\"./subscriptions\");\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar sharepointqueryablesecurable_1 = require(\"./sharepointqueryablesecurable\");\nvar util_1 = require(\"../utils/util\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar folders_1 = require(\"./folders\");\n/**\n * Describes a collection of List objects\n *\n */\nvar Lists = /** @class */ (function (_super) {\n    __extends(Lists, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Lists(baseUrl, path) {\n        if (path === void 0) { path = \"lists\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    Lists.prototype.getByTitle = function (title) {\n        return new List(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    Lists.prototype.getById = function (id) {\n        var list = new List(this);\n        list.concat(\"('\" + id + \"')\");\n        return list;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var addSettings = util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings);\n        return this.postCore({ body: JSON.stringify(addSettings) }).then(function (data) {\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\n        });\n    };\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise(function (resolve, reject) {\n            var addOrUpdateSettings = util_1.Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\n            list.get().then(function (_) {\n                list.update(addOrUpdateSettings).then(function (d) {\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            }).catch(function (_) {\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            });\n        });\n    };\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\n        return this.clone(Lists, \"ensuresiteassetslibrary\").postCore().then(function (json) {\n            return new List(odata_1.spExtractODataId(json));\n        });\n    };\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    Lists.prototype.ensureSitePagesLibrary = function () {\n        return this.clone(Lists, \"ensuresitepageslibrary\").postCore().then(function (json) {\n            return new List(odata_1.spExtractODataId(json));\n        });\n    };\n    return Lists;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nvar List = /** @class */ (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(List.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types in this list\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"items\", {\n        /**\n         * Gets the items in this list\n         *\n         */\n        get: function () {\n            return new items_1.Items(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"views\", {\n        /**\n         * Gets the views in this list\n         *\n         */\n        get: function () {\n            return new views_1.Views(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"fields\", {\n        /**\n         * Gets the fields in this list\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"forms\", {\n        /**\n         * Gets the forms in this list\n         *\n         */\n        get: function () {\n            return new forms_1.Forms(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"defaultView\", {\n        /**\n         * Gets the default view of this list\n         *\n         */\n        get: function () {\n            return new views_1.View(this, \"DefaultView\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this list\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\n        /**\n         * Gets the event receivers attached to this list\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"EventReceivers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"relatedFields\", {\n        /**\n         * Gets the related fields of this list\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"getRelatedFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\n        /**\n         * Gets the IRM settings for this list\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"InformationRightsManagementSettings\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"subscriptions\", {\n        /**\n         * Gets the webhook subscriptions of this list\n         *\n         */\n        get: function () {\n            return new subscriptions_1.Subscriptions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the list\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    List.prototype.getView = function (viewId) {\n        return new views_1.View(this, \"getView('\" + viewId + \"')\");\n    };\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    List.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retList = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    List.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    List.prototype.getChanges = function (query) {\n        return this.clone(List, \"getchanges\").postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\n        });\n    };\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    List.prototype.getItemsByCAMLQuery = function (query) {\n        var expands = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            expands[_i - 1] = arguments[_i];\n        }\n        var q = this.clone(List, \"getitems\");\n        return q.expand.apply(q, expands).postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\n        });\n    };\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    List.prototype.getListItemChangesSinceToken = function (query) {\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\n        }, { parse: function (r) { return r.text(); } });\n    };\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    List.prototype.recycle = function () {\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Renders list data based on the view xml provided\n     */\n    List.prototype.renderListData = function (viewXml) {\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.postCore().then(function (data) {\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return JSON.parse(data.RenderListData);\n            }\n            return JSON.parse(data);\n        });\n    };\n    /**\n     * Returns the data for the specified query view\n     *\n     * @param parameters The parameters to be used to render list data as JSON string.\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\n     */\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\n        if (overrideParameters === void 0) { overrideParameters = null; }\n        var postBody = {\n            overrideParameters: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.RenderListDataOverrideParameters\" },\n            }, overrideParameters),\n            parameters: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.RenderListDataParameters\" },\n            }, parameters),\n        };\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\n            body: JSON.stringify(postBody),\n        });\n    };\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    List.prototype.reserveListItemId = function () {\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\n     *\n     */\n    List.prototype.getListItemEntityTypeFullName = function () {\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\n    };\n    return List;\n}(sharepointqueryablesecurable_1.SharePointQueryableSecurable));\nexports.List = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/lists.js\n// module id = 15\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar webs_1 = require(\"./webs\");\nvar odata_1 = require(\"./odata\");\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar sharepointqueryablesecurable_1 = require(\"./sharepointqueryablesecurable\");\nvar types_1 = require(\"./types\");\n/**\n * Internal helper class used to augment classes to include sharing functionality\n */\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\n    __extends(SharePointQueryableShareable, _super);\n    function SharePointQueryableShareable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a sharing link for the supplied\n     *\n     * @param kind The kind of link to share\n     * @param expiration The optional expiration for this link\n     */\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\n        if (expiration === void 0) { expiration = null; }\n        // date needs to be an ISO string or null\n        var expString = expiration !== null ? expiration.toISOString() : null;\n        // clone using the factory and send the request\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postAsCore({\n            body: JSON.stringify({\n                request: {\n                    createLink: true,\n                    emailData: null,\n                    settings: {\n                        expiration: expString,\n                        linkKind: kind,\n                    },\n                },\n            }),\n        });\n    };\n    /**\n     * Shares this instance with the supplied users\n     *\n     * @param loginNames Resolved login names to share\n     * @param role The role\n     * @param requireSignin True to require the user is authenticated, otherwise false\n     * @param propagateAcl True to apply this share to all children\n     * @param emailData If supplied an email will be sent with the indicated properties\n     */\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\n        var _this = this;\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        // handle the multiple input types\n        if (!Array.isArray(loginNames)) {\n            loginNames = [loginNames];\n        }\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\n        var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n        // start by looking up the role definition id we need to set the roleValue\n        return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\n            if (!Array.isArray(def) || def.length < 1) {\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\n            }\n            var postBody = {\n                includeAnonymousLinkInEmail: requireSignin,\n                peoplePickerInput: userStr,\n                propagateAcl: propagateAcl,\n                roleValue: \"role:\" + def[0].Id,\n                useSimplifiedRoles: true,\n            };\n            if (typeof emailData !== \"undefined\") {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: emailData.body,\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\n                    sendEmail: true,\n                });\n            }\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postAsCore({\n                body: JSON.stringify(postBody),\n            });\n        });\n    };\n    /**\n     * Shares an object based on the supplied options\n     *\n     * @param options The set of options to send to the ShareObject method\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\n     */\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\n        var _this = this;\n        if (bypass === void 0) { bypass = false; }\n        if (bypass) {\n            // if the bypass flag is set send the supplied parameters directly to the service\n            return this.sendShareObjectRequest(options);\n        }\n        // extend our options with some defaults\n        options = util_1.Util.extend(options, {\n            group: null,\n            includeAnonymousLinkInEmail: false,\n            propagateAcl: false,\n            useSimplifiedRoles: true,\n        }, true);\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\n            // handle the multiple input types\n            if (!Array.isArray(options.loginNames)) {\n                options.loginNames = [options.loginNames];\n            }\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\n            var postBody = {\n                peoplePickerInput: userStr,\n                roleValue: roleValue,\n                url: options.url,\n            };\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: options.emailData.body,\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\n                    sendEmail: true,\n                });\n            }\n            return _this.sendShareObjectRequest(postBody);\n        });\n    };\n    /**\n     * Calls the web's UnshareObject method\n     *\n     * @param url The url of the object to unshare\n     */\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postAsCore({\n            body: JSON.stringify({\n                url: url,\n            }),\n        });\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postAsCore({\n            body: JSON.stringify({\n                recipients: recipients,\n            }),\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postAsCore({\n            body: JSON.stringify({\n                request: request,\n            }),\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postAsCore({\n            body: JSON.stringify({\n                useSimplifiedRoles: useSimplifiedRoles,\n            }),\n        });\n    };\n    /**\n     * Unshares this object\n     */\n    SharePointQueryableShareable.prototype.unshareObject = function () {\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postAsCore();\n    };\n    /**\n     * Deletes a link by type\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\n            body: JSON.stringify({ linkKind: kind }),\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\n        });\n    };\n    /**\n     * Calculates the roleValue string used in the sharing query\n     *\n     * @param role The Sharing Role\n     * @param group The Group type\n     */\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\n        // we will give group precedence, because we had to make a choice\n        if (typeof group !== \"undefined\" && group !== null) {\n            switch (group) {\n                case types_1.RoleType.Contributor:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedMemberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                case types_1.RoleType.Reader:\n                case types_1.RoleType.Guest:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedVisitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                default:\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\n            }\n        }\n        else {\n            var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n            return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\n                if (def.length < 1) {\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\n                }\n                return \"role: \" + def[0].Id;\n            });\n        }\n    };\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\n        return Promise.resolve(webs_1.Web.fromUrl(candidate, \"/_api/SP.Web.ShareObject\"));\n    };\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\n                body: JSON.stringify(options),\n            });\n        });\n    };\n    return SharePointQueryableShareable;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.SharePointQueryableShareable = SharePointQueryableShareable;\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\n    __extends(SharePointQueryableShareableWeb, _super);\n    function SharePointQueryableShareableWeb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this web with the supplied users\n     * @param loginNames The resolved login names to share\n     * @param role The role to share this web\n     * @param emailData Optional email data\n     */\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\n        var _this = this;\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        var dependency = this.addBatchDependency();\n        return webs_1.Web.fromUrl(this.toUrl(), \"/_api/web/url\").get().then(function (url) {\n            dependency();\n            return _this.shareObject(util_1.Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\n        });\n    };\n    /**\n     * Provides direct access to the static web.ShareObject method\n     *\n     * @param url The url to share\n     * @param loginNames Resolved loginnames string[] of a single login name string\n     * @param roleValue Role value\n     * @param emailData Optional email data\n     * @param groupId Optional group id\n     * @param propagateAcl\n     * @param includeAnonymousLinkInEmail\n     * @param useSimplifiedRoles\n     */\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(SharePointQueryableShareable, null).shareObject({\n            emailData: emailData,\n            group: group,\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\n            loginNames: loginNames,\n            propagateAcl: propagateAcl,\n            role: role,\n            url: url,\n            useSimplifiedRoles: useSimplifiedRoles,\n        });\n    };\n    /**\n     * Supplies a method to pass any set of arguments to ShareObject\n     *\n     * @param options The set of options to send to ShareObject\n     */\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\n    };\n    /**\n     * Unshares the object\n     *\n     * @param url The url of the object to stop sharing\n     */\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\n    };\n    return SharePointQueryableShareableWeb;\n}(sharepointqueryablesecurable_1.SharePointQueryableSecurable));\nexports.SharePointQueryableShareableWeb = SharePointQueryableShareableWeb;\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\n    __extends(SharePointQueryableShareableItem, _super);\n    function SharePointQueryableShareableItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing for this item\n     *\n     * @param kind The type of link to share\n     * @param expiration The optional expiration date\n     */\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\n    };\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\n    };\n    /**\n     * Unshare this item\n     */\n    SharePointQueryableShareableItem.prototype.unshare = function () {\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\n    };\n    /**\n     * Deletes a sharing link by kind\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\n    };\n    return SharePointQueryableShareableItem;\n}(sharepointqueryablesecurable_1.SharePointQueryableSecurable));\nexports.SharePointQueryableShareableItem = SharePointQueryableShareableItem;\nvar FileFolderShared = /** @class */ (function (_super) {\n    __extends(FileFolderShared, _super);\n    function FileFolderShared() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing\n     *\n     * @param kind The kind of link to get\n     * @param expiration Optional, an expiration for this link\n     */\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getShareLink(kind, expiration);\n        });\n    };\n    /**\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\n         *\n         * @param recipients The array of Entities for which Permissions need to be checked.\n         */\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.checkPermissions(recipients);\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    FileFolderShared.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getSharingInformation(request);\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\n        });\n    };\n    /**\n     * Unshare this item\n     */\n    FileFolderShared.prototype.unshare = function () {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareObject();\n        });\n    };\n    /**\n     * Deletes a sharing link by the kind of link\n     *\n     * @param kind The kind of link to be deleted.\n     */\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.deleteLinkByKind(kind);\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId The share id to delete\n     */\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareLink(kind, shareId);\n        });\n    };\n    /**\n     * For files and folders we need to use the associated item end point\n     */\n    FileFolderShared.prototype.getShareable = function () {\n        var _this = this;\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\n            var shareable = new SharePointQueryableShareable(odata_1.spGetEntityUrl(d));\n            // we need to handle batching\n            if (_this.hasBatch) {\n                shareable = shareable.inBatch(_this.batch);\n            }\n            return shareable;\n        });\n    };\n    return FileFolderShared;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.FileFolderShared = FileFolderShared;\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\n    __extends(SharePointQueryableShareableFile, _super);\n    function SharePointQueryableShareableFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\n        });\n    };\n    return SharePointQueryableShareableFile;\n}(FileFolderShared));\nexports.SharePointQueryableShareableFile = SharePointQueryableShareableFile;\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\n    __extends(SharePointQueryableShareableFolder, _super);\n    function SharePointQueryableShareableFolder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = false; }\n        if (shareEverything === void 0) { shareEverything = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\n        });\n    };\n    return SharePointQueryableShareableFolder;\n}(FileFolderShared));\nexports.SharePointQueryableShareableFolder = SharePointQueryableShareableFolder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/sharepointqueryableshareable.js\n// module id = 16\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar ChoiceFieldFormatType;\n(function (ChoiceFieldFormatType) {\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\n})(ChoiceFieldFormatType = exports.ChoiceFieldFormatType || (exports.ChoiceFieldFormatType = {}));\nvar PermissionKind;\n(function (PermissionKind) {\n    /**\n     * Has no permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\n    /**\n     * View items in lists, documents in document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\n    /**\n     * Add items to lists, documents to document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\n    /**\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\n     * in documents, and customize Web Part Pages in document libraries.\n     */\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\n    /**\n     * Delete items from a list, documents from a document library, and Web discussion\n     * comments in documents.\n     */\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\n    /**\n     * Approve a minor version of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\n    /**\n     * View the source of documents with server-side file handlers.\n     */\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\n    /**\n     * View past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\n    /**\n     * Delete past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\n    /**\n     * Discard or check in a document which is checked out to another user.\n     */\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\n    /**\n     * Create, change, and delete personal views of lists.\n     */\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\n    /**\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\n     */\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\n    /**\n     * View forms, views, and application pages, and enumerate lists.\n     */\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\n    /**\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\n     * The list permissions in the site do not change.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\n    /**\n     * Allow users to open a Site, list, or folder to access items inside that container.\n     */\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\n    /**\n     * View pages in a Site.\n     */\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\n    /**\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\n     * a Windows SharePoint Services compatible editor.\n     */\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\n    /**\n     * Apply a theme or borders to the entire Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\n    /**\n     * Apply a style sheet (.css file) to the Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\n    /**\n     * View reports on Site usage.\n     */\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\n    /**\n     * Create a Site using Self-Service Site Creation.\n     */\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\n    /**\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\n     */\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\n    /**\n     * Create a group of users that can be used anywhere within the site collection.\n     */\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\n    /**\n     * Create and change permission levels on the Site and assign permissions to users\n     * and groups.\n     */\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\n    /**\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\n     * and WebDAV interfaces.\n     */\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\n    /**\n     * View information about users of the Site.\n     */\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\n    /**\n     * Add or remove personal Web Parts on a Web Part Page.\n     */\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\n    /**\n     * Update Web Parts to display personalized information.\n     */\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\n    /**\n     * Grant the ability to perform all administration tasks for the Site as well as\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\n     * through the object model or through the user interface (UI). When granted on the\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\n     * site collection scoped Features through the object model. To browse to the Site\n     * Collection Features page and activate or deactivate Site Collection scoped Features\n     * through the UI, you must be a Site Collection administrator.\n     */\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\n    /**\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\n    /**\n     * Use features that launch client applications. Otherwise, users must work on documents\n     * locally and upload changes.\n     */\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\n    /**\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\n     */\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\n    /**\n     * Manage alerts for all users of the Site.\n     */\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\n    /**\n     * Create e-mail alerts.\n     */\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\n    /**\n     * Allows a user to change his or her user information, such as adding a picture.\n     */\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\n    /**\n     * Enumerate permissions on Site, list, folder, document, or list item.\n     */\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\n    /**\n     * Has all permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\n})(PermissionKind = exports.PermissionKind || (exports.PermissionKind = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar PrincipalSource;\n(function (PrincipalSource) {\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\n})(PrincipalSource = exports.PrincipalSource || (exports.PrincipalSource = {}));\nvar RoleType;\n(function (RoleType) {\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\n})(RoleType = exports.RoleType || (exports.RoleType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\nvar SharingLinkKind;\n(function (SharingLinkKind) {\n    /**\n     * Uninitialized link\n     */\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    /**\n     * Direct link to the object being shared\n     */\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\n    /**\n     * Organization-shareable link to the object being shared with view permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\n    /**\n     * Organization-shareable link to the object being shared with edit permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\n    /**\n     * View only anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\n    /**\n     * Read/Write anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\n    /**\n     * Flexible sharing Link where properties can change without affecting link URL\n     */\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\n})(SharingLinkKind = exports.SharingLinkKind || (exports.SharingLinkKind = {}));\n/**\n * Indicates the role of the sharing link\n */\nvar SharingRole;\n(function (SharingRole) {\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\n})(SharingRole = exports.SharingRole || (exports.SharingRole = {}));\nvar SharingOperationStatusCode;\n(function (SharingOperationStatusCode) {\n    /**\n     * The share operation completed without errors.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\n    /**\n     * The share operation completed and generated requests for access.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\n    /**\n     * The share operation failed as there were no resolved users.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\n    /**\n     * The share operation failed due to insufficient permissions.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\n    /**\n     * The share operation failed when attempting a cross site share, which is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\n    /**\n     * The sharing operation failed due to an unknown error.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\n    /**\n     * The text you typed is too long. Please shorten it.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\n    /**\n     * The maximum number of unique scopes in the list has been exceeded.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\n    /**\n     * The share operation failed because a sharing capability is disabled in the site.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\n    /**\n     * The specified object for the share operation is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\n    /**\n     * A SharePoint group cannot contain another SharePoint group.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\n})(SharingOperationStatusCode = exports.SharingOperationStatusCode || (exports.SharingOperationStatusCode = {}));\nvar SPSharedObjectType;\n(function (SPSharedObjectType) {\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\n})(SPSharedObjectType = exports.SPSharedObjectType || (exports.SPSharedObjectType = {}));\nvar SharingDomainRestrictionMode;\n(function (SharingDomainRestrictionMode) {\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\n})(SharingDomainRestrictionMode = exports.SharingDomainRestrictionMode || (exports.SharingDomainRestrictionMode = {}));\nvar RenderListDataOptions;\n(function (RenderListDataOptions) {\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\n})(RenderListDataOptions = exports.RenderListDataOptions || (exports.RenderListDataOptions = {}));\nvar FieldUserSelectionMode;\n(function (FieldUserSelectionMode) {\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\n})(FieldUserSelectionMode = exports.FieldUserSelectionMode || (exports.FieldUserSelectionMode = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/types.js\n// module id = 17\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar sharepointqueryableshareable_1 = require(\"./sharepointqueryableshareable\");\nvar files_1 = require(\"./files\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"./odata\");\nvar items_1 = require(\"./items\");\n/**\n * Describes a collection of Folder objects\n *\n */\nvar Folders = /** @class */ (function (_super) {\n    __extends(Folders, _super);\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Folders(baseUrl, path) {\n        if (path === void 0) { path = \"folders\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    Folders.prototype.getByName = function (name) {\n        var f = new Folder(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    Folders.prototype.add = function (url) {\n        var _this = this;\n        return this.clone(Folders, \"add('\" + url + \"')\").postCore().then(function (response) {\n            return {\n                data: response,\n                folder: _this.getByName(url),\n            };\n        });\n    };\n    return Folders;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nvar Folder = /** @class */ (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\n        /**\n         * Specifies the sequence in which content types are displayed.\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"contentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"files\", {\n        /**\n         * Gets this folder's files\n         *\n         */\n        get: function () {\n            return new files_1.Files(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"folders\", {\n        /**\n         * Gets this folder's sub folders\n         *\n         */\n        get: function () {\n            return new Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\n        /**\n         * Gets this folder's list item field values\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\n        /**\n         * Gets the parent folder, if available\n         *\n         */\n        get: function () {\n            return new Folder(this, \"parentFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"properties\", {\n        /**\n         * Gets this folder's properties\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableInstance(this, \"properties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\n        /**\n         * Gets this folder's server relative url\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryable(this, \"serverRelativeUrl\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\n        /**\n         * Gets a value that specifies the content type order.\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Folder\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                folder: _this,\n            };\n        });\n    };\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Folder.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(Folder, null).postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Folder.prototype.recycle = function () {\n        return this.clone(Folder, \"recycle\").postCore();\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    Folder.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.spGetEntityUrl(d)), d);\n        });\n    };\n    return Folder;\n}(sharepointqueryableshareable_1.SharePointQueryableShareableFolder));\nexports.Folder = Folder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/folders.js\n// module id = 18\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar utils_1 = require(\"../net/utils\");\nvar parsers_1 = require(\"../odata/parsers\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar pipeline_1 = require(\"../request/pipeline\");\nvar ODataQueryable = /** @class */ (function () {\n    function ODataQueryable() {\n    }\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    ODataQueryable.prototype.concat = function (pathPart) {\n        this._url += pathPart;\n        return this;\n    };\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    ODataQueryable.prototype.append = function (pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    };\n    Object.defineProperty(ODataQueryable.prototype, \"parentUrl\", {\n        /**\n         * Gets the parent url used when creating this instance\n         *\n         */\n        get: function () {\n            return this._parentUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ODataQueryable.prototype, \"query\", {\n        /**\n         * Provides access to the query builder for this url\n         *\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets custom options for current object and all derived objects accessible via chaining\n     *\n     * @param options custom options\n     */\n    ODataQueryable.prototype.configure = function (options) {\n        utils_1.mergeOptions(this._options, options);\n        return this;\n    };\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    ODataQueryable.prototype.usingCaching = function (options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    };\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    ODataQueryable.prototype.toUrl = function () {\n        return this._url;\n    };\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    ODataQueryable.prototype.get = function (parser, options) {\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        if (options === void 0) { options = {}; }\n        return this.toRequestContext(\"GET\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    ODataQueryable.prototype.getAs = function (parser, options) {\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        if (options === void 0) { options = {}; }\n        return this.toRequestContext(\"GET\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    ODataQueryable.prototype.postCore = function (options, parser) {\n        if (options === void 0) { options = {}; }\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    ODataQueryable.prototype.postAsCore = function (options, parser) {\n        if (options === void 0) { options = {}; }\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    ODataQueryable.prototype.patchCore = function (options, parser) {\n        if (options === void 0) { options = {}; }\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"PATCH\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\n        if (options === void 0) { options = {}; }\n        if (parser === void 0) { parser = new parsers_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"DELETE\", options, parser, pipeline_1.PipelineMethods.default).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    return ODataQueryable;\n}());\nexports.ODataQueryable = ODataQueryable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/odata/queryable.js\n// module id = 19\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = require(\"../odata/caching\");\nvar logging_1 = require(\"../utils/logging\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult(context) {\n    logging_1.Logger.log({\n        data: context.result,\n        level: logging_1.LogLevel.Verbose,\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\n    });\n    return Promise.resolve(context.result);\n}\n/**\n * Sets the result on the context\n */\nfunction setResult(context, value) {\n    return new Promise(function (resolve) {\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\nexports.setResult = setResult;\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next(c) {\n    if (c.pipeline.length < 1) {\n        return Promise.resolve(c);\n    }\n    return c.pipeline.shift()(c);\n}\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nfunction pipe(context) {\n    return next(context)\n        .then(function (ctx) { return returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\n        };\n    };\n}\nexports.requestPipelineMethod = requestPipelineMethod;\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = /** @class */ (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        // handle the case where a parser needs to take special actions with a cached result (such as getAs)\n                        if (context.parser.hasOwnProperty(\"hydrate\")) {\n                            data = context.parser.hydrate(data);\n                        }\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", logging_1.LogLevel.Info);\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = context.clientFactory();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            if (context.isBatched) {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\n                });\n            }\n            else {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\n                });\n            }\n            resolve(context);\n        });\n    };\n    Object.defineProperty(PipelineMethods, \"default\", {\n        get: function () {\n            return [\n                PipelineMethods.logStart,\n                PipelineMethods.caching,\n                PipelineMethods.send,\n                PipelineMethods.logEnd,\n            ];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logStart\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"caching\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"send\", null);\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logEnd\", null);\n    return PipelineMethods;\n}());\nexports.PipelineMethods = PipelineMethods;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/request/pipeline.js\n// module id = 20\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = require(\"./digestcache\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar utils_1 = require(\"./utils\");\nvar HttpClient = /** @class */ (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.spFetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        utils_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.spHeaders);\n        // second we add the local options so we can overwrite the globals\n        utils_1.mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:3.0.6\");\n        }\n        if (!headers.has(\"User-Agent\")) {\n            // this marks the requests for understanding by the service\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/3.0.6\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            // if we have either a request digest or an authorization header we don't need a digest\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        utils_1.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // Check if request was throttled - http status code 429\n                // Check if request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // grab our current delay\n                var delay = ctx.delay;\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/net/httpclient.js\n// module id = 21\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nvar RoleAssignments = /** @class */ (function (_super) {\n    __extends(RoleAssignments, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role assignments collection\n     */\n    function RoleAssignments(baseUrl, path) {\n        if (path === void 0) { path = \"roleassignments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection\n     *\n     * @param principalId The id of the user or group to assign permissions to\n     * @param roleDefId The id of the role definition that defines the permissions to assign\n     *\n     */\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\n    };\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The id of the user or group in the role assignment\n     * @param roleDefId The id of the role definition in the role assignment\n     *\n     */\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\n    };\n    /**\n     * Gets the role assignment associated with the specified principal id from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    RoleAssignments.prototype.getById = function (id) {\n        var ra = new RoleAssignment(this);\n        ra.concat(\"(\" + id + \")\");\n        return ra;\n    };\n    return RoleAssignments;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.RoleAssignments = RoleAssignments;\n/**\n * Describes a role assignment\n *\n */\nvar RoleAssignment = /** @class */ (function (_super) {\n    __extends(RoleAssignment, _super);\n    function RoleAssignment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\n        /**\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\n        /**\n         * Gets the role definition bindings for this role assignment\n         *\n         */\n        get: function () {\n            return new RoleDefinitionBindings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Deletes this role assignment\n     *\n     */\n    RoleAssignment.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleAssignment;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.RoleAssignment = RoleAssignment;\n/**\n * Describes a collection of role definitions\n *\n */\nvar RoleDefinitions = /** @class */ (function (_super) {\n    __extends(RoleDefinitions, _super);\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definitions collection\n     *\n     */\n    function RoleDefinitions(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the role definition with the specified id from the collection\n     *\n     * @param id The id of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getById = function (id) {\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets the role definition with the specified name\n     *\n     * @param name The name of the role definition\n     *\n     */\n    RoleDefinitions.prototype.getByName = function (name) {\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n    };\n    /**\n     * Gets the role definition with the specified role type\n     *\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\n     *\n     */\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n    };\n    /**\n     * Creates a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                definition: _this.getById(data.Id),\n            };\n        });\n    };\n    return RoleDefinitions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.RoleDefinitions = RoleDefinitions;\n/**\n * Describes a role definition\n *\n */\nvar RoleDefinition = /** @class */ (function (_super) {\n    __extends(RoleDefinition, _super);\n    function RoleDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this role definition with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the role definition\n     */\n    /* tslint:disable no-string-literal */\n    RoleDefinition.prototype.update = function (properties) {\n        var _this = this;\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retDef = _this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\n                retDef = parent_1.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Deletes this role definition\n     *\n     */\n    RoleDefinition.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleDefinition;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.RoleDefinition = RoleDefinition;\n/**\n * Describes the role definitons bound to a role assignment object\n *\n */\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\n    __extends(RoleDefinitionBindings, _super);\n    /**\n     * Creates a new instance of the RoleDefinitionBindings class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definition bindings collection\n     */\n    function RoleDefinitionBindings(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return RoleDefinitionBindings;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/roles.js\n// module id = 22\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar siteusers_1 = require(\"./siteusers\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site groups\n *\n */\nvar SiteGroups = /** @class */ (function (_super) {\n    __extends(SiteGroups, _super);\n    /**\n     * Creates a new instance of the SiteGroups class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this group collection\n     */\n    function SiteGroups(baseUrl, path) {\n        if (path === void 0) { path = \"sitegroups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The group properties object of property names and values to be set for the group\n     */\n    SiteGroups.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                group: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param groupName The name of the group to retrieve\n     */\n    SiteGroups.prototype.getByName = function (groupName) {\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n    };\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group to retrieve\n     */\n    SiteGroups.prototype.getById = function (id) {\n        var sg = new SiteGroup(this);\n        sg.concat(\"(\" + id + \")\");\n        return sg;\n    };\n    /**\n     * Removes the group with the specified member id from the collection\n     *\n     * @param id The id of the group to remove\n     */\n    SiteGroups.prototype.removeById = function (id) {\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\").postCore();\n    };\n    /**\n     * Removes the cross-site group with the specified name from the collection\n     *\n     * @param loginName The name of the group to remove\n     */\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\").postCore();\n    };\n    return SiteGroups;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nvar SiteGroup = /** @class */ (function (_super) {\n    __extends(SiteGroup, _super);\n    function SiteGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\n        /**\n         * Gets the users for this group\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this, \"users\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\n    */\n    /* tslint:disable no-string-literal */\n    SiteGroup.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.postCore({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retGroup = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    };\n    return SiteGroup;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.SiteGroup = SiteGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/sitegroups.js\n// module id = 23\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\n/**\n * Describes a collection of content types\n *\n */\nvar ContentTypes = /** @class */ (function (_super) {\n    __extends(ContentTypes, _super);\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content types collection\n     */\n    function ContentTypes(baseUrl, path) {\n        if (path === void 0) { path = \"contenttypes\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    ContentTypes.prototype.getById = function (id) {\n        var ct = new ContentType(this);\n        ct.concat(\"('\" + id + \"')\");\n        return ct;\n    };\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return this.clone(ContentTypes, \"addAvailableContentType\").postAsCore({ body: postBody }).then(function (data) {\n            return {\n                contentType: _this.getById(data.id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (group === void 0) { group = \"Custom Content Types\"; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return { contentType: _this.getById(data.id), data: data };\n        });\n    };\n    return ContentTypes;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nvar ContentType = /** @class */ (function (_super) {\n    __extends(ContentType, _super);\n    function ContentType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\n        /**\n         * Gets the column (also known as field) references in the content type.\n        */\n        get: function () {\n            return new FieldLinks(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"fields\", {\n        /**\n         * Gets a value that specifies the collection of fields for the content type.\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"fields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"parent\", {\n        /**\n         * Gets the parent content type of the content type.\n         */\n        get: function () {\n            return new ContentType(this, \"parent\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\n        /**\n         * Gets a value that specifies the collection of workflow associations for the content type.\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"workflowAssociations\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this content type\n     */\n    ContentType.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ContentType;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nvar FieldLinks = /** @class */ (function (_super) {\n    __extends(FieldLinks, _super);\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content type instance\n     */\n    function FieldLinks(baseUrl, path) {\n        if (path === void 0) { path = \"fieldlinks\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    FieldLinks.prototype.getById = function (id) {\n        var fl = new FieldLink(this);\n        fl.concat(\"(guid'\" + id + \"')\");\n        return fl;\n    };\n    return FieldLinks;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nvar FieldLink = /** @class */ (function (_super) {\n    __extends(FieldLink, _super);\n    function FieldLink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldLink;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.FieldLink = FieldLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/contenttypes.js\n// module id = 24\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar util_1 = require(\"../utils/util\");\nvar types_1 = require(\"./types\");\n/**\n * Describes a collection of Field objects\n *\n */\nvar Fields = /** @class */ (function (_super) {\n    __extends(Fields, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Fields(baseUrl, path) {\n        if (path === void 0) { path = \"fields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    Fields.prototype.getByTitle = function (title) {\n        return new Field(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list\n     */\n    Fields.prototype.getById = function (id) {\n        var f = new Field(this);\n        f.concat(\"('\" + id + \"')\");\n        return f;\n    };\n    /**\n     * Creates a field based on the specified schema\n     */\n    Fields.prototype.createFieldAsXml = function (xml) {\n        var _this = this;\n        var info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        return this.clone(Fields, \"createfieldasxml\").postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new field to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.add = function (title, fieldType, properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.clone(Fields, null).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addText = function (title, maxLength, properties) {\n        if (maxLength === void 0) { maxLength = 255; }\n        var props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\n        if (outputType === void 0) { outputType = types_1.FieldTypes.Text; }\n        var props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.DateTimeFieldFormatType.DateOnly; }\n        if (calendarType === void 0) { calendarType = types_1.CalendarType.Gregorian; }\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\n        var props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\n        var props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\n        var props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\n        if (numberOfLines === void 0) { numberOfLines = 6; }\n        if (richText === void 0) { richText = true; }\n        if (restrictedMode === void 0) { restrictedMode = false; }\n        if (appendOnly === void 0) { appendOnly = false; }\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\n        var props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.UrlFieldFormatType.Hyperlink; }\n        var props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a user field to the colleciton\n     *\n     * @param title The new field's title\n     * @param selectionMode The selection mode of the field\n     * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\n     * @param properties\n     */\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\n        var props = {\n            FieldTypeKind: 20,\n            SelectionMode: selectionMode,\n        };\n        return this.add(title, \"SP.FieldUser\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a SP.FieldLookup to the collection\n     *\n     * @param title The new field's title\n     * @param lookupListId The guid id of the list where the source of the lookup is found\n     * @param lookupFieldName The internal name of the field in the source list\n     * @param properties Set of additional properties to set on the new field\n     */\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            parameters: util_1.Util.extend({\n                FieldTypeKind: 7,\n                LookupFieldName: lookupFieldName,\n                LookupListId: lookupListId,\n                Title: title,\n                \"__metadata\": { \"type\": \"SP.FieldCreationInformation\" },\n            }, properties),\n        });\n        return this.clone(Fields, \"addfield\").postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldChoice to the collection\n     *\n     * @param title The field title.\n     * @param choices The choices for the field.\n     * @param format The display format of the available options for the field.\n     * @param fillIn Specifies whether the field allows fill-in values.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\n        if (format === void 0) { format = types_1.ChoiceFieldFormatType.Dropdown; }\n        var props = {\n            Choices: {\n                results: choices,\n            },\n            EditFormat: format,\n            FieldTypeKind: 6,\n            FillInChoice: fillIn,\n        };\n        return this.add(title, \"SP.FieldChoice\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiChoice to the collection\n     *\n     * @param title The field title.\n     * @param choices The choices for the field.\n     * @param fillIn Specifies whether the field allows fill-in values.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\n        var props = {\n            Choices: {\n                results: choices,\n            },\n            FieldTypeKind: 15,\n            FillInChoice: fillIn,\n        };\n        return this.add(title, \"SP.FieldMultiChoice\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldBoolean to the collection\n     *\n     * @param title The field title.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addBoolean = function (title, properties) {\n        var props = {\n            FieldTypeKind: 8,\n        };\n        return this.add(title, \"SP.Field\", util_1.Util.extend(props, properties));\n    };\n    return Fields;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nvar Field = /** @class */ (function (_super) {\n    __extends(Field, _super);\n    function Field() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    Field.prototype.update = function (properties, fieldType) {\n        var _this = this;\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                field: _this,\n            };\n        });\n    };\n    /**\n     * Delete this fields\n     *\n     */\n    Field.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    Field.prototype.setShowInDisplayForm = function (show) {\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\n    };\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    Field.prototype.setShowInEditForm = function (show) {\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\n    };\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    Field.prototype.setShowInNewForm = function (show) {\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\n    };\n    return Field;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Field = Field;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/fields.js\n// module id = 25\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a collection of user custom actions\n *\n */\nvar UserCustomActions = /** @class */ (function (_super) {\n    __extends(UserCustomActions, _super);\n    /**\n     * Creates a new instance of the UserCustomActions class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user custom actions collection\n     */\n    function UserCustomActions(baseUrl, path) {\n        if (path === void 0) { path = \"usercustomactions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns the user custom action with the specified id\n     *\n     * @param id The GUID id of the user custom action to retrieve\n     */\n    UserCustomActions.prototype.getById = function (id) {\n        var uca = new UserCustomAction(this);\n        uca.concat(\"('\" + id + \"')\");\n        return uca;\n    };\n    /**\n     * Creates a user custom action\n     *\n     * @param properties The information object of property names and values which define the new user custom action\n     *\n     */\n    UserCustomActions.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.postCore({ body: postBody }).then(function (data) {\n            return {\n                action: _this.getById(data.Id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Deletes all user custom actions in the collection\n     *\n     */\n    UserCustomActions.prototype.clear = function () {\n        return this.clone(UserCustomActions, \"clear\").postCore();\n    };\n    return UserCustomActions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.UserCustomActions = UserCustomActions;\n/**\n * Describes a single user custom action\n *\n */\nvar UserCustomAction = /** @class */ (function (_super) {\n    __extends(UserCustomAction, _super);\n    function UserCustomAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Updates this user custom action with the supplied properties\n    *\n    * @param properties An information object of property names and values to update for this user custom action\n    */\n    UserCustomAction.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                action: _this,\n                data: data,\n            };\n        });\n    };\n    /**\n    * Removes this user custom action\n    *\n    */\n    UserCustomAction.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return UserCustomAction;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.UserCustomAction = UserCustomAction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/usercustomactions.js\n// module id = 26\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\n/**\n * Represents a collection of navigation nodes\n *\n */\nvar NavigationNodes = /** @class */ (function (_super) {\n    __extends(NavigationNodes, _super);\n    function NavigationNodes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    NavigationNodes.prototype.getById = function (id) {\n        var node = new NavigationNode(this);\n        node.concat(\"(\" + id + \")\");\n        return node;\n    };\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    NavigationNodes.prototype.add = function (title, url, visible) {\n        var _this = this;\n        if (visible === void 0) { visible = true; }\n        var postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                node: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\n        var postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\n    };\n    return NavigationNodes;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.NavigationNodes = NavigationNodes;\n/**\n * Represents an instance of a navigation node\n *\n */\nvar NavigationNode = /** @class */ (function (_super) {\n    __extends(NavigationNode, _super);\n    function NavigationNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\n        /**\n         * Represents the child nodes of this node\n         */\n        get: function () {\n            return new NavigationNodes(this, \"Children\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Deletes this node and any child nodes\n     */\n    NavigationNode.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return NavigationNode;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nvar Navigation = /** @class */ (function (_super) {\n    __extends(Navigation, _super);\n    /**\n     * Creates a new instance of the Navigation class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of these navigation components\n     */\n    function Navigation(baseUrl, path) {\n        if (path === void 0) { path = \"navigation\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\n        /**\n         * Gets the quicklaunch navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"quicklaunch\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\n        /**\n         * Gets the top bar navigation nodes for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"topnavigationbar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Navigation;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.Navigation = Navigation;\n/**\n * Represents the top level navigation service\n */\nvar NavigationService = /** @class */ (function (_super) {\n    __extends(NavigationService, _super);\n    function NavigationService(path) {\n        if (path === void 0) { path = null; }\n        return _super.call(this, \"_api/navigation\", path) || this;\n    }\n    /**\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\n     *\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\n     * @param customProperties comma seperated list of custom properties to be returned.\n     */\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\n        if (depth === void 0) { depth = 10; }\n        if (mapProviderName === void 0) { mapProviderName = null; }\n        if (customProperties === void 0) { customProperties = null; }\n        return (new NavigationService(\"MenuState\")).postCore({\n            body: JSON.stringify({\n                customProperties: customProperties,\n                depth: depth,\n                mapProviderName: mapProviderName,\n                menuNodeKey: menuNodeKey,\n            }),\n        });\n    };\n    /**\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\n     *\n     * @param currentUrl A url representing the SiteMapNode\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\n     */\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\n        if (mapProviderName === void 0) { mapProviderName = null; }\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\n            body: JSON.stringify({\n                currentUrl: currentUrl,\n                mapProviderName: mapProviderName,\n            }),\n        });\n    };\n    return NavigationService;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.NavigationService = NavigationService;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/navigation.js\n// module id = 27\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar logging_1 = require(\"../utils/logging\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar utils_1 = require(\"../net/utils\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Manages a batch of OData operations\n */\nvar ODataBatch = /** @class */ (function () {\n    function ODataBatch(baseUrl, _batchId) {\n        if (_batchId === void 0) { _batchId = util_1.Util.getGUID(); }\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._dependencies = [];\n    }\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    ODataBatch.ParseResponse = function (body) {\n        return new Promise(function (resolve, reject) {\n            var responses = [];\n            var header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            var lines = body.split(\"\\n\");\n            var state = \"batch\";\n            var status;\n            var statusText;\n            for (var i = 0; i < lines.length; ++i) {\n                var line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        var parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    };\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\n        get: function () {\n            return this._batchId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    ODataBatch.prototype.add = function (url, method, options, parser) {\n        var info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        var p = new Promise(function (resolve, reject) {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    };\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    ODataBatch.prototype.addDependency = function () {\n        var resolver;\n        var promise = new Promise(function (resolve) {\n            resolver = resolve;\n        });\n        this._dependencies.push(promise);\n        return resolver;\n    };\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    ODataBatch.prototype.execute = function () {\n        var _this = this;\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added after the first set resolve\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\n    };\n    ODataBatch.prototype.executeImpl = function () {\n        var _this = this;\n        logging_1.Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(\"Resolving empty batch.\", logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        var client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\n            // build all the requests, send them, pipe results in order to parsers\n            var batchBody = [];\n            var currentChangeSetId = \"\";\n            for (var i = 0; i < _this._requests.length; i++) {\n                var reqInfo = _this._requests[i];\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n                    }\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n                }\n                // common batch part prefix\n                batchBody.push(\"Content-Type: application/http\\n\");\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n                var headers = new Headers();\n                // this is the url of the individual request within the batch\n                var url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    var method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                else {\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\n                }\n                // merge global config headers\n                utils_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.spHeaders);\n                // merge per-request headers\n                if (reqInfo.options) {\n                    utils_1.mergeHeaders(headers, reqInfo.options.headers);\n                }\n                // lastly we apply any default headers we need that may not exist\n                if (!headers.has(\"Accept\")) {\n                    headers.append(\"Accept\", \"application/json\");\n                }\n                if (!headers.has(\"Content-Type\")) {\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n                }\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:3.0.6\");\n                }\n                // write headers into batch body\n                headers.forEach(function (value, name) {\n                    batchBody.push(name + \": \" + value + \"\\n\");\n                });\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n                }\n            }\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(\"--batch_\" + _this._batchId + \"--\\n\");\n            var batchHeaders = {\n                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this._batchId,\n            };\n            var batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n                \"method\": \"POST\",\n            };\n            logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", logging_1.LogLevel.Info);\n            return client.fetch(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(function (r) { return r.text(); })\n                .then(ODataBatch.ParseResponse)\n                .then(function (responses) {\n                if (responses.length !== _this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce(function (chain, response, index) {\n                    var request = _this._requests[index];\n                    logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", logging_1.LogLevel.Verbose);\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\n                }, Promise.resolve());\n            });\n        });\n    };\n    return ODataBatch;\n}());\nexports.ODataBatch = ODataBatch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/batch.js\n// module id = 28\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    appname: \"SPS2018Demo\",\n    debug: true\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/config.js\n// module id = 29\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./utils/util\");\nvar storage_1 = require(\"./utils/storage\");\nvar configuration_1 = require(\"./configuration/configuration\");\nvar logging_1 = require(\"./utils/logging\");\nvar rest_1 = require(\"./sharepoint/rest\");\nvar pnplibconfig_1 = require(\"./configuration/pnplibconfig\");\nvar rest_2 = require(\"./graph/rest\");\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the SharePoint REST interface\n */\nexports.sp = new rest_1.SPRest();\n/**\n * Provides access to the Microsoft Graph REST interface\n */\nexports.graph = new rest_2.GraphRest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Export everything back to the top level so it can be properly bundled\n */\n__export(require(\"./exports/core\"));\n__export(require(\"./exports/graph\"));\n__export(require(\"./exports/net\"));\n__export(require(\"./exports/odata\"));\n__export(require(\"./exports/sp\"));\n// /**\n//  * Expose a subset of classes from the library for public consumption\n//  */\n// creating this class instead of directly assigning to default fixes issue #116\nvar Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Provides access to the Microsoft Graph REST interface\n     */\n    graph: exports.graph,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/pnp.js\n// module id = 30\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 31\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Makes requests using the fetch API\n */\nvar FetchClient = /** @class */ (function () {\n    function FetchClient() {\n    }\n    FetchClient.prototype.fetch = function (url, options) {\n        return global.fetch(url, options);\n    };\n    return FetchClient;\n}());\nexports.FetchClient = FetchClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/net/fetchclient.js\n// module id = 32\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Allows for the fluent construction of search queries\n */\nvar SearchQueryBuilder = /** @class */ (function () {\n    function SearchQueryBuilder(queryText, _query) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (_query === void 0) { _query = {}; }\n        this._query = _query;\n        if (typeof queryText === \"string\" && queryText.length > 0) {\n            this.extendQuery({ Querytext: queryText });\n        }\n    }\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (queryTemplate === void 0) { queryTemplate = {}; }\n        return new SearchQueryBuilder(queryText, queryTemplate);\n    };\n    SearchQueryBuilder.prototype.text = function (queryText) {\n        return this.extendQuery({ Querytext: queryText });\n    };\n    SearchQueryBuilder.prototype.template = function (template) {\n        return this.extendQuery({ QueryTemplate: template });\n    };\n    SearchQueryBuilder.prototype.sourceId = function (id) {\n        return this.extendQuery({ SourceId: id });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\n        get: function () {\n            return this.extendQuery({ EnableInterleaving: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\n        get: function () {\n            return this.extendQuery({ EnableStemming: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\n        get: function () {\n            return this.extendQuery({ TrimDuplicates: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.trimDuplicatesIncludeId = function (n) {\n        return this.extendQuery({ TrimDuplicatesIncludeId: n });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\n        get: function () {\n            return this.extendQuery({ EnableNicknames: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\n        get: function () {\n            return this.extendQuery({ EnableFQL: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\n        get: function () {\n            return this.extendQuery({ EnablePhonetic: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\n        get: function () {\n            return this.extendQuery({ BypassResultTypes: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\n        get: function () {\n            return this.extendQuery({ ProcessBestBets: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\n        get: function () {\n            return this.extendQuery({ EnableQueryRules: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\n        get: function () {\n            return this.extendQuery({ EnableSorting: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\n        get: function () {\n            return this.extendQuery({ GenerateBlockRankLog: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\n        return this.extendQuery({ RankingModelId: id });\n    };\n    SearchQueryBuilder.prototype.startRow = function (n) {\n        return this.extendQuery({ StartRow: n });\n    };\n    SearchQueryBuilder.prototype.rowLimit = function (n) {\n        return this.extendQuery({ RowLimit: n });\n    };\n    SearchQueryBuilder.prototype.rowsPerPage = function (n) {\n        return this.extendQuery({ RowsPerPage: n });\n    };\n    SearchQueryBuilder.prototype.selectProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SelectProperties: properties });\n    };\n    SearchQueryBuilder.prototype.culture = function (culture) {\n        return this.extendQuery({ Culture: culture });\n    };\n    SearchQueryBuilder.prototype.timeZoneId = function (id) {\n        return this.extendQuery({ TimeZoneId: id });\n    };\n    SearchQueryBuilder.prototype.refinementFilters = function () {\n        var filters = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filters[_i] = arguments[_i];\n        }\n        return this.extendQuery({ RefinementFilters: filters });\n    };\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\n        return this.extendQuery({ Refiners: refiners });\n    };\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\n        return this.extendQuery({ HiddenConstraints: constraints });\n    };\n    SearchQueryBuilder.prototype.sortList = function () {\n        var sorts = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sorts[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SortList: sorts });\n    };\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\n        return this.extendQuery({ Timeout: milliseconds });\n    };\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ HitHighlightedProperties: properties });\n    };\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\n        return this.extendQuery({ ClientType: clientType });\n    };\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\n        return this.extendQuery({ PersonalizationData: data });\n    };\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\n        return this.extendQuery({ ResultsUrl: url });\n    };\n    SearchQueryBuilder.prototype.queryTag = function () {\n        var tags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tags[_i] = arguments[_i];\n        }\n        return this.extendQuery({ QueryTag: tags });\n    };\n    SearchQueryBuilder.prototype.properties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ Properties: properties });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\n        get: function () {\n            return this.extendQuery({ ProcessPersonalFavorites: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\n    };\n    SearchQueryBuilder.prototype.reorderingRules = function () {\n        var rules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            rules[_i] = arguments[_i];\n        }\n        return this.extendQuery({ ReorderingRules: rules });\n    };\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\n        get: function () {\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\n        return this.extendQuery({ CollapseSpecification: spec });\n    };\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\n        return this.extendQuery({ UILanguage: lang });\n    };\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\n        return this.extendQuery({ DesiredSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\n        return this.extendQuery({ MaxSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\n        return this.extendQuery({ SummaryLength: len });\n    };\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\n        return this._query;\n    };\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\n        this._query = util_1.Util.extend(this._query, part);\n        return this;\n    };\n    return SearchQueryBuilder;\n}());\nexports.SearchQueryBuilder = SearchQueryBuilder;\n/**\n * Describes the search API\n *\n */\nvar Search = /** @class */ (function (_super) {\n    __extends(Search, _super);\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    function Search(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/postquery\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    Search.prototype.execute = function (query) {\n        var _this = this;\n        var formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = this.fixupProp(query.SortList);\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = this.fixupProp(query.Properties);\n        }\n        var postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\n    };\n    /**\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\n     *\n     * @param prop property to fixup for container struct\n     */\n    Search.prototype.fixupProp = function (prop) {\n        if (prop.hasOwnProperty(\"results\")) {\n            return prop;\n        }\n        return { results: prop };\n    };\n    return Search;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nvar SearchResults = /** @class */ (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\n        if (_raw === void 0) { _raw = null; }\n        if (_primary === void 0) { _primary = null; }\n        this._url = _url;\n        this._query = _query;\n        this._raw = _raw;\n        this._primary = _primary;\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n    }\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\n        get: function () {\n            return this.RawSearchResults.ElapsedTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\n        get: function () {\n            return this._raw;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\n        get: function () {\n            if (this._primary === null) {\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\n            }\n            return this._primary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a page of results\n     *\n     * @param pageNumber Index of the page to return. Used to determine StartRow\n     * @param pageSize Optional, items per page (default = 10)\n     */\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\n        // if we got all the available rows we don't have another page\n        if (this.TotalRows < this.RowCount) {\n            return Promise.resolve(null);\n        }\n        // if pageSize is supplied, then we use that regardless of any previous values\n        // otherwise get the previous RowLimit or default to 10\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\n        var query = util_1.Util.extend(this._query, {\n            RowLimit: rows,\n            StartRow: rows * (pageNumber - 1),\n        });\n        // we have reached the end\n        if (query.StartRow > this.TotalRows) {\n            return Promise.resolve(null);\n        }\n        var search = new Search(this._url, null);\n        return search.execute(query);\n    };\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\n        var results = new Array();\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\n            var tempResult = tempResults_1[_i];\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\n            results.push(cells.reduce(function (res, cell) {\n                Object.defineProperty(res, cell.Key, {\n                    configurable: false,\n                    enumerable: false,\n                    value: cell.Value,\n                    writable: false,\n                });\n                return res;\n            }, {}));\n        }\n        return results;\n    };\n    return SearchResults;\n}());\nexports.SearchResults = SearchResults;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\nvar SearchBuiltInSourceId = /** @class */ (function () {\n    function SearchBuiltInSourceId() {\n    }\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\n    return SearchBuiltInSourceId;\n}());\nexports.SearchBuiltInSourceId = SearchBuiltInSourceId;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/search.js\n// module id = 33\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = require(\"../utils/storage\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar CachingOptions = /** @class */ (function () {\n    function CachingOptions(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\n        get: function () {\n            if (this.storeName === \"local\") {\n                return CachingOptions.storage.local;\n            }\n            else {\n                return CachingOptions.storage.session;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CachingOptions.storage = new storage_1.PnPClientStorage();\n    return CachingOptions;\n}());\nexports.CachingOptions = CachingOptions;\nvar CachingParserWrapper = /** @class */ (function () {\n    function CachingParserWrapper(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    CachingParserWrapper.prototype.parse = function (response) {\n        var _this = this;\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(function (data) {\n            if (_this._cacheOptions.store !== null) {\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    };\n    return CachingParserWrapper;\n}());\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/odata/caching.js\n// module id = 34\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar SearchSuggest = /** @class */ (function (_super) {\n    __extends(SearchSuggest, _super);\n    function SearchSuggest(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/suggest\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    SearchSuggest.prototype.execute = function (query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\n    };\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    };\n    return SearchSuggest;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.SearchSuggest = SearchSuggest;\nvar SearchSuggestResult = /** @class */ (function () {\n    function SearchSuggestResult(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n    return SearchSuggestResult;\n}());\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/searchsuggest.js\n// module id = 35\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar webs_1 = require(\"./webs\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar batch_1 = require(\"./batch\");\nvar features_1 = require(\"./features\");\n/**\n * Describes a site collection\n *\n */\nvar Site = /** @class */ (function (_super) {\n    __extends(Site, _super);\n    /**\n     * Creates a new instance of the Site class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this site collection\n     */\n    function Site(baseUrl, path) {\n        if (path === void 0) { path = \"_api/site\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\n        /**\n         * Gets the root web of the site collection\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this, \"rootweb\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"features\", {\n        /**\n         * Gets the active features for this site collection\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\n        /**\n         * Gets all custom actions for this site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the context information for this site collection\n     */\n    Site.prototype.getContextInfo = function () {\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.postCore().then(function (data) {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                var info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\n        var q = new sharepointqueryable_1.SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the site url from a page url\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\n        var q = new sharepointqueryable_1.SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Creates a new batch for requests within the context of this site collection\n     *\n     */\n    Site.prototype.createBatch = function () {\n        return new batch_1.ODataBatch(this.parentUrl);\n    };\n    /**\n     * Opens a web by id (using POST)\n     *\n     * @param webId The GUID id of the web to open\n     */\n    Site.prototype.openWebById = function (webId) {\n        return this.clone(Site, \"openWebById('\" + webId + \"')\").postCore().then(function (d) {\n            return {\n                data: d,\n                web: webs_1.Web.fromUrl(odata_1.spExtractODataId(d)),\n            };\n        });\n    };\n    return Site;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Site = Site;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/site.js\n// module id = 36\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webs_1 = require(\"./webs\");\nvar roles_1 = require(\"./roles\");\nvar types_1 = require(\"./types\");\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\n    __extends(SharePointQueryableSecurable, _super);\n    function SharePointQueryableSecurable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\n        /**\n         * Gets the set of role assignments for this item\n         *\n         */\n        get: function () {\n            return new roles_1.RoleAssignments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\n        /**\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\n        var q = this.clone(sharepointqueryable_1.SharePointQueryable, \"getUserEffectivePermissions(@user)\");\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get().then(function (r) {\n            // handle verbose mode\n            return r.hasOwnProperty(\"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\n        });\n    };\n    /**\n     * Gets the effective permissions for the current user\n     */\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\n        var _this = this;\n        var w = webs_1.Web.fromUrl(this.toUrl());\n        return w.currentUser.select(\"LoginName\").getAs().then(function (user) {\n            return _this.getUserEffectivePermissions(user.LoginName);\n        });\n    };\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\n    };\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\n    };\n    /**\n     * Determines if a given user has the appropriate permissions\n     *\n     * @param loginName The user to check\n     * @param permission The permission being checked\n     */\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\n        var _this = this;\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Determines if the current user has the requested permissions\n     *\n     * @param permission The permission we wish to check\n     */\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\n        var _this = this;\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Taken from sp.js, checks the supplied permissions against the mask\n     *\n     * @param value The security principal's permissions on the given object\n     * @param perm The permission checked against the value\n     */\n    /* tslint:disable:no-bitwise */\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\n        if (!perm) {\n            return true;\n        }\n        var low = parseFloat(value.Low);\n        var high = parseFloat(value.High);\n        if (perm === types_1.PermissionKind.FullMask) {\n            return (high & 32767) === 32767 && low === 65535;\n        }\n        perm = perm - 1;\n        var num = 1;\n        if (perm >= 0 && perm < 32) {\n            num = num << perm;\n            return 0 !== (low & num);\n        }\n        else if (perm >= 32 && perm < 64) {\n            num = num << perm - 32;\n            return 0 !== (high & num);\n        }\n        return false;\n    };\n    return SharePointQueryableSecurable;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.SharePointQueryableSecurable = SharePointQueryableSecurable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/sharepointqueryablesecurable.js\n// module id = 37\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a collection of all site collection users\n *\n */\nvar SiteUsers = /** @class */ (function (_super) {\n    __extends(SiteUsers, _super);\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user collection\n     */\n    function SiteUsers(baseUrl, path) {\n        if (path === void 0) { path = \"siteusers\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email address of the user to retrieve\n     */\n    SiteUsers.prototype.getByEmail = function (email) {\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n    };\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user to retrieve\n     */\n    SiteUsers.prototype.getById = function (id) {\n        return new SiteUser(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The login name of the user to retrieve\n     */\n    SiteUsers.prototype.getByLoginName = function (loginName) {\n        var su = new SiteUser(this);\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\n        return su;\n    };\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user to remove\n     */\n    SiteUsers.prototype.removeById = function (id) {\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\").postCore();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user to remove\n     */\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\");\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return o.postCore();\n    };\n    /**\n     * Adds a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    SiteUsers.prototype.add = function (loginName) {\n        var _this = this;\n        return this.clone(SiteUsers, null).postCore({\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\n        }).then(function () { return _this.getByLoginName(loginName); });\n    };\n    return SiteUsers;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nvar SiteUser = /** @class */ (function (_super) {\n    __extends(SiteUser, _super);\n    function SiteUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\n        /**\n         * Gets the groups for this user\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    SiteUser.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.postCore({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                user: _this,\n            };\n        });\n    };\n    /**\n     * Delete this user\n     *\n     */\n    SiteUser.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return SiteUser;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nvar CurrentUser = /** @class */ (function (_super) {\n    __extends(CurrentUser, _super);\n    function CurrentUser(baseUrl, path) {\n        if (path === void 0) { path = \"currentuser\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return CurrentUser;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.CurrentUser = CurrentUser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/siteusers.js\n// module id = 38\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar LimitedWebPartManager = /** @class */ (function (_super) {\n    __extends(LimitedWebPartManager, _super);\n    function LimitedWebPartManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\n        /**\n         * Gets the set of web part definitions contained by this web part manager\n         *\n         */\n        get: function () {\n            return new WebPartDefinitions(this, \"webparts\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    LimitedWebPartManager.prototype.export = function (id) {\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    };\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    LimitedWebPartManager.prototype.import = function (xml) {\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    };\n    return LimitedWebPartManager;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.LimitedWebPartManager = LimitedWebPartManager;\nvar WebPartDefinitions = /** @class */ (function (_super) {\n    __extends(WebPartDefinitions, _super);\n    function WebPartDefinitions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getById = function (id) {\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\n    };\n    /**\n     * Gets a web part definition from the collection by storage id\n     *\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\n     */\n    WebPartDefinitions.prototype.getByControlId = function (id) {\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\n    };\n    return WebPartDefinitions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.WebPartDefinitions = WebPartDefinitions;\nvar WebPartDefinition = /** @class */ (function (_super) {\n    __extends(WebPartDefinition, _super);\n    function WebPartDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\n        /**\n         * Gets the webpart information associated with this definition\n         */\n        get: function () {\n            return new WebPart(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\n     */\n    WebPartDefinition.prototype.saveChanges = function () {\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\n    };\n    /**\n     * Moves the Web Part to a different location on a Web Part Page\n     *\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\n     */\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\n    };\n    /**\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.close = function () {\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\n    };\n    /**\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\n     */\n    WebPartDefinition.prototype.open = function () {\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\n    };\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    WebPartDefinition.prototype.delete = function () {\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\n    };\n    return WebPartDefinition;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.WebPartDefinition = WebPartDefinition;\nvar WebPart = /** @class */ (function (_super) {\n    __extends(WebPart, _super);\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    function WebPart(baseUrl, path) {\n        if (path === void 0) { path = \"webpart\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return WebPart;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.WebPart = WebPart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/webparts.js\n// module id = 39\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\n/**\n * Describes a collection of List objects\n *\n */\nvar Features = /** @class */ (function (_super) {\n    __extends(Features, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Features(baseUrl, path) {\n        if (path === void 0) { path = \"features\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    Features.prototype.getById = function (id) {\n        var feature = new Feature(this);\n        feature.concat(\"('\" + id + \"')\");\n        return feature;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    Features.prototype.add = function (id, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"add\").postCore({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(function (data) {\n            return {\n                data: data,\n                feature: _this.getById(id),\n            };\n        });\n    };\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    Features.prototype.remove = function (id, force) {\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"remove\").postCore({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    };\n    return Features;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Features = Features;\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    function Feature() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    Feature.prototype.deactivate = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var removeDependency = this.addBatchDependency();\n        var idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(function (feature) {\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    };\n    return Feature;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Feature = Feature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/features.js\n// module id = 40\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar files_1 = require(\"./files\");\nvar odata_1 = require(\"./odata\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Represents an app catalog\n */\nvar AppCatalog = /** @class */ (function (_super) {\n    __extends(AppCatalog, _super);\n    function AppCatalog(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\n        var _this = this;\n        // we need to handle the case of getting created from something that already has \"_api/...\" or does not\n        var candidateUrl = \"\";\n        if (typeof baseUrl === \"string\") {\n            candidateUrl = baseUrl;\n        }\n        else if (typeof baseUrl !== \"undefined\") {\n            candidateUrl = baseUrl.toUrl();\n        }\n        _this = _super.call(this, util_1.extractWebUrl(candidateUrl), path) || this;\n        return _this;\n    }\n    /**\n     * Get details of specific app from the app catalog\n     * @param id - Specify the guid of the app\n     */\n    AppCatalog.prototype.getAppById = function (id) {\n        return new App(this, \"getById('\" + id + \"')\");\n    };\n    /**\n     * Uploads an app package. Not supported for batching\n     *\n     * @param filename Filename to create.\n     * @param content app package data (eg: the .app or .sppkg file).\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\n     * @returns Promise<AppAddResult>\n     */\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        // you don't add to the availableapps collection\n        var adder = new AppCatalog(util_1.extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\n        return adder.postCore({\n            body: content,\n        }).then(function (r) {\n            return {\n                data: r,\n                file: new files_1.File(odata_1.spExtractODataId(r)),\n            };\n        });\n    };\n    return AppCatalog;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.AppCatalog = AppCatalog;\n/**\n * Represents the actions you can preform on a given app within the catalog\n */\nvar App = /** @class */ (function (_super) {\n    __extends(App, _super);\n    function App() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This method deploys an app on the app catalog.  It must be called in the context\n     * of the tenant app catalog web or it will fail.\n     */\n    App.prototype.deploy = function () {\n        return this.clone(App, \"Deploy\").postCore();\n    };\n    /**\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\n     * of the tenant app catalog web or it will fail.\n     */\n    App.prototype.retract = function () {\n        return this.clone(App, \"Retract\").postCore();\n    };\n    /**\n     * This method allows an app which is already deployed to be installed on a web\n     */\n    App.prototype.install = function () {\n        return this.clone(App, \"Install\").postCore();\n    };\n    /**\n     * This method allows an app which is already insatlled to be uninstalled on a web\n     */\n    App.prototype.uninstall = function () {\n        return this.clone(App, \"Uninstall\").postCore();\n    };\n    /**\n     * This method allows an app which is already insatlled to be upgraded on a web\n     */\n    App.prototype.upgrade = function () {\n        return this.clone(App, \"Upgrade\").postCore();\n    };\n    /**\n     * This method removes an app from the app catalog.  It must be called in the context\n     * of the tenant app catalog web or it will fail.\n     */\n    App.prototype.remove = function () {\n        return this.clone(App, \"Remove\").postCore();\n    };\n    return App;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.App = App;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/appcatalog.js\n// module id = 41\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar files_1 = require(\"./files\");\nvar items_1 = require(\"./items\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Gets the next order value 1 based for the provided collection\n *\n * @param collection Collection of orderable things\n */\nfunction getNextOrder(collection) {\n    if (collection.length < 1) {\n        return 1;\n    }\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\n}\n/**\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\n *\n * @param this Types the called context this to a string in which the search will be conducted\n * @param regex A regex or string to match\n * @param startpos A starting position from which the search will begin\n */\nfunction regexIndexOf(regex, startpos) {\n    if (startpos === void 0) { startpos = 0; }\n    var indexOf = this.substring(startpos).search(regex);\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\n}\n/**\n * Gets an attribute value from an html string block\n *\n * @param html HTML to search\n * @param attrName The name of the attribute to find\n */\nfunction getAttrValueFromString(html, attrName) {\n    var reg = new RegExp(attrName + \"=\\\"([^\\\"]*?)\\\"\", \"i\");\n    var match = reg.exec(html);\n    return match.length > 0 ? match[1] : null;\n}\n/**\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\n *\n * @param html HTML to search\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\n */\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\n    var blocks = [];\n    if (typeof html === \"undefined\" || html === null) {\n        return blocks;\n    }\n    // remove some extra whitespace if present\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\n    // find the first div\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\n    if (startIndex < 0) {\n        // we found no blocks in the supplied html\n        return blocks;\n    }\n    // this loop finds each of the blocks\n    while (startIndex > -1) {\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\n        var openCounter = 1;\n        var searchIndex = startIndex + 1;\n        var nextDivOpen = -1;\n        var nextCloseDiv = -1;\n        // this loop finds the </div> tag that matches the opening of the control\n        while (true) {\n            // find both the next opening and closing div tags from our current searching index\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\n            if (nextDivOpen < 0) {\n                // we have no more opening divs, just set this to simplify checks below\n                nextDivOpen = cleanedHtml.length + 1;\n            }\n            // determine which we found first, then increment or decrement our counter\n            // and set the location to begin searching again\n            if (nextDivOpen < nextCloseDiv) {\n                openCounter++;\n                searchIndex = nextDivOpen + 1;\n            }\n            else if (nextCloseDiv < nextDivOpen) {\n                openCounter--;\n                searchIndex = nextCloseDiv + 1;\n            }\n            // once we have no open divs back to the level of the opening control div\n            // meaning we have all of the markup we intended to find\n            if (openCounter === 0) {\n                // get the bounded markup, +6 is the size of the ending </div> tag\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\n                // save the control data we found to the array\n                blocks.push(collector(markup));\n                // get out of our while loop\n                break;\n            }\n            if (openCounter > 1000 || openCounter < 0) {\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\n                // something has gone wrong above and we are probably stuck in our while loop\n                // let's get out of our while loop and not hang everything\n                throw new Error(\"getBoundedDivMarkup exceeded depth parameters.\");\n            }\n        }\n        // get the start of the next control\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\n    }\n    return blocks;\n}\n/**\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\n *\n * @param collection The collection to normalize\n */\nfunction reindex(collection) {\n    for (var i = 0; i < collection.length; i++) {\n        collection[i].order = i + 1;\n        if (collection[i].hasOwnProperty(\"columns\")) {\n            reindex(collection[i].columns);\n        }\n        else if (collection[i].hasOwnProperty(\"controls\")) {\n            reindex(collection[i].controls);\n        }\n    }\n}\n/**\n * Represents the data and methods associated with client side \"modern\" pages\n */\nvar ClientSidePage = /** @class */ (function (_super) {\n    __extends(ClientSidePage, _super);\n    /**\n     * Creates a new instance of the ClientSidePage class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\n     */\n    function ClientSidePage(file, sections, commentsDisabled) {\n        if (sections === void 0) { sections = []; }\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\n        var _this = _super.call(this, file) || this;\n        _this.sections = sections;\n        _this.commentsDisabled = commentsDisabled;\n        return _this;\n    }\n    /**\n     * Creates a new blank page within the supplied library\n     *\n     * @param library The library in which to create the page\n     * @param pageName Filename of the page, such as \"page.aspx\"\n     * @param title The display title of the page\n     * @param pageLayoutType Layout type of the page to use\n     */\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\n        // see if file exists, if not create it\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\n            if (fs.length > 0) {\n                throw new Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\n            }\n            // get our server relative path\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\n                var pageServerRelPath = util_1.Util.combinePaths(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\n                // add the template file\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, files_1.TemplateFileType.ClientSidePage).then(function (far) {\n                    // get the item associated with the file\n                    return far.file.getItem().then(function (i) {\n                        // update the item to have the correct values to create the client side page\n                        return i.update({\n                            BannerImageUrl: {\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\n                            },\n                            CanvasContent1: \"\",\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\n                            PageLayoutType: pageLayoutType,\n                            PromotedState: 0 /* NotPromoted */,\n                            Title: title,\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\n                    });\n                });\n            });\n        });\n    };\n    /**\n     * Creates a new ClientSidePage instance from the provided html content string\n     *\n     * @param html HTML markup representing the page\n     */\n    ClientSidePage.fromFile = function (file) {\n        var page = new ClientSidePage(file);\n        return page.load().then(function (_) { return page; });\n    };\n    /**\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\n     *\n     * @param json The json object to encode into a string\n     */\n    ClientSidePage.jsonToEscapedString = function (json) {\n        return JSON.stringify(json)\n            .replace(/\"/g, \"&quot;\")\n            .replace(/:/g, \"&#58;\")\n            .replace(/{/g, \"&#123;\")\n            .replace(/}/g, \"&#125;\");\n    };\n    /**\n     * Converts an escaped string from a client-side control attribute to a json object\n     *\n     * @param escapedString\n     */\n    ClientSidePage.escapedStringToJson = function (escapedString) {\n        return JSON.parse(escapedString\n            .replace(/&quot;/g, \"\\\"\")\n            .replace(/&#58;/g, \":\")\n            .replace(/&#123;/g, \"{\")\n            .replace(/&#125;/g, \"}\"));\n    };\n    /**\n     * Add a section to this page\n     */\n    ClientSidePage.prototype.addSection = function () {\n        var section = new CanvasSection(this, getNextOrder(this.sections));\n        this.sections.push(section);\n        return section;\n    };\n    /**\n     * Converts this page's content to html markup\n     */\n    ClientSidePage.prototype.toHtml = function () {\n        // trigger reindex of the entire tree\n        reindex(this.sections);\n        var html = [];\n        html.push(\"<div>\");\n        for (var i = 0; i < this.sections.length; i++) {\n            html.push(this.sections[i].toHtml());\n        }\n        html.push(\"</div>\");\n        return html.join(\"\");\n    };\n    /**\n     * Loads this page instance's content from the supplied html\n     *\n     * @param html html string representing the page's content\n     */\n    ClientSidePage.prototype.fromHtml = function (html) {\n        var _this = this;\n        // reset sections\n        this.sections = [];\n        // gather our controls from the supplied html\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\n            // get the control type\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\n            // if no control type is present this is a column which we give type 0 to let us process it\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\n            var control = null;\n            switch (controlType) {\n                case 0:\n                    // empty canvas column\n                    control = new CanvasColumn(null, 0);\n                    control.fromHtml(markup);\n                    _this.mergeColumnToTree(control);\n                    break;\n                case 3:\n                    // client side webpart\n                    control = new ClientSideWebpart(\"\");\n                    control.fromHtml(markup);\n                    _this.mergeControlToTree(control);\n                    break;\n                case 4:\n                    // client side text\n                    control = new ClientSideText();\n                    control.fromHtml(markup);\n                    _this.mergeControlToTree(control);\n                    break;\n            }\n        });\n        reindex(this.sections);\n        return this;\n    };\n    /**\n     * Loads this page's content from the server\n     */\n    ClientSidePage.prototype.load = function () {\n        var _this = this;\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\n            _this.fromHtml(item.CanvasContent1);\n            _this.commentsDisabled = item.CommentsDisabled;\n        });\n    };\n    /**\n     * Persists the content changes (sections, columns, and controls)\n     */\n    ClientSidePage.prototype.save = function () {\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\n    };\n    /**\n     * Enables comments on this page\n     */\n    ClientSidePage.prototype.enableComments = function () {\n        var _this = this;\n        return this.setCommentsOn(true).then(function (r) {\n            _this.commentsDisabled = false;\n            return r;\n        });\n    };\n    /**\n     * Disables comments on this page\n     */\n    ClientSidePage.prototype.disableComments = function () {\n        var _this = this;\n        return this.setCommentsOn(false).then(function (r) {\n            _this.commentsDisabled = true;\n            return r;\n        });\n    };\n    /**\n     * Finds a control by the specified instance id\n     *\n     * @param id Instance id of the control to find\n     */\n    ClientSidePage.prototype.findControlById = function (id) {\n        return this.findControl(function (c) { return c.id === id; });\n    };\n    /**\n     * Finds a control within this page's control tree using the supplied predicate\n     *\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\n     */\n    ClientSidePage.prototype.findControl = function (predicate) {\n        // check all sections\n        for (var i = 0; i < this.sections.length; i++) {\n            // check all columns\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\n                // check all controls\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\n                    // check to see if the predicate likes this control\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\n                        return this.sections[i].columns[j].controls[k];\n                    }\n                }\n            }\n        }\n        // we found nothing so give nothing back\n        return null;\n    };\n    /**\n     * Sets the comments flag for a page\n     *\n     * @param on If true comments are enabled, false they are disabled\n     */\n    ClientSidePage.prototype.setCommentsOn = function (on) {\n        return this.getItem().then(function (i) {\n            var updater = new items_1.Item(i, \"SetCommentsDisabled(\" + !on + \")\");\n            return updater.update({});\n        });\n    };\n    /**\n     * Merges the control into the tree of sections and columns for this page\n     *\n     * @param control The control to merge\n     */\n    ClientSidePage.prototype.mergeControlToTree = function (control) {\n        var section = null;\n        var column = null;\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\n        if (sections.length < 1) {\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\n            this.sections.push(section);\n        }\n        else {\n            section = sections[0];\n        }\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\n        if (columns.length < 1) {\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\n            section.columns.push(column);\n        }\n        else {\n            column = columns[0];\n        }\n        control.column = column;\n        column.addControl(control);\n    };\n    /**\n     * Merges the supplied column into the tree\n     *\n     * @param column Column to merge\n     * @param position The position data for the column\n     */\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\n        var section = null;\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\n        if (sections.length < 1) {\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\n            this.sections.push(section);\n        }\n        else {\n            section = sections[0];\n        }\n        column.section = section;\n        section.columns.push(column);\n    };\n    /**\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\n     *\n     * @param properties Set of properties to update\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\n    };\n    return ClientSidePage;\n}(files_1.File));\nexports.ClientSidePage = ClientSidePage;\nvar CanvasSection = /** @class */ (function () {\n    function CanvasSection(page, order, columns) {\n        if (columns === void 0) { columns = []; }\n        this.page = page;\n        this.order = order;\n        this.columns = columns;\n    }\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\n        /**\n         * Default column (this.columns[0]) for this section\n         */\n        get: function () {\n            if (this.columns.length < 1) {\n                this.addColumn(12);\n            }\n            return this.columns[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a new column to this section\n     */\n    CanvasSection.prototype.addColumn = function (factor) {\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\n        this.columns.push(column);\n        return column;\n    };\n    /**\n     * Adds a control to the default column for this section\n     *\n     * @param control Control to add to the default column\n     */\n    CanvasSection.prototype.addControl = function (control) {\n        this.defaultColumn.addControl(control);\n        return this;\n    };\n    CanvasSection.prototype.toHtml = function () {\n        var html = [];\n        for (var i = 0; i < this.columns.length; i++) {\n            html.push(this.columns[i].toHtml());\n        }\n        return html.join(\"\");\n    };\n    return CanvasSection;\n}());\nexports.CanvasSection = CanvasSection;\nvar CanvasControl = /** @class */ (function () {\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\n        if (column === void 0) { column = null; }\n        if (order === void 0) { order = 1; }\n        if (id === void 0) { id = util_1.Util.getGUID(); }\n        if (controlData === void 0) { controlData = null; }\n        this.controlType = controlType;\n        this.dataVersion = dataVersion;\n        this.column = column;\n        this.order = order;\n        this.id = id;\n        this.controlData = controlData;\n    }\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\n        /**\n         * Value of the control's \"data-sp-controldata\" attribute\n         */\n        get: function () {\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CanvasControl.prototype.fromHtml = function (html) {\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\n        this.controlType = this.controlData.controlType;\n        this.id = this.controlData.id;\n    };\n    return CanvasControl;\n}());\nexports.CanvasControl = CanvasControl;\nvar CanvasColumn = /** @class */ (function (_super) {\n    __extends(CanvasColumn, _super);\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\n        if (factor === void 0) { factor = 12; }\n        if (controls === void 0) { controls = []; }\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\n        var _this = _super.call(this, 0, dataVersion) || this;\n        _this.section = section;\n        _this.order = order;\n        _this.factor = factor;\n        _this.controls = controls;\n        return _this;\n    }\n    CanvasColumn.prototype.addControl = function (control) {\n        control.column = this;\n        this.controls.push(control);\n        return this;\n    };\n    CanvasColumn.prototype.getControl = function (index) {\n        return this.controls[index];\n    };\n    CanvasColumn.prototype.toHtml = function () {\n        var html = [];\n        if (this.controls.length < 1) {\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\n        }\n        else {\n            for (var i = 0; i < this.controls.length; i++) {\n                html.push(this.controls[i].toHtml(i + 1));\n            }\n        }\n        return html.join(\"\");\n    };\n    CanvasColumn.prototype.fromHtml = function (html) {\n        _super.prototype.fromHtml.call(this, html);\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\n        this.factor = this.controlData.position.sectionFactor;\n        this.order = this.controlData.position.sectionIndex;\n    };\n    CanvasColumn.prototype.getControlData = function () {\n        return {\n            displayMode: 2,\n            position: {\n                sectionFactor: this.factor,\n                sectionIndex: this.order,\n                zoneIndex: this.section.order,\n            },\n        };\n    };\n    return CanvasColumn;\n}(CanvasControl));\nexports.CanvasColumn = CanvasColumn;\nvar ClientSideText = /** @class */ (function (_super) {\n    __extends(ClientSideText, _super);\n    function ClientSideText(text) {\n        if (text === void 0) { text = \"\"; }\n        var _this = _super.call(this, 4, \"1.0\") || this;\n        _this.text = text;\n        return _this;\n    }\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\n        /**\n         * The text markup of this control\n         */\n        get: function () {\n            return this._text;\n        },\n        set: function (text) {\n            if (!text.startsWith(\"<p>\")) {\n                text = \"<p>\" + text + \"</p>\";\n            }\n            this._text = text;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ClientSideText.prototype.getControlData = function () {\n        return {\n            controlType: this.controlType,\n            editorType: \"CKEditor\",\n            id: this.id,\n            position: {\n                controlIndex: this.order,\n                sectionFactor: this.column.factor,\n                sectionIndex: this.column.order,\n                zoneIndex: this.column.section.order,\n            },\n        };\n    };\n    ClientSideText.prototype.toHtml = function (index) {\n        // set our order to the value passed in\n        this.order = index;\n        var html = [];\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\n        html.push(\"\" + this.text);\n        html.push(\"</div>\");\n        html.push(\"</div>\");\n        return html.join(\"\");\n    };\n    ClientSideText.prototype.fromHtml = function (html) {\n        _super.prototype.fromHtml.call(this, html);\n        var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>/i.exec(html);\n        this.text = match.length > 1 ? match[1] : \"\";\n    };\n    return ClientSideText;\n}(CanvasControl));\nexports.ClientSideText = ClientSideText;\nvar ClientSideWebpart = /** @class */ (function (_super) {\n    __extends(ClientSideWebpart, _super);\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent) {\n        if (description === void 0) { description = \"\"; }\n        if (propertieJson === void 0) { propertieJson = {}; }\n        if (webPartId === void 0) { webPartId = \"\"; }\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\n        var _this = _super.call(this, 3, \"1.0\") || this;\n        _this.title = title;\n        _this.description = description;\n        _this.propertieJson = propertieJson;\n        _this.webPartId = webPartId;\n        _this.htmlProperties = htmlProperties;\n        _this.serverProcessedContent = serverProcessedContent;\n        return _this;\n    }\n    ClientSideWebpart.fromComponentDef = function (definition) {\n        var part = new ClientSideWebpart(\"\");\n        part.import(definition);\n        return part;\n    };\n    ClientSideWebpart.prototype.import = function (component) {\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\");\n        var manifest = JSON.parse(component.Manifest);\n        this.title = manifest.preconfiguredEntries[0].title.default;\n        this.description = manifest.preconfiguredEntries[0].description.default;\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\n    };\n    ClientSideWebpart.prototype.setProperties = function (properties) {\n        this.propertieJson = properties;\n        return this;\n    };\n    ClientSideWebpart.prototype.getProperties = function () {\n        return this.propertieJson;\n    };\n    ClientSideWebpart.prototype.toHtml = function (index) {\n        // set our order to the value passed in\n        this.order = index;\n        // will form the value of the data-sp-webpartdata attribute\n        var data = {\n            dataVersion: this.dataVersion,\n            description: this.description,\n            id: this.webPartId,\n            instanceId: this.id,\n            properties: this.propertieJson,\n            title: this.title,\n        };\n        var html = [];\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\n        html.push(\"<div data-sp-componentid>\");\n        html.push(this.webPartId);\n        html.push(\"</div>\");\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\n        html.push(this.renderHtmlProperties());\n        html.push(\"</div>\");\n        html.push(\"</div>\");\n        html.push(\"</div>\");\n        return html.join(\"\");\n    };\n    ClientSideWebpart.prototype.fromHtml = function (html) {\n        _super.prototype.fromHtml.call(this, html);\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\n        this.title = webPartData.title;\n        this.description = webPartData.description;\n        this.webPartId = webPartData.id;\n        this.setProperties(webPartData.properties);\n        if (typeof webPartData.serverProcessedContent !== \"undefined\") {\n            this.serverProcessedContent = webPartData.serverProcessedContent;\n        }\n        // get our html properties\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\n        });\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\n    };\n    ClientSideWebpart.prototype.getControlData = function () {\n        return {\n            controlType: this.controlType,\n            id: this.id,\n            position: {\n                controlIndex: this.order,\n                sectionFactor: this.column.factor,\n                sectionIndex: this.column.order,\n                zoneIndex: this.column.section.order,\n            },\n            webPartId: this.webPartId,\n        };\n    };\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\n        var html = [];\n        if (typeof this.serverProcessedContent === \"undefined\" || this.serverProcessedContent === null) {\n            html.push(this.htmlProperties);\n        }\n        else if (typeof this.serverProcessedContent !== \"undefined\") {\n            if (typeof this.serverProcessedContent.searchablePlainTexts !== \"undefined\") {\n                for (var i = 0; i < this.serverProcessedContent.searchablePlainTexts.length; i++) {\n                    var prop = this.serverProcessedContent.searchablePlainTexts[i];\n                    html.push(\"<div data-sp-prop-name=\\\"\" + prop.Name + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\n                    html.push(prop.Value);\n                    html.push(\"</div>\");\n                }\n            }\n            if (typeof this.serverProcessedContent.imageSources !== \"undefined\") {\n                for (var i = 0; i < this.serverProcessedContent.imageSources.length; i++) {\n                    var prop = this.serverProcessedContent.imageSources[i];\n                    html.push(\"<img data-sp-prop-name=\\\"\" + prop.Name + \"\\\" src=\\\"\" + prop.Value + \"\\\" />\");\n                }\n            }\n            if (typeof this.serverProcessedContent.links !== \"undefined\") {\n                for (var i = 0; i < this.serverProcessedContent.links.length; i++) {\n                    var prop = this.serverProcessedContent.links[i];\n                    html.push(\"<a data-sp-prop-name=\\\"\" + prop.Name + \"\\\" href=\\\"\" + prop.Value + \"\\\"></a>\");\n                }\n            }\n        }\n        return html.join(\"\");\n    };\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.serverProcessedContent !== \"undefined\") {\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\n        }\n        else if (typeof props.serverProcessedContent !== \"undefined\") {\n            this.serverProcessedContent = props.serverProcessedContent;\n        }\n        else {\n            this.serverProcessedContent = null;\n        }\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.properties !== \"undefined\") {\n            return props.webPartData.properties;\n        }\n        else if (typeof props.properties !== \"undefined\") {\n            return props.properties;\n        }\n        else {\n            return props;\n        }\n    };\n    return ClientSideWebpart;\n}(CanvasControl));\nexports.ClientSideWebpart = ClientSideWebpart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/clientsidepages.js\n// module id = 42\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Exposes social following methods\n */\nvar SocialQuery = /** @class */ (function (_super) {\n    __extends(SocialQuery, _super);\n    /**\n     * Creates a new instance of the SocialQuery class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\n     */\n    function SocialQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/social.following\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\n        get: function () {\n            return new MySocialQuery(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a URI to a site that lists the current user's followed sites.\n     */\n    SocialQuery.prototype.getFollowedSitesUri = function () {\n        return this.clone(SocialQuery, \"FollowedSitesUri\").get().then(function (r) {\n            return r.FollowedSitesUri || r;\n        });\n    };\n    /**\n     * Gets a URI to a site that lists the current user's followed documents.\n     */\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\n        return this.clone(SocialQuery, \"FollowedDocumentsUri\").get().then(function (r) {\n            return r.FollowedDocumentsUri || r;\n        });\n    };\n    /**\n     * Makes the current user start following a user, document, site, or tag\n     *\n     * @param actorInfo The actor to start following\n     */\n    SocialQuery.prototype.follow = function (actorInfo) {\n        return this.clone(SocialQuery, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\n    };\n    /**\n     * Indicates whether the current user is following a specified user, document, site, or tag\n     *\n     * @param actorInfo The actor to find the following status for\n     */\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\n        return this.clone(SocialQuery, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\n    };\n    /**\n     * Makes the current user stop following a user, document, site, or tag\n     *\n     * @param actorInfo The actor to stop following\n     */\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\n        return this.clone(SocialQuery, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\n    };\n    /**\n     * Creates SocialActorInfo request body\n     *\n     * @param actorInfo The actor to create request body\n     */\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\n        return JSON.stringify({\n            \"actor\": util_1.Util.extend({\n                Id: null,\n                \"__metadata\": { \"type\": \"SP.Social.SocialActorInfo\" },\n            }, actorInfo),\n        });\n    };\n    return SocialQuery;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.SocialQuery = SocialQuery;\nvar MySocialQuery = /** @class */ (function (_super) {\n    __extends(MySocialQuery, _super);\n    /**\n     * Creates a new instance of the SocialQuery class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\n     */\n    function MySocialQuery(baseUrl, path) {\n        if (path === void 0) { path = \"my\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets users, documents, sites, and tags that the current user is following.\n     *\n     * @param types Bitwise set of SocialActorTypes to retrieve\n     */\n    MySocialQuery.prototype.followed = function (types) {\n        return this.clone(MySocialQuery, \"followed(types=\" + types + \")\").get().then(function (r) {\n            return r.hasOwnProperty(\"Followed\") ? r.Followed.results : r;\n        });\n    };\n    /**\n     * Gets the count of users, documents, sites, and tags that the current user is following.\n     *\n     * @param types Bitwise set of SocialActorTypes to retrieve\n     */\n    MySocialQuery.prototype.followedCount = function (types) {\n        return this.clone(MySocialQuery, \"followedcount(types=\" + types + \")\").get().then(function (r) {\n            return r.FollowedCount || r;\n        });\n    };\n    /**\n     * Gets the users who are following the current user.\n     */\n    MySocialQuery.prototype.followers = function () {\n        return this.clone(MySocialQuery, \"followers\").get().then(function (r) {\n            return r.hasOwnProperty(\"Followers\") ? r.Followers.results : r;\n        });\n    };\n    /**\n     * Gets users who the current user might want to follow.\n     */\n    MySocialQuery.prototype.suggestions = function () {\n        return this.clone(MySocialQuery, \"suggestions\").get().then(function (r) {\n            return r.hasOwnProperty(\"Suggestions\") ? r.Suggestions.results : r;\n        });\n    };\n    return MySocialQuery;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.MySocialQuery = MySocialQuery;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/social.js\n// module id = 43\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar util_1 = require(\"../utils/util\");\nvar files_1 = require(\"./files\");\nvar odata_1 = require(\"./odata\");\n/**\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\n */\nvar UtilityMethod = /** @class */ (function (_super) {\n    __extends(UtilityMethod, _super);\n    /**\n     * Creates a new instance of the Utility method class\n     *\n     * @param baseUrl The parent url provider\n     * @param methodName The static method name to call on the utility class\n     */\n    function UtilityMethod(baseUrl, methodName) {\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\n    }\n    UtilityMethod.getBaseUrl = function (candidate) {\n        if (typeof candidate === \"string\") {\n            return candidate;\n        }\n        var c = candidate;\n        var url = c.toUrl();\n        var index = url.indexOf(\"_api/\");\n        if (index < 0) {\n            return url;\n        }\n        return url.substr(0, index);\n    };\n    UtilityMethod.prototype.excute = function (props) {\n        return this.postAsCore({\n            body: JSON.stringify(props),\n        });\n    };\n    /**\n     * Sends an email based on the supplied properties\n     *\n     * @param props The properties of the email to send\n     */\n    UtilityMethod.prototype.sendEmail = function (props) {\n        var params = {\n            properties: {\n                Body: props.Body,\n                From: props.From,\n                Subject: props.Subject,\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\n            },\n        };\n        if (props.To && props.To.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                To: { results: props.To },\n            });\n        }\n        if (props.CC && props.CC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                CC: { results: props.CC },\n            });\n        }\n        if (props.BCC && props.BCC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                BCC: { results: props.BCC },\n            });\n        }\n        if (props.AdditionalHeaders) {\n            params.properties = util_1.Util.extend(params.properties, {\n                AdditionalHeaders: props.AdditionalHeaders,\n            });\n        }\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\n    };\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\n    };\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\n        var params = {\n            addToUserInfoList: addToUserInfoList,\n            input: input,\n            inputIsEmailOnly: inputIsEmailOnly,\n            matchUserInfoList: matchUserInfoList,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\n    };\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\n        var params = {\n            groupName: groupName,\n            input: input,\n            maxCount: maxCount,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\n    };\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\n        var params = {\n            pageAddress: pageAddress,\n        };\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\n    };\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\n        if (maxCount === void 0) { maxCount = 30; }\n        var params = {\n            inputs: inputs,\n            maxCount: maxCount,\n        };\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\n    };\n    UtilityMethod.prototype.createWikiPage = function (info) {\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\n            parameters: info,\n        }).then(function (r) {\n            return {\n                data: r,\n                file: new files_1.File(odata_1.spExtractODataId(r)),\n            };\n        });\n    };\n    return UtilityMethod;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.UtilityMethod = UtilityMethod;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/utilities.js\n// module id = 44\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar utils_1 = require(\"./utils\");\n// import { APIUrlException } from \"../utils/exceptions\";\nvar GraphHttpClient = /** @class */ (function () {\n    function GraphHttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.graphFetchClientFactory();\n    }\n    GraphHttpClient.prototype.fetch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        utils_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.graphHeaders);\n        // second we add the local options so we can overwrite the globals\n        utils_1.mergeHeaders(headers, options.headers);\n        var opts = util_1.Util.extend(options, { headers: headers });\n        // TODO: we could process auth here\n        return this.fetchRaw(url, opts);\n    };\n    GraphHttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        utils_1.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, {}, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // Check if request was throttled - http status code 429\n                // Check if request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // grab our current delay\n                var delay = ctx.delay;\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    GraphHttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    GraphHttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    GraphHttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    GraphHttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    return GraphHttpClient;\n}());\nexports.GraphHttpClient = GraphHttpClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/net/graphclient.js\n// module id = 45\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage = require(\"../../utils/storage\");\nvar exceptions_1 = require(\"../../utils/exceptions\");\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nvar CachingConfigurationProvider = /** @class */ (function () {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = \"_configcache_\" + cacheKey;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\n        return this.wrappedProvider;\n    };\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\n        var _this = this;\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        var cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise(function (resolve) {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        var providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then(function (providedConfig) {\n            _this.store.put(_this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    };\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\n        var pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    };\n    return CachingConfigurationProvider;\n}());\nexports.default = CachingConfigurationProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/configuration/providers/cachingConfigurationProvider.js\n// module id = 46\n// module chunks = 0","'use strict';\n\nvar _config = require('./config.js');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _compareobject = require('./compareobject.js');\n\nvar _spPnpJs = require('sp-pnp-js');\n\nvar _spPnpJs2 = _interopRequireDefault(_spPnpJs);\n\nvar _edit = require('./templates/edit.js');\n\nvar _edit2 = _interopRequireDefault(_edit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EmptyDataObject = {\n    Title: '',\n    last_name: '',\n    company: '',\n    email: '',\n    description: '',\n    avatar: ''\n};\n// import the templates\n\n\nvar demodata = [];\nvar formData = {};\n\nfunction Toast(type, msg, options) {\n    toastr.options = $.extend({}, {\n        \"closeButton\": false,\n        \"debug\": false,\n        \"newestOnTop\": false,\n        \"progressBar\": false,\n        \"positionClass\": \"toast-top-right\",\n        \"preventDuplicates\": false,\n        \"onclick\": null,\n        \"showDuration\": \"300\",\n        \"hideDuration\": \"1000\",\n        \"timeOut\": \"5000\",\n        \"extendedTimeOut\": \"1000\",\n        \"showEasing\": \"swing\",\n        \"hideEasing\": \"linear\",\n        \"showMethod\": \"fadeIn\",\n        \"hideMethod\": \"fadeOut\"\n    }, options);\n    toastr[type](msg);\n}\n\nfunction HandleNavLinkClicks(e) {\n    e.preventDefault();\n    var whichLink = $(e.target).data(\"function\");\n    switch (whichLink) {\n        case \"New\":\n            formData = {};\n            formData = $.extend({}, EmptyDataObject);\n            $(\"#app-container\").html((0, _edit2.default)(EmptyDataObject));\n            break;\n        default:\n            DisplayList();\n    }\n}\n\nfunction HandleAvatarClick(e) {\n    console.log(\"HandleAvatarClick\");\n    e.preventDefault();\n    var img = GetRandomImage();\n    e.target.src = img;\n    formData.avatar = img;\n}\n\nfunction HandleEditFormButton(e) {\n    console.log(\"HandleEditFormButton\");\n    e.preventDefault();\n    var action = $(e.target).data(\"action\");\n    switch (action) {\n        case \"save\":\n            console.log(\"save\");\n            var id = $(e.target).data(\"id\");\n            console.log(\"id\", id);\n            if (id === undefined || id === 'undefined') {\n                // add new data\n                console.log(\"add new list item\", formData);\n                formData.avatar = formData.avatar == null || formData.avatar.length == 0 ? GetRandomImage() : formData.avatar;\n                _spPnpJs2.default.sp.web.lists.getByTitle(\"MockData\").items.add(formData).then(function (results) {\n                    console.log(\"results\", results);\n                    Toast(\"success\", \"New Item Saved.\");\n                    demodata.push(results.data);\n                    DisplayList();\n                    return;\n                });\n            } else {\n                // update existing item\n                var origItem = demodata.find(function (d) {\n                    return d.Id == id;\n                });\n                console.log(\"origItem\", origItem);\n                console.log(\"formData\", formData);\n                if (!(0, _compareobject.IsEqual)(origItem, formData)) {\n                    console.log(\"They are not equal\");\n                    // get current index and update the original item.\n                    formData.avatar = formData.avatar == null || formData.avatar.length == 0 ? GetRandomImage() : formData.avatar;\n                    var idx = demodata.findIndex(function (d) {\n                        return d.Id == id;\n                    });\n                    console.log(\"idx\", idx);\n                    demodata[idx] = formData;\n                    _spPnpJs2.default.sp.web.lists.getByTitle(\"MockData\").items.getById(id).update(formData).then(function (results) {\n                        console.log(\"results\", results);\n                        Toast(\"success\", \"Item updated.\");\n                        DisplayList();\n                        return;\n                    });\n                } else {\n                    console.log(\"objects are equal\");\n                    DisplayList();\n                }\n            }\n            break;\n        default:\n            DisplayList();\n    }\n}\n\nfunction GetRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction GetRandomImage() {\n    var generators = ['https://www.placecage.com', 'https://www.placecage.com/g', 'https://www.placecage.com/c', 'https://baconmockup.com', 'https://fillmurray.com', 'https://fillmurray.com/g', 'https://stevensegallery.com', 'https://stevensegallery.com/g', 'https://placebear.com', 'https://lorempixel.com', 'https://placebeard.it'];\n    return generators[GetRandomInt(generators.length)] + '/150/150';\n}\n\nfunction HandleFormChange(e) {\n    console.log(\"HandleFormChange\");\n    e.preventDefault();\n    formData[e.target.id] = e.target.value;\n}\n\nfunction DisplayList() {\n    var refresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    console.log(\"DisplayList\");\n    $(\"#app-container\").html(\"<TABLE id='app-table' class='table table-condensed display' cellspacing='0' width='100%' />\");\n    var dataTableConfig = {\n        data: demodata,\n        pageLength: 25,\n        info: false,\n        order: [2, 'asc'],\n        columns: [{\n            data: \"Id\",\n            render: function render(id) {\n                return '<i class=\\'fas fa-edit edit-item\\' data-id=\\'' + id + '\\'></i>';\n            },\n            className: 'dt-body-center',\n            orderable: false\n        }, {\n            data: \"avatar\",\n            render: function render(avatar) {\n                return '<img src=\"' + avatar + '\" height=\"50\" width=\"50\" />';\n            },\n            className: 'dt-body-center',\n            orderable: false\n        }, { data: \"last_name\", title: \"Last Name\", type: \"string\" }, { data: \"Title\", title: \"First Name\", type: \"string\" }, { data: \"company\", title: \"Company\", type: \"string\" }, { data: \"email\", title: \"E-Mail\", type: \"string\" }, {\n            data: \"Id\",\n            render: function render(id) {\n                return '<i class=\\'fas fa-trash-alt delete-item\\' data-id=\\'' + id + '\\'></i>';\n            },\n            className: 'dt-body-center',\n            orderable: false\n        }]\n    };\n    console.log(\"dataTableConfig\", dataTableConfig);\n    console.log(\"demodata.length: \", demodata.length);\n    if (demodata.length > 0 && refresh == false) {\n        $(\"#app-table\").DataTable(dataTableConfig);\n    } else {\n        _spPnpJs2.default.sp.web.lists.getByTitle(\"MockData\").items.select(\"Id,Title, last_name, company, email, avatar, description\").orderBy(\"last_name\").get().then(function (d) {\n            console.log(\"d\", d);\n            d.forEach(function (el, idx) {\n                return d[idx].avatar = el.avatar.replace('http://', 'https://');\n            });\n            demodata = d;\n            console.log(\"demodata\", demodata);\n            dataTableConfig.data = demodata;\n            $(\"#app-table\").DataTable(dataTableConfig);\n        });\n    }\n}\n\nfunction EditListItem(e) {\n    console.log(\"EditListItem\");\n    e.preventDefault();\n    // make sure old values are cleared.\n    formData = {};\n    var id = $(e.target).data(\"id\");\n    console.log(\"edit id: \", id);\n    var itm = demodata.find(function (d) {\n        return d.Id == id;\n    });\n    formData = $.extend({}, EmptyDataObject, itm);\n    $(\"#app-container\").html((0, _edit2.default)(formData));\n}\n\nfunction DeleteListItem(e) {\n    console.log(\"DeleteListItem\");\n    e.preventDefault();\n    var id = $(e.target).data(\"id\");\n    console.log(\"delete id: \", id);\n    demodata = demodata.filter(function (d) {\n        return d.Id !== id;\n    });\n    _spPnpJs2.default.sp.web.lists.getByTitle(\"MockData\").items.getById(id).delete().then(function (r) {\n        console.log(\"results of delete\", r);\n        Toast(\"success\", \"Item Deleted\");\n        DisplayList();\n    });\n}\n\n$(document).ready(function () {\n    _spPnpJs2.default.setup({\n        sp: {\n            headers: {\n                \"Accept\": \"application/json;odata=nometadata\"\n            }\n        }\n    });\n    $(\".navbar\").on(\"click\", \".nav-link\", HandleNavLinkClicks);\n    $(\"#app-container\").on(\"click\", \".edit-item\", EditListItem);\n    $(\"#app-container\").on(\"click\", \".delete-item\", DeleteListItem);\n    $(\"#app-container\").on(\"click\", \".edit-form-button\", HandleEditFormButton);\n    $(\"#app-container\").on(\"change\", HandleFormChange);\n    $(\"#app-container\").on(\"click\", \".avatar\", HandleAvatarClick);\n    DisplayList();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/main.js\n// module id = 47\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.IsEqual = IsEqual;\n//Returns the object's class, Array, Date, RegExp, Object are of interest to us\nvar getClass = function getClass(val) {\n\treturn Object.prototype.toString.call(val).match(/^\\[object\\s(.*)\\]$/)[1];\n};\n//Defines the type of the value, extended typeof\nvar whatis = exports.whatis = function whatis(val) {\n\tif (val === undefined) return 'undefined';\n\tif (val === null) return 'null';\n\tvar type = typeof val === 'undefined' ? 'undefined' : _typeof(val);\n\tif (type === 'object') type = getClass(val).toLowerCase();\n\tif (type === 'number') {\n\t\tif (val.toString().indexOf('.') > 0) return 'float';else return 'integer';\n\t}\n\treturn type;\n};\n\nvar compareObjects = function compareObjects(a, b) {\n\tif (a === b) return true;\n\tfor (var i in a) {\n\t\tif (b.hasOwnProperty(i)) {\n\t\t\tif (!IsEqual(a[i], b[i])) return false;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfor (var _i in b) {\n\t\tif (!a.hasOwnProperty(_i)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nvar compareArrays = function compareArrays(a, b) {\n\tif (a === b) return true;\n\tif (a.length !== b.length) return false;\n\tfor (var i = 0; i < a.length; i++) {\n\t\tif (!IsEqual(a[i], b[i])) return false;\n\t};\n\treturn true;\n};\n\nvar _equal = {};\n_equal.array = compareArrays;\n_equal.object = compareObjects;\n_equal.date = function (a, b) {\n\treturn a.getTime() === b.getTime();\n};\n_equal.regexp = function (a, b) {\n\treturn a.toString() === b.toString();\n};\n\n/*\r\n * Are two values equal, deep compare for objects and arrays.\r\n * @param a {any}\r\n * @param b {any}\r\n * @return {boolean} Are equal?\r\n */\n\nfunction IsEqual(a, b) {\n\tif (a !== b) {\n\t\tvar atype = whatis(a),\n\t\t    btype = whatis(b);\n\n\t\tif (atype === btype) return _equal.hasOwnProperty(atype) ? _equal[atype](a, b) : a == b;\n\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/compareobject.js\n// module id = 48\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = require(\"../collections/collections\");\n/**\n * Class used to manage the current application settings\n *\n */\nvar Settings = /** @class */ (function () {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    function Settings() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    Settings.prototype.add = function (key, value) {\n        this._settings.add(key, value);\n    };\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    Settings.prototype.addJSON = function (key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    };\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    Settings.prototype.apply = function (hash) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                _this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    Settings.prototype.load = function (provider) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            provider.getConfiguration().then(function (value) {\n                _this._settings.merge(value);\n                resolve();\n            }).catch(function (reason) {\n                reject(reason);\n            });\n        });\n    };\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    Settings.prototype.get = function (key) {\n        return this._settings.get(key);\n    };\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    Settings.prototype.getJSON = function (key) {\n        var o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    };\n    return Settings;\n}());\nexports.Settings = Settings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/configuration/configuration.js\n// module id = 49\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search_1 = require(\"./search\");\nvar searchsuggest_1 = require(\"./searchsuggest\");\nvar site_1 = require(\"./site\");\nvar webs_1 = require(\"./webs\");\nvar util_1 = require(\"../utils/util\");\nvar userprofiles_1 = require(\"./userprofiles\");\nvar social_1 = require(\"./social\");\nvar navigation_1 = require(\"./navigation\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar utilities_1 = require(\"./utilities\");\n/**\n * Root of the SharePoint REST module\n */\nvar SPRest = /** @class */ (function () {\n    /**\n     * Creates a new instance of the SPRest class\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    function SPRest(options, baseUrl) {\n        if (options === void 0) { options = {}; }\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        this._options = options;\n        this._baseUrl = baseUrl;\n    }\n    /**\n     * Configures instance with additional options and baseUrl.\n     * Provided configuration used by other objects in a chain\n     *\n     * @param options Additional options\n     * @param baseUrl A string that should form the base part of the url\n     */\n    SPRest.prototype.configure = function (options, baseUrl) {\n        if (baseUrl === void 0) { baseUrl = \"\"; }\n        return new SPRest(options, baseUrl);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.searchSuggest = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.search = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else if (query instanceof search_1.SearchQueryBuilder) {\n            finalQuery = query.toSearchQuery();\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(this._baseUrl).configure(this._options).execute(finalQuery);\n    };\n    Object.defineProperty(SPRest.prototype, \"site\", {\n        /**\n         * Begins a site collection scoped REST request\n         *\n         */\n        get: function () {\n            return new site_1.Site(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"web\", {\n        /**\n         * Begins a web scoped REST request\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\n        /**\n         * Access to user profile methods\n         */\n        get: function () {\n            return new userprofiles_1.UserProfileQuery(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"social\", {\n        /**\n         * Access to social methods\n         */\n        get: function () {\n            return new social_1.SocialQuery(this._baseUrl).configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\n        /**\n         * Access to the site collection level navigation service\n         */\n        get: function () {\n            return new navigation_1.NavigationService();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\n     *\n     */\n    SPRest.prototype.createBatch = function () {\n        return this.web.createBatch();\n    };\n    Object.defineProperty(SPRest.prototype, \"utility\", {\n        /**\n         * Static utilities methods from SP.Utilities.Utility\n         */\n        get: function () {\n            return new utilities_1.UtilityMethod(this._baseUrl, \"\").configure(this._options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    };\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    };\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    SPRest.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        var instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance.configure(this._options);\n    };\n    return SPRest;\n}());\nexports.SPRest = SPRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/rest.js\n// module id = 50\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = require(\"../collections/collections\");\nvar util_1 = require(\"../utils/util\");\nvar parsers_1 = require(\"../odata/parsers\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar CachedDigest = /** @class */ (function () {\n    function CachedDigest() {\n    }\n    return CachedDigest;\n}());\nexports.CachedDigest = CachedDigest;\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\nvar digests = new collections_1.Dictionary();\nvar DigestCache = /** @class */ (function () {\n    function DigestCache(_httpClient, _digests) {\n        if (_digests === void 0) { _digests = digests; }\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    DigestCache.prototype.getDigest = function (webUrl) {\n        var _this = this;\n        var cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            var now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        var headers = {\n            \"Accept\": \"application/json;odata=verbose\",\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\n        };\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.spHeaders, true),\n            method: \"POST\",\n        }).then(function (response) {\n            var parser = new parsers_1.ODataDefaultParser();\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\n        }).then(function (data) {\n            var newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            var seconds = data.FormDigestTimeoutSeconds;\n            var expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            _this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    };\n    DigestCache.prototype.clear = function () {\n        this._digests.clear();\n    };\n    return DigestCache;\n}());\nexports.DigestCache = DigestCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/net/digestcache.js\n// module id = 51\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar parsers_1 = require(\"../odata/parsers\");\n/**\n * Describes a collection of Item objects\n *\n */\nvar AttachmentFiles = /** @class */ (function (_super) {\n    __extends(AttachmentFiles, _super);\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this attachments collection\n     */\n    function AttachmentFiles(baseUrl, path) {\n        if (path === void 0) { path = \"AttachmentFiles\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    AttachmentFiles.prototype.getByName = function (name) {\n        var f = new AttachmentFile(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new attachment to the collection. Not supported for batching.\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    AttachmentFiles.prototype.add = function (name, content) {\n        var _this = this;\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\", false).postCore({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(name),\n            };\n        });\n    };\n    /**\n     * Adds multiple new attachment to the collection. Not supported for batching.\n     *\n     * @files name The collection of files to add\n     */\n    AttachmentFiles.prototype.addMultiple = function (files) {\n        var _this = this;\n        // add the files in series so we don't get update conflicts\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\", false).postCore({\n            body: file.content,\n        }); }); }, Promise.resolve());\n    };\n    /**\n     * Delete multiple attachments from the collection. Not supported for batching.\n     *\n     * @files name The collection of files to delete\n     */\n    AttachmentFiles.prototype.deleteMultiple = function () {\n        var _this = this;\n        var files = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            files[_i] = arguments[_i];\n        }\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\n    };\n    /**\n     * Delete multiple attachments from the collection and sends it to recycle bin. Not supported for batching.\n     *\n     * @files name The collection of files to delete\n     */\n    AttachmentFiles.prototype.recycleMultiple = function () {\n        var _this = this;\n        var files = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            files[_i] = arguments[_i];\n        }\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).recycle(); }); }, Promise.resolve());\n    };\n    return AttachmentFiles;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nvar AttachmentFile = /** @class */ (function (_super) {\n    __extends(AttachmentFile, _super);\n    function AttachmentFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    AttachmentFile.prototype.getText = function () {\n        return this.clone(AttachmentFile, \"$value\", false).get(new parsers_1.TextFileParser());\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    AttachmentFile.prototype.getBlob = function () {\n        return this.clone(AttachmentFile, \"$value\", false).get(new parsers_1.BlobFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getBuffer = function () {\n        return this.clone(AttachmentFile, \"$value\", false).get(new parsers_1.BufferFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getJSON = function () {\n        return this.clone(AttachmentFile, \"$value\", false).get(new parsers_1.JSONFileParser());\n    };\n    /**\n     * Sets the content of a file. Not supported for batching\n     *\n     * @param content The value to set for the file contents\n     */\n    AttachmentFile.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new AttachmentFile(_this); });\n    };\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Delete this attachment file and send it to Recycle Bin\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.recycle = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(AttachmentFile, \"recycleObject\").postCore({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return AttachmentFile;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.AttachmentFile = AttachmentFile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/attachmentfiles.js\n// module id = 52\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes the views available in the current context\n *\n */\nvar Views = /** @class */ (function (_super) {\n    __extends(Views, _super);\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Views(baseUrl, path) {\n        if (path === void 0) { path = \"views\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    Views.prototype.getById = function (id) {\n        var v = new View(this);\n        v.concat(\"('\" + id + \"')\");\n        return v;\n    };\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    Views.prototype.getByTitle = function (title) {\n        return new View(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    Views.prototype.add = function (title, personalView, additionalSettings) {\n        var _this = this;\n        if (personalView === void 0) { personalView = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.clone(Views, null).postAsCore({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                view: _this.getById(data.Id),\n            };\n        });\n    };\n    return Views;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(View.prototype, \"fields\", {\n        get: function () {\n            return new ViewFields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    View.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.postCore({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                view: _this,\n            };\n        });\n    };\n    /**\n     * Delete this view\n     *\n     */\n    View.prototype.delete = function () {\n        return this.postCore({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    View.prototype.renderAsHtml = function () {\n        return this.clone(sharepointqueryable_1.SharePointQueryable, \"renderashtml\").get();\n    };\n    return View;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.View = View;\nvar ViewFields = /** @class */ (function (_super) {\n    __extends(ViewFields, _super);\n    function ViewFields(baseUrl, path) {\n        if (path === void 0) { path = \"viewfields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    ViewFields.prototype.getSchemaXml = function () {\n        return this.clone(sharepointqueryable_1.SharePointQueryable, \"schemaxml\").get();\n    };\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\n    };\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    ViewFields.prototype.move = function (fieldInternalName, index) {\n        return this.clone(ViewFields, \"moveviewfieldto\").postCore({\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\n        });\n    };\n    /**\n     * Removes all the fields from the collection.\n     */\n    ViewFields.prototype.removeAll = function () {\n        return this.clone(ViewFields, \"removeallviewfields\").postCore();\n    };\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    ViewFields.prototype.remove = function (fieldInternalName) {\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\n    };\n    return ViewFields;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.ViewFields = ViewFields;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/views.js\n// module id = 53\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\n/**\n * Describes a collection of Field objects\n *\n */\nvar Forms = /** @class */ (function (_super) {\n    __extends(Forms, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\n     */\n    function Forms(baseUrl, path) {\n        if (path === void 0) { path = \"forms\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    Forms.prototype.getById = function (id) {\n        var i = new Form(this);\n        i.concat(\"('\" + id + \"')\");\n        return i;\n    };\n    return Forms;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nvar Form = /** @class */ (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Form;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Form = Form;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/forms.js\n// module id = 54\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nvar Subscriptions = /** @class */ (function (_super) {\n    __extends(Subscriptions, _super);\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or SharePointQueryable which forms the parent of this webhook subscriptions collection\n     */\n    function Subscriptions(baseUrl, path) {\n        if (path === void 0) { path = \"subscriptions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\n     */\n    Subscriptions.prototype.getById = function (subscriptionId) {\n        var subscription = new Subscription(this);\n        subscription.concat(\"('\" + subscriptionId + \"')\");\n        return subscription;\n    };\n    /**\n     * Creates a new webhook subscription\n     *\n     * @param notificationUrl The url to receive the notifications\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\n     */\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n            return { data: result, subscription: _this.getById(result.id) };\n        });\n    };\n    return Subscriptions;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nvar Subscription = /** @class */ (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Renews this webhook subscription\n     *\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\n     */\n    Subscription.prototype.update = function (expirationDate) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n            return { data: data, subscription: _this };\n        });\n    };\n    /**\n     * Removes this webhook subscription\n     *\n     */\n    Subscription.prototype.delete = function () {\n        return _super.prototype.deleteCore.call(this);\n    };\n    return Subscription;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.Subscription = Subscription;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/subscriptions.js\n// module id = 55\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar odata_1 = require(\"./odata\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes regional settings ODada object\n */\nvar RegionalSettings = /** @class */ (function (_super) {\n    __extends(RegionalSettings, _super);\n    /**\n     * Creates a new instance of the RegionalSettings class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this regional settings collection\n     */\n    function RegionalSettings(baseUrl, path) {\n        if (path === void 0) { path = \"regionalsettings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\n        /**\n         * Gets the collection of languages used in a server farm.\n         */\n        get: function () {\n            return new InstalledLanguages(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\n        /**\n         * Gets the collection of language packs that are installed on the server.\n         */\n        get: function () {\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\n        /**\n         * Gets time zone\n         */\n        get: function () {\n            return new TimeZone(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\n        /**\n         * Gets time zones\n         */\n        get: function () {\n            return new TimeZones(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegionalSettings;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.RegionalSettings = RegionalSettings;\n/**\n * Describes installed languages ODada queriable collection\n */\nvar InstalledLanguages = /** @class */ (function (_super) {\n    __extends(InstalledLanguages, _super);\n    function InstalledLanguages(baseUrl, path) {\n        if (path === void 0) { path = \"installedlanguages\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return InstalledLanguages;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.InstalledLanguages = InstalledLanguages;\n/**\n * Describes TimeZone ODada object\n */\nvar TimeZone = /** @class */ (function (_super) {\n    __extends(TimeZone, _super);\n    function TimeZone(baseUrl, path) {\n        if (path === void 0) { path = \"timezone\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Local Time by UTC Time\n     *\n     * @param utcTime UTC Time as Date or ISO String\n     */\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\n        var dateIsoString;\n        if (typeof utcTime === \"string\") {\n            dateIsoString = utcTime;\n        }\n        else {\n            dateIsoString = utcTime.toISOString();\n        }\n        return this.clone(TimeZone, \"utctolocaltime('\" + dateIsoString + \"')\")\n            .postCore()\n            .then(function (res) { return res.hasOwnProperty(\"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\n    };\n    /**\n     * Gets an UTC Time by Local Time\n     *\n     * @param localTime Local Time as Date or ISO String\n     */\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\n        var dateIsoString;\n        if (typeof localTime === \"string\") {\n            dateIsoString = localTime;\n        }\n        else {\n            dateIsoString = util_1.Util.dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\n        }\n        return this.clone(TimeZone, \"localtimetoutc('\" + dateIsoString + \"')\")\n            .postCore()\n            .then(function (res) { return res.hasOwnProperty(\"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\n    };\n    return TimeZone;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.TimeZone = TimeZone;\n/**\n * Describes time zones queriable collection\n */\nvar TimeZones = /** @class */ (function (_super) {\n    __extends(TimeZones, _super);\n    function TimeZones(baseUrl, path) {\n        if (path === void 0) { path = \"timezones\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\n    /**\n     * Gets an TimeZone by id\n     *\n     * @param id The integer id of the timezone to retrieve\n     */\n    TimeZones.prototype.getById = function (id) {\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\n        return this.clone(TimeZones, \"GetById(\" + id + \")\").postAsCore({}, odata_1.spODataEntity(TimeZone));\n    };\n    return TimeZones;\n}(sharepointqueryable_1.SharePointQueryableCollection));\nexports.TimeZones = TimeZones;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/regionalsettings.js\n// module id = 56\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\n    __extends(RelatedItemManagerImpl, _super);\n    function RelatedItemManagerImpl(baseUrl, path) {\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    RelatedItemManagerImpl.FromUrl = function (url) {\n        if (url === null) {\n            return new RelatedItemManagerImpl(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new RelatedItemManagerImpl(url.substr(0, index));\n        }\n        return new RelatedItemManagerImpl(url);\n    };\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".GetRelatedItems\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".GetPageOneRelatedItems\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".AddSingleLink\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemID,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\n     *\n     * @param sourceListName The source list name or list id\n     * @param sourceItemId The source item id\n     * @param targetItemUrl The target item url\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".AddSingleLinkToUrl\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                TargetItemUrl: targetItemUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\n     *\n     * @param sourceItemUrl The source item url\n     * @param targetListName The target list name or list id\n     * @param targetItemId The target item id\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".AddSingleLinkFromUrl\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemUrl: sourceItemUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null);\n        query.concat(\".DeleteSingleLink\");\n        return query.postCore({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryDeleteReverseLink: tryDeleteReverseLink,\n            }),\n        });\n    };\n    return RelatedItemManagerImpl;\n}(sharepointqueryable_1.SharePointQueryable));\nexports.RelatedItemManagerImpl = RelatedItemManagerImpl;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/relateditems.js\n// module id = 57\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nvar files_1 = require(\"../utils/files\");\nvar parsers_1 = require(\"../odata/parsers\");\nvar UserProfileQuery = /** @class */ (function (_super) {\n    __extends(UserProfileQuery, _super);\n    /**\n     * Creates a new instance of the UserProfileQuery class\n     *\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\n     */\n    function UserProfileQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\n        var _this = _super.call(this, baseUrl, path) || this;\n        _this.profileLoader = new ProfileLoader(baseUrl);\n        return _this;\n    }\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\n        /**\n         * The url of the edit profile page for the current user\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(parsers_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\n        /**\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(parsers_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * A boolean value that indicates whether the current user is being followed by the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * A boolean value that indicates whether the current user is following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets tags that the current user is following\n     *\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\n     */\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\n        if (maxCount === void 0) { maxCount = 20; }\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\n    };\n    /**\n     * Gets the people who are following the specified user\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\n        /**\n         * Gets the people who are following the current user\n         *\n         */\n        get: function () {\n            return new sharepointqueryable_1.SharePointQueryableCollection(this, \"getmyfollowers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\n        /**\n         * Gets user properties for the current user\n         *\n         */\n        get: function () {\n            return new UserProfileQuery(this, \"getmyproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the people who the specified user is following\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\n        /**\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\n         *\n         */\n        get: function () {\n            var q = this.clone(UserProfileQuery, null);\n            q.concat(\".gettrendingtags\");\n            return q.get();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the specified user profile property for the specified user\n     *\n     * @param loginName The account name of the user\n     * @param propertyName The case-sensitive name of the property to get\n     */\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Removes the specified user from the user's list of suggested people to follow\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.postCore();\n    };\n    /**\n     * A boolean values that indicates whether the first user is following the second user\n     *\n     * @param follower The account name of the user who might be following the followee\n     * @param followee The account name of the user who might be followed by the follower\n     */\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\n        var q = this.clone(UserProfileQuery, null);\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    };\n    /**\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\n     *\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\n     */\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            files_1.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\n                request.postCore({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(function (_) { return resolve(); });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Sets single value User Profile property\n     *\n     * @param accountName The account name of the user\n     * @param propertyName Property name\n     * @param propertyValue Property value\n     */\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\n        var postBody = JSON.stringify({\n            accountName: accountName,\n            propertyName: propertyName,\n            propertyValue: propertyValue,\n        });\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\n            .postCore({ body: postBody });\n    };\n    /**\n     * Sets multi valued User Profile property\n     *\n     * @param accountName The account name of the user\n     * @param propertyName Property name\n     * @param propertyValues Property values\n     */\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\n        var postBody = JSON.stringify({\n            accountName: accountName,\n            propertyName: propertyName,\n            propertyValues: propertyValues,\n        });\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\n            .postCore({ body: postBody });\n    };\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\n        var emails = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            emails[_i] = arguments[_i];\n        }\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner\n         *\n         */\n        get: function () {\n            return this.profileLoader.ownerUserProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile for the current user\n         */\n        get: function () {\n            return this.profileLoader.userProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private\n     */\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\n        return this.profileLoader.shareAllSocialData(share);\n    };\n    return UserProfileQuery;\n}(sharepointqueryable_1.SharePointQueryableInstance));\nexports.UserProfileQuery = UserProfileQuery;\nvar ProfileLoader = /** @class */ (function (_super) {\n    __extends(ProfileLoader, _super);\n    /**\n   * Creates a new instance of the ProfileLoader class\n   *\n   * @param baseUrl The url or SharePointQueryable which forms the parent of this profile loader\n   */\n    function ProfileLoader(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\", false).postCore({\n            body: JSON.stringify({ \"emailIDs\": emails }),\n        });\n    };\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n            if (this.hasBatch) {\n                q = q.inBatch(this.batch);\n            }\n            return q.postAsCore();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile of the current user.\n         *\n         */\n        get: function () {\n            return this.clone(ProfileLoader, \"getuserprofile\").postAsCore();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\n     */\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\n    };\n    /**\n     * Sets the privacy settings for this profile\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\n    };\n    return ProfileLoader;\n}(sharepointqueryable_1.SharePointQueryable));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/userprofiles.js\n// module id = 58\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/utils/files.js\n// module id = 59\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar v1_1 = require(\"./v1\");\nvar GraphRest = /** @class */ (function () {\n    function GraphRest() {\n    }\n    Object.defineProperty(GraphRest.prototype, \"v1\", {\n        get: function () {\n            return new v1_1.V1(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GraphRest;\n}());\nexports.GraphRest = GraphRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/rest.js\n// module id = 60\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = require(\"./graphqueryable\");\nvar groups_1 = require(\"./groups\");\n// import { Me } from \"./me\";\n/**\n * Root object wrapping v1 functionality for MS Graph\n *\n */\nvar V1 = /** @class */ (function (_super) {\n    __extends(V1, _super);\n    /**\n     * Creates a new instance of the V1 class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional additional path\n     */\n    function V1(baseUrl, path) {\n        if (path === void 0) { path = \"v1.0\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(V1.prototype, \"groups\", {\n        get: function () {\n            return new groups_1.Groups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return V1;\n}(graphqueryable_1.GraphQueryable));\nexports.V1 = V1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/v1.js\n// module id = 61\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = require(\"./graphqueryable\");\nvar members_1 = require(\"./members\");\nvar util_1 = require(\"../utils/util\");\nvar calendars_1 = require(\"./calendars\");\nvar conversations_1 = require(\"./conversations\");\nvar plans_1 = require(\"./plans\");\nvar photos_1 = require(\"./photos\");\nvar GroupType;\n(function (GroupType) {\n    /**\n     * Office 365 (aka unified group)\n     */\n    GroupType[GroupType[\"Office365\"] = 0] = \"Office365\";\n    /**\n     * Dynamic membership\n     */\n    GroupType[GroupType[\"Dynamic\"] = 1] = \"Dynamic\";\n    /**\n     * Security\n     */\n    GroupType[GroupType[\"Security\"] = 2] = \"Security\";\n})(GroupType = exports.GroupType || (exports.GroupType = {}));\n/**\n * Describes a collection of Field objects\n *\n */\nvar Groups = /** @class */ (function (_super) {\n    __extends(Groups, _super);\n    function Groups(baseUrl, path) {\n        if (path === void 0) { path = \"groups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a group from the collection using the specified id\n     *\n     * @param id Id of the group to get from this collection\n     */\n    Groups.prototype.getById = function (id) {\n        return new Group(this, id);\n    };\n    /**\n     * Create a new group as specified in the request body.\n     *\n     * @param name Name to display in the address book for the group\n     * @param mailNickname Mail alias for the group\n     * @param groupType Type of group being created\n     * @param additionalProperties A plain object collection of additional properties you want to set on the new group\n     */\n    Groups.prototype.add = function (name, mailNickname, groupType, additionalProperties) {\n        var _this = this;\n        if (additionalProperties === void 0) { additionalProperties = {}; }\n        var postBody = util_1.Util.extend({\n            displayName: name,\n            mailEnabled: groupType === GroupType.Office365,\n            mailNickname: mailNickname,\n            securityEnabled: groupType !== GroupType.Office365,\n        }, additionalProperties);\n        // include a group type if required\n        if (groupType !== GroupType.Security) {\n            postBody = util_1.Util.extend(postBody, {\n                groupTypes: [groupType === GroupType.Office365 ? \"Unified\" : \"DynamicMembership\"],\n            });\n        }\n        return this.postCore({\n            body: JSON.stringify(postBody),\n        }).then(function (r) {\n            return {\n                data: r,\n                group: _this.getById(r.id),\n            };\n        });\n    };\n    return Groups;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Groups = Groups;\n/**\n * Represents a group entity\n */\nvar Group = /** @class */ (function (_super) {\n    __extends(Group, _super);\n    function Group() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Group.prototype, \"caldendar\", {\n        /**\n         * The calendar associated with this group\n         */\n        get: function () {\n            return new calendars_1.Calendar(this, \"calendar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"events\", {\n        /**\n         * Retrieve a list of event objects\n         */\n        get: function () {\n            return new calendars_1.Events(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"owners\", {\n        /**\n         * Gets the collection of owners for this group\n         */\n        get: function () {\n            return new members_1.Owners(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"plans\", {\n        /**\n         * The collection of plans for this group\n         */\n        get: function () {\n            return new plans_1.Plans(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"members\", {\n        /**\n         * Gets the collection of members for this group\n         */\n        get: function () {\n            return new members_1.Members(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"conversations\", {\n        /**\n         * Gets the conversations collection for this group\n         */\n        get: function () {\n            return new conversations_1.Conversations(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"acceptedSenders\", {\n        /**\n         * Gets the collection of accepted senders for this group\n         */\n        get: function () {\n            return new conversations_1.Senders(this, \"acceptedsenders\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"rejectedSenders\", {\n        /**\n         * Gets the collection of rejected senders for this group\n         */\n        get: function () {\n            return new conversations_1.Senders(this, \"rejectedsenders\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Group.prototype, \"photo\", {\n        /**\n         * The photo associated with the group\n         */\n        get: function () {\n            return new photos_1.Photo(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Add the group to the list of the current user's favorite groups. Supported for only Office 365 groups\n     */\n    Group.prototype.addFavorite = function () {\n        return this.clone(Group, \"addFavorite\").postCore();\n    };\n    /**\n     * Return all the groups that the specified group is a member of. The check is transitive\n     *\n     * @param securityEnabledOnly\n     */\n    Group.prototype.getMemberGroups = function (securityEnabledOnly) {\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\n        return this.clone(Group, \"getMemberGroups\").postCore({\n            body: JSON.stringify({\n                securityEnabledOnly: securityEnabledOnly,\n            }),\n        });\n    };\n    /**\n     * Deletes this group\n     */\n    Group.prototype.delete = function () {\n        return this.deleteCore();\n    };\n    /**\n     * Update the properties of a group object\n     *\n     * @param properties Set of properties of this group to update\n     */\n    Group.prototype.update = function (properties) {\n        return this.patchCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    /**\n     * Remove the group from the list of the current user's favorite groups. Supported for only Office 365 groups\n     */\n    Group.prototype.removeFavorite = function () {\n        return this.clone(Group, \"removeFavorite\").postCore();\n    };\n    /**\n     * Reset the unseenCount of all the posts that the current user has not seen since their last visit\n     */\n    Group.prototype.resetUnseenCount = function () {\n        return this.clone(Group, \"resetUnseenCount\").postCore();\n    };\n    /**\n     * Calling this method will enable the current user to receive email notifications for this group,\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\n     */\n    Group.prototype.subscribeByMail = function () {\n        return this.clone(Group, \"subscribeByMail\").postCore();\n    };\n    /**\n     * Calling this method will prevent the current user from receiving email notifications for this group\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\n     */\n    Group.prototype.unsubscribeByMail = function () {\n        return this.clone(Group, \"unsubscribeByMail\").postCore();\n    };\n    /**\n     * Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range, from the default calendar of a group\n     *\n     * @param start Start date and time of the time range\n     * @param end End date and time of the time range\n     */\n    Group.prototype.getCalendarView = function (start, end) {\n        var view = this.clone(Group, \"calendarView\");\n        view.query.add(\"startDateTime\", start.toISOString());\n        view.query.add(\"endDateTime\", end.toISOString());\n        return view.get();\n    };\n    return Group;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Group = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/groups.js\n// module id = 62\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = require(\"./graphqueryable\");\nvar Members = /** @class */ (function (_super) {\n    __extends(Members, _super);\n    function Members(baseUrl, path) {\n        if (path === void 0) { path = \"members\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Use this API to add a member to an Office 365 group, a security group or a mail-enabled security group through\n     * the members navigation property. You can add users or other groups.\n     * Important: You can add only users to Office 365 groups.\n     *\n     * @param id Full @odata.id of the directoryObject, user, or group object you want to add (ex: https://graph.microsoft.com/v1.0/directoryObjects/${id})\n     */\n    Members.prototype.add = function (id) {\n        return this.clone(Members, \"$ref\").postCore({\n            body: JSON.stringify({\n                \"@odata.id\": id,\n            }),\n        });\n    };\n    /**\n     * Gets a member of the group by id\n     *\n     * @param id Group member's id\n     */\n    Members.prototype.getById = function (id) {\n        return new Member(this, id);\n    };\n    return Members;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Members = Members;\nvar Member = /** @class */ (function (_super) {\n    __extends(Member, _super);\n    function Member() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Member;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Member = Member;\nvar Owners = /** @class */ (function (_super) {\n    __extends(Owners, _super);\n    function Owners(baseUrl, path) {\n        if (path === void 0) { path = \"owners\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return Owners;\n}(Members));\nexports.Owners = Owners;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/members.js\n// module id = 63\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = require(\"./graphqueryable\");\n// import { Attachments } from \"./attachments\";\nvar Calendars = /** @class */ (function (_super) {\n    __extends(Calendars, _super);\n    function Calendars(baseUrl, path) {\n        if (path === void 0) { path = \"calendars\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return Calendars;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Calendars = Calendars;\nvar Calendar = /** @class */ (function (_super) {\n    __extends(Calendar, _super);\n    function Calendar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Calendar.prototype, \"events\", {\n        get: function () {\n            return new Events(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Calendar;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Calendar = Calendar;\nvar Events = /** @class */ (function (_super) {\n    __extends(Events, _super);\n    function Events(baseUrl, path) {\n        if (path === void 0) { path = \"events\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Events.prototype.getById = function (id) {\n        return new Event(this, id);\n    };\n    /**\n     * Adds a new event to the collection\n     *\n     * @param properties The set of properties used to create the event\n     */\n    Events.prototype.add = function (properties) {\n        var _this = this;\n        return this.postCore({\n            body: JSON.stringify(properties),\n        }).then(function (r) {\n            return {\n                data: r,\n                event: _this.getById(r.id),\n            };\n        });\n    };\n    return Events;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Events = Events;\nvar Event = /** @class */ (function (_super) {\n    __extends(Event, _super);\n    function Event() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // TODO:: when supported\n    // /**\n    //  * Gets the collection of attachments for this event\n    //  */\n    // public get attachments(): Attachments {\n    //     return new Attachments(this);\n    // }\n    /**\n     * Update the properties of an event object\n     *\n     * @param properties Set of properties of this event to update\n     */\n    Event.prototype.update = function (properties) {\n        return this.patchCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    /**\n     * Deletes this event\n     */\n    Event.prototype.delete = function () {\n        return this.deleteCore();\n    };\n    return Event;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Event = Event;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/calendars.js\n// module id = 64\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = require(\"./graphqueryable\");\nvar attachments_1 = require(\"./attachments\");\nvar Conversations = /** @class */ (function (_super) {\n    __extends(Conversations, _super);\n    function Conversations(baseUrl, path) {\n        if (path === void 0) { path = \"conversations\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Create a new conversation by including a thread and a post.\n     *\n     * @param properties Properties used to create the new conversation\n     */\n    Conversations.prototype.add = function (properties) {\n        return this.postCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    /**\n     * Gets a conversation from this collection by id\n     *\n     * @param id Group member's id\n     */\n    Conversations.prototype.getById = function (id) {\n        return new Conversation(this, id);\n    };\n    return Conversations;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Conversations = Conversations;\nvar Threads = /** @class */ (function (_super) {\n    __extends(Threads, _super);\n    function Threads(baseUrl, path) {\n        if (path === void 0) { path = \"threads\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a thread from this collection by id\n     *\n     * @param id Group member's id\n     */\n    Threads.prototype.getById = function (id) {\n        return new Thread(this, id);\n    };\n    /**\n     * Adds a new thread to this collection\n     *\n     * @param properties properties used to create the new thread\n     * @returns Id of the new thread\n     */\n    Threads.prototype.add = function (properties) {\n        return this.postCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    return Threads;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Threads = Threads;\nvar Posts = /** @class */ (function (_super) {\n    __extends(Posts, _super);\n    function Posts(baseUrl, path) {\n        if (path === void 0) { path = \"posts\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a thread from this collection by id\n     *\n     * @param id Group member's id\n     */\n    Posts.prototype.getById = function (id) {\n        return new Post(this, id);\n    };\n    /**\n     * Adds a new thread to this collection\n     *\n     * @param properties properties used to create the new thread\n     * @returns Id of the new thread\n     */\n    Posts.prototype.add = function (properties) {\n        return this.postCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    return Posts;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Posts = Posts;\nvar Conversation = /** @class */ (function (_super) {\n    __extends(Conversation, _super);\n    function Conversation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Conversation.prototype, \"threads\", {\n        /**\n         * Get all the threads in a group conversation.\n         */\n        get: function () {\n            return new Threads(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this conversation\n     */\n    Conversation.prototype.update = function (properties) {\n        return this.patchCore({\n            body: JSON.stringify(properties),\n        });\n    };\n    /**\n     * Deletes this member from the group\n     */\n    Conversation.prototype.delete = function () {\n        return this.deleteCore();\n    };\n    return Conversation;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Conversation = Conversation;\nvar Thread = /** @class */ (function (_super) {\n    __extends(Thread, _super);\n    function Thread() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Thread.prototype, \"posts\", {\n        /**\n         * Get all the threads in a group conversation.\n         */\n        get: function () {\n            return new Posts(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reply to a thread in a group conversation and add a new post to it\n     *\n     * @param post Contents of the post\n     */\n    Thread.prototype.reply = function (post) {\n        return this.clone(Thread, \"reply\").postCore({\n            body: JSON.stringify({\n                post: post,\n            }),\n        });\n    };\n    /**\n     * Deletes this member from the group\n     */\n    Thread.prototype.delete = function () {\n        return this.deleteCore();\n    };\n    return Thread;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Thread = Thread;\nvar Post = /** @class */ (function (_super) {\n    __extends(Post, _super);\n    function Post() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Post.prototype, \"attachments\", {\n        get: function () {\n            return new attachments_1.Attachments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Deletes this post\n     */\n    Post.prototype.delete = function () {\n        return this.deleteCore();\n    };\n    /**\n     * Forward a post to a recipient\n     */\n    Post.prototype.forward = function (info) {\n        return this.clone(Post, \"forward\").postCore({\n            body: JSON.stringify(info),\n        });\n    };\n    /**\n     * Reply to a thread in a group conversation and add a new post to it\n     *\n     * @param post Contents of the post\n     */\n    Post.prototype.reply = function (post) {\n        return this.clone(Post, \"reply\").postCore({\n            body: JSON.stringify({\n                post: post,\n            }),\n        });\n    };\n    return Post;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Post = Post;\nvar Senders = /** @class */ (function (_super) {\n    __extends(Senders, _super);\n    function Senders(baseUrl, path) {\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Add a new user or group to this senders collection\n     * @param id The full @odata.id value to add (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\n     */\n    Senders.prototype.add = function (id) {\n        return this.clone(Senders, \"$ref\").postCore({\n            body: JSON.stringify({\n                \"@odata.id\": id,\n            }),\n        });\n    };\n    /**\n     * Removes the entity from the collection\n     *\n     * @param id The full @odata.id value to remove (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\n     */\n    Senders.prototype.remove = function (id) {\n        var remover = this.clone(Senders, \"$ref\");\n        remover.query.add(\"$id\", id);\n        return remover.deleteCore();\n    };\n    return Senders;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Senders = Senders;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/conversations.js\n// module id = 65\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = require(\"./graphqueryable\");\nvar Attachments = /** @class */ (function (_super) {\n    __extends(Attachments, _super);\n    function Attachments(baseUrl, path) {\n        if (path === void 0) { path = \"attachments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a member of the group by id\n     *\n     * @param id Attachment id\n     */\n    Attachments.prototype.getById = function (id) {\n        return new Attachment(this, id);\n    };\n    /**\n     * Add attachment to this collection\n     *\n     * @param name Name given to the attachment file\n     * @param bytes File content\n     */\n    Attachments.prototype.addFile = function (name, bytes) {\n        return this.postCore({\n            body: JSON.stringify({\n                \"@odata.type\": \"#microsoft.graph.fileAttachment\",\n                contentBytes: bytes,\n                name: name,\n            }),\n        });\n    };\n    return Attachments;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Attachments = Attachments;\nvar Attachment = /** @class */ (function (_super) {\n    __extends(Attachment, _super);\n    function Attachment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Attachment;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Attachment = Attachment;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/attachments.js\n// module id = 66\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = require(\"./graphqueryable\");\nvar Plans = /** @class */ (function (_super) {\n    __extends(Plans, _super);\n    function Plans(baseUrl, path) {\n        if (path === void 0) { path = \"planner/plans\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a plan from this collection by id\n     *\n     * @param id Plan's id\n     */\n    Plans.prototype.getById = function (id) {\n        return new Plan(this, id);\n    };\n    return Plans;\n}(graphqueryable_1.GraphQueryableCollection));\nexports.Plans = Plans;\nvar Plan = /** @class */ (function (_super) {\n    __extends(Plan, _super);\n    function Plan() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Plan;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Plan = Plan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/plans.js\n// module id = 67\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = require(\"./graphqueryable\");\nvar parsers_1 = require(\"../odata/parsers\");\nvar Photo = /** @class */ (function (_super) {\n    __extends(Photo, _super);\n    function Photo(baseUrl, path) {\n        if (path === void 0) { path = \"photo\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the image bytes as a blob (browser)\n     */\n    Photo.prototype.getBlob = function () {\n        return this.clone(Photo, \"$value\", false).get(new parsers_1.BlobFileParser());\n    };\n    /**\n     * Gets the image file byets as a Buffer (node.js)\n     */\n    Photo.prototype.getBuffer = function () {\n        return this.clone(Photo, \"$value\", false).get(new parsers_1.BufferFileParser());\n    };\n    /**\n     * Sets the file bytes\n     *\n     * @param content Image file contents, max 4 MB\n     */\n    Photo.prototype.setContent = function (content) {\n        return this.clone(Photo, \"$value\", false).patchCore({\n            body: content,\n        });\n    };\n    return Photo;\n}(graphqueryable_1.GraphQueryableInstance));\nexports.Photo = Photo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/photos.js\n// module id = 68\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"../configuration/providers/index\"));\nvar collections_1 = require(\"../collections/collections\");\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = require(\"../utils/util\");\nexports.Util = util_1.Util;\n__export(require(\"../utils/logging\"));\n__export(require(\"../utils/exceptions\"));\n__export(require(\"../utils/storage\"));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/exports/core.js\n// module id = 69\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = require(\"./spListConfigurationProvider\");\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/configuration/providers/index.js\n// module id = 70\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nvar SPListConfigurationProvider = /** @class */ (function () {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle) {\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\n        /**\n         * Gets the url of the SharePoint site, where the configuration list is located\n         *\n         * @return {string} Url address of the site\n         */\n        get: function () {\n            return this.sourceWeb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\n        /**\n         * Gets the title of the SharePoint list, which contains the configuration settings\n         *\n         * @return {string} List title\n         */\n        get: function () {\n            return this.sourceListTitle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then(function (data) {\n            return data.reduce(function (configuration, item) {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    };\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    SPListConfigurationProvider.prototype.asCaching = function () {\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    };\n    return SPListConfigurationProvider;\n}());\nexports.default = SPListConfigurationProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/configuration/providers/spListConfigurationProvider.js\n// module id = 71\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"../graph/index\"));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/exports/graph.js\n// module id = 72\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphqueryable_1 = require(\"./graphqueryable\");\nexports.GraphQueryable = graphqueryable_1.GraphQueryable;\nexports.GraphQueryableCollection = graphqueryable_1.GraphQueryableCollection;\nexports.GraphQueryableInstance = graphqueryable_1.GraphQueryableInstance;\nexports.GraphQueryableSearchableCollection = graphqueryable_1.GraphQueryableSearchableCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/graph/index.js\n// module id = 73\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar httpclient_1 = require(\"../net/httpclient\");\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = require(\"../net/sprequestexecutorclient\");\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = require(\"../net/nodefetchclient\");\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = require(\"../net/fetchclient\");\nexports.FetchClient = fetchclient_1.FetchClient;\nvar graphclient_1 = require(\"../net/graphclient\");\nexports.GraphHttpClient = graphclient_1.GraphHttpClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/exports/net.js\n// module id = 74\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nvar SPRequestExecutorClient = /** @class */ (function () {\n    function SPRequestExecutorClient() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = function (spResponse) {\n            var responseHeaders = new Headers();\n            for (var h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\n        var headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        // this is a way to determine if we need to set the binaryStringRequestBody by testing what method we are calling\n        // and if they would normally have a binary body. This addresses issue #565.\n        var paths = [\n            \"files\\/add\",\n            \"files\\/addTemplateFile\",\n            \"file\\/startUpload\",\n            \"file\\/continueUpload\",\n            \"file\\/finishUpload\",\n            \"attachmentfiles\\/add\",\n        ];\n        var isBinaryRequest = (new RegExp(paths.join(\"|\"), \"i\")).test(url);\n        return new Promise(function (resolve, reject) {\n            var requestOptions = {\n                error: function (error) {\n                    reject(_this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: function (response) {\n                    resolve(_this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n                if (isBinaryRequest) {\n                    requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n                }\n            }\n            executor.executeAsync(requestOptions);\n        });\n    };\n    return SPRequestExecutorClient;\n}());\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/net/sprequestexecutorclient.js\n// module id = 75\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nvar NodeFetchClient = /** @class */ (function () {\n    function NodeFetchClient() {\n    }\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    NodeFetchClient.prototype.fetch = function () {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    };\n    return NodeFetchClient;\n}());\nexports.NodeFetchClient = NodeFetchClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/net/nodefetchclientbrowser.js\n// module id = 76\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"../odata/core\"));\n__export(require(\"../odata/parsers\"));\n__export(require(\"../odata/caching\"));\n__export(require(\"../odata/queryable\"));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/exports/odata.js\n// module id = 77\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"../sharepoint/index\"));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/exports/sp.js\n// module id = 78\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar appcatalog_1 = require(\"./appcatalog\");\nexports.AppCatalog = appcatalog_1.AppCatalog;\nexports.App = appcatalog_1.App;\n__export(require(\"./clientsidepages\"));\nvar batch_1 = require(\"./batch\");\nexports.ODataBatch = batch_1.ODataBatch;\nvar fields_1 = require(\"./fields\");\nexports.Field = fields_1.Field;\nexports.Fields = fields_1.Fields;\nvar files_1 = require(\"./files\");\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nexports.File = files_1.File;\nexports.Files = files_1.Files;\nvar folders_1 = require(\"./folders\");\nexports.Folder = folders_1.Folder;\nexports.Folders = folders_1.Folders;\nvar items_1 = require(\"./items\");\nexports.Item = items_1.Item;\nexports.Items = items_1.Items;\nexports.ItemVersion = items_1.ItemVersion;\nexports.ItemVersions = items_1.ItemVersions;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = require(\"./navigation\");\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = require(\"./lists\");\nexports.List = lists_1.List;\nexports.Lists = lists_1.Lists;\nvar odata_1 = require(\"./odata\");\nexports.spExtractODataId = odata_1.spExtractODataId;\nexports.spODataEntity = odata_1.spODataEntity;\nexports.spODataEntityArray = odata_1.spODataEntityArray;\nvar sharepointqueryable_1 = require(\"./sharepointqueryable\");\nexports.SharePointQueryable = sharepointqueryable_1.SharePointQueryable;\nexports.SharePointQueryableInstance = sharepointqueryable_1.SharePointQueryableInstance;\nexports.SharePointQueryableCollection = sharepointqueryable_1.SharePointQueryableCollection;\nvar roles_1 = require(\"./roles\");\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = require(\"./search\");\nexports.Search = search_1.Search;\nexports.SearchQueryBuilder = search_1.SearchQueryBuilder;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nexports.SearchBuiltInSourceId = search_1.SearchBuiltInSourceId;\nvar searchsuggest_1 = require(\"./searchsuggest\");\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = require(\"./site\");\nexports.Site = site_1.Site;\n__export(require(\"./social\"));\n__export(require(\"./types\"));\nvar utilities_1 = require(\"./utilities\");\nexports.UtilityMethod = utilities_1.UtilityMethod;\nvar webparts_1 = require(\"./webparts\");\nexports.WebPartDefinitions = webparts_1.WebPartDefinitions;\nexports.WebPartDefinition = webparts_1.WebPartDefinition;\nexports.WebPart = webparts_1.WebPart;\nvar webs_1 = require(\"./webs\");\nexports.Web = webs_1.Web;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sp-pnp-js/lib/sharepoint/index.js\n// module id = 79\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _config = require(\"../config.js\");\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (data) {\n  return \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">\\n    <img class=\\\"avatar\\\" src=\\\"\" + (data.avatar == null || data.avatar.length == 0 ? \"../siteassets/\" + _config2.default.appname + \"/assets/avatar-generic.png\" : data.avatar) + \"\\\" alt=\\\"\" + \"\".concat(data.title, ' ', data.last_name) + \"\\\" />\\n  </div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"Title\\\">First Name</label>\\n      <input id=\\\"Title\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"\" + (data.Title == null ? '' : data.Title) + \"\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"last_name\\\">Last Name</label>\\n      <input id=\\\"last_name\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"\" + (data.last_name == null ? '' : data.last_name) + \"\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"company\\\">Company</label>\\n      <input id=\\\"company\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"\" + (data.company == null ? '' : data.company) + \"\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">E-Mail</label>\\n      <input id=\\\"email\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"\" + (data.email == null ? '' : data.email) + \"\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description</label>\\n      <textarea id=\\\"description\\\" class=\\\"form-control\\\">\" + (data.description == null ? '' : data.description) + \"</textarea>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"float-right\\\">\\n      <button class=\\\"btn btn-outline-default edit-form-button\\\" data-action=\\\"save\\\" data-id=\\\"\" + data.Id + \"\\\" type=\\\"button\\\">Save</button>\\n      <button class=\\\"btn btn-outline-default edit-form-button\\\" data-action=\\\"cancel\\\" type=\\\"button\\\">Cancel</button>\\n    </div>\\n  </div>\\n</div>\\n\";\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/templates/edit.js\n// module id = 80\n// module chunks = 0"],"sourceRoot":""}